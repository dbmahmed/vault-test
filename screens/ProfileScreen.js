import React from 'react';
import * as CustomCode from '../CustomCode';
import * as GlobalStyles from '../GlobalStyles.js';
import * as SwaggerAPIApi from '../apis/SwaggerAPIApi.js';
import * as GlobalVariables from '../config/GlobalVariableContext';
import Images from '../config/Images';
import * as BetIndicators from '../custom-files/BetIndicators';
import abbrTeamName from '../global-functions/abbrTeamName';
import atRiskZero from '../global-functions/atRiskZero';
import segmentLogScreen from '../global-functions/segmentLogScreen';
import segmentLogTrack from '../global-functions/segmentLogTrack';
import * as Utils from '../utils';
import Breakpoints from '../utils/Breakpoints';
import * as StyleSheet from '../utils/StyleSheet';
import {
  ActionSheet,
  ActionSheetCancel,
  ActionSheetItem,
  Button,
  Circle,
  CircleImage,
  DatePicker,
  Divider,
  Icon,
  IconButton,
  LinearGradient,
  ScreenContainer,
  Surface,
  Touchable,
  withTheme,
} from '@draftbit/ui';
import { useIsFocused } from '@react-navigation/native';
import { useAnalytics } from '@segment/analytics-react-native';
import * as WebBrowser from 'expo-web-browser';
import {
  ActivityIndicator,
  FlatList,
  Image,
  Modal,
  RefreshControl,
  ScrollView,
  StatusBar,
  Text,
  TextInput,
  View,
  useWindowDimensions,
} from 'react-native';
import { Fetch } from 'react-request';

const ProfileScreen = props => {
  const dimensions = useWindowDimensions();
  const Constants = GlobalVariables.useValues();
  const Variables = Constants;
  const setGlobalVariableValue = GlobalVariables.useSetValue();
  const segment = useAnalytics();
  const mostProfitableBetTypesCompare = x => {
    return x == 'Bet Types';
  };

  const tutorialScreenCounter3 = x => {
    return x == 3 ? true : false;
  };

  const typeParlayCompare = type => {
    return type === 'parlay';
  };

  const addLiveBetFilter = async item => {
    await Constants.filterLiveBet.push(item);
  };

  const liveBetExists = live => {
    return live == true ? '(Live)' : '';
  };

  const filterOutcomeButton = x => {
    return Constants.filterOutcome.includes(x) ? true : false;
  };

  const tutorialScreenCounter1 = x => {
    return x == 1 ? true : false;
  };

  const atRiskSuffix = atRisk => {
    // Old Suffix
    // return "$" + (atRisk/100);

    let res = (Math.abs(atRisk) / 100).toFixed(2);
    let lastIndex = res[res.length - 1];
    let secondLastIndex = res[res.length - 2];
    const comp = lastIndex == 0 && secondLastIndex == 0;
    if (comp) {
      res = parseInt(res);
    }

    if (atRisk < 0) {
      return '-$' + res;
    } else {
      return '$' + res;
    }
  };

  const modifySportsbookName = x => {
    return x === 'Total' ? 'All Sportsbooks' : x;
  };

  const ringLegendShownSwitcher = () => {
    //return x === Constants.ringLegendShown ? false : true;

    return Constants.ringLegendShown == false ? true : false;
  };

  const filterBetStatusFunction = x => {
    return x == Constants.filterBetType;
  };

  const checkNullValue = x => {
    return x !== null ? x : '-';
  };

  const toWinSuffix = toWin => {
    // Old Suffix
    // return "$" + (toWin/100);

    let res = (Math.abs(toWin) / 100).toFixed(2);
    let lastIndex = res[res.length - 1];
    let secondLastIndex = res[res.length - 2];
    const comp = lastIndex == 0 && secondLastIndex == 0;
    if (comp) {
      res = parseInt(res);
    }

    if (toWin < 0) {
      return '-$' + res;
    } else {
      return '$' + res;
    }
  };

  const mostProfitableLeaguesCompare = x => {
    return x == 'Leagues';
  };

  const propDetailsTeam = x => {
    return x.propDetails && x.propDetails.team ? x.propDetails.team + ' ' : '';
  };

  const showParlayBookDescription = x => {
    if (
      (x.propDetails == null ||
        (x.propDetails.player == null &&
          x.propDetails.team == null &&
          x.propDetails.future == null &&
          x.propDetails.metricSpecial == null)) &&
      (x.proposition == null ||
        x.proposition == 'spread' ||
        x.proposition == 'total' ||
        x.proposition == 'moneyline' ||
        x.proposition == 'method of result') &&
      x.position == null &&
      x.line == null &&
      x.segment == null
    ) {
      if (x.bookDescription.slice(-2) == '; ') {
        desc = x.bookDescription.slice(0, -2) + ' ';
      } else if (
        x.bookDescription.slice(-1) == ';' ||
        x.bookDescription.slice(-1) == ' '
      ) {
        desc = x.bookDescription.slice(0, -1) + ' ';
      } else {
        desc = x.bookDescription + ' ';
      }

      str = desc.indexOf(' - ');
      return str > 0 ? desc.substring(str + 3) : desc;
    } else {
      return '';
    }
  };

  const shareScreenNameUsername = x => {
    return x == 'username';
  };

  const filterLiveBetButton = x => {
    return Constants.filterLiveBet.includes(x) ? true : false;
  };

  const cashoutOutcomeCompare = outcome => {
    return outcome === 'cashout';
  };

  const removeLiveBetFilter = async item => {
    const array = Constants.filterLiveBet;
    for (var i = 0; i < array.length; i++) {
      if (array[i] === item) {
        await // Not sure if this is needed, or if this needs to be asynchronous
        array.splice(i, 1);
      }
    }

    // Code found here: https://love2dev.com/blog/javascript-remove-from-array/
  };

  const getLine = x => {
    return x[0].line;
  };

  const typePropCompare = type => {
    return type === 'prop';
  };

  const propDetailsFuture = x => {
    return x.propDetails && x.propDetails.future == true ? '(Future) ' : '';
  };

  const awayScoreAvailable = x => {
    return x !== null;
  };

  const positionSuffix = position => {
    return position == null ? '' : position + ' ';
  };

  const betStatusHistorical = x => {
    return !x.includes('pending');
  };

  const segmentExists = segment => {
    return segment == null ? '' : '(' + segment + ') ';
  };

  const compareGradeTrapAvoidance = x => {
    return x == 'trapAvoidance';
  };

  const trendPositive = x => {
    return x >= 0.5 ? true : false;
  };

  const filterAllLeagues = x => {
    return x.length === 0;
  };

  const firstCharacter = x => {
    return x == null ? '' : x.charAt(0);
  };

  const netProfitSuffix = netProfit => {
    // Old suffix
    // return netProfit < 0 ? "-$" + Math.abs(netProfit/100) : "$" + (netProfit/100);

    let res = (Math.abs(netProfit) / 100).toFixed(2);
    let lastIndex = res[res.length - 1];
    let secondLastIndex = res[res.length - 2];
    const comp = lastIndex == 0 && secondLastIndex == 0;
    if (comp) {
      res = parseInt(res);
    }

    if (netProfit < 0) {
      return '-$' + res;
    } else {
      return '$' + res;
    }
  };

  const winOutcomeCompare = outcome => {
    return outcome === 'win' || outcome === 'halfwin';
  };

  const gradedBetsFound = topLevel => {
    let counter = 0;
    for (const input of topLevel) {
      if (input.outcome != null) counter += 1;
    }
    return counter > 0 ? false : true;
  };

  const gradeColorNull = x => {
    return x <= 0 || x == null;
  };

  const parlayLegCount = bets => {
    return bets.length;
  };

  const propositionUncommonDisplay = proposition => {
    if (proposition == null) {
      return '';
    } else if (proposition === 'spread') {
      return '';
    } else if (proposition === 'total') {
      return '';
    } else if (proposition === 'moneyline') {
      return '';
    } else if (proposition === 'method of result') {
      return '';
    } else {
      return proposition.charAt(0).toUpperCase() + proposition.slice(1) + ' ';
    }

    // || "total" || "moneyline" || "method of result"

    /*if (proposition == "total" || "spread" || "moneyline" || "method of result" || null){
 return null}
else{
return proposition.charAt(0).toUpperCase() + proposition.slice(1)};*/

    //return proposition == "total" || "spread" || "moneyline" || "method of result" || null ? "" : " " + proposition2;
  };

  const addUnderFilter = async item => {
    await Constants.filterUnder.splice(0, 1, item);
  };

  const filterSportsbookButton = x => {
    if (Constants.filterSportsbook.length == 0 && x === 'Total') {
      return true;
    } else if (Constants.filterSportsbook.includes(x)) {
      return true;
    } else {
      return false;
    }
  };

  const filterUnderButton = x => {
    return Constants.filterUnder.includes(x) ? true : false;
  };

  const propositionTotal = proposition => {
    return proposition === 'total';
  };

  const roiSyntax = roi => {
    return roi > 0
      ? `+${Math.round(roi * 10000) / 100}%`
      : `${Math.round(roi * 10000) / 100}%`;
  };

  const checkWaitlist = x => {
    if (x !== 0 || x !== null) {
      return false;
    }
  };

  const filterLeagueApplied = bets => {
    const primaryLeagues = [
      'NFL',
      'NCAAF',
      'NBA',
      'NCAAMB',
      'MLB',
      'NHL',
      'UFC',
      null,
    ];

    if (Constants.filterLeagueApply.length == 0) {
      return true;
    } else {
      try {
        let exist = false;
        for (let x = 0; x < bets.length; x++) {
          if (Constants.filterLeagueApply.includes(bets[x].event.league)) {
            exist = true;
          } else if (Constants.filterLeagueApply.includes('otherLeagues')) {
            exist = primaryLeagues.includes(bets[x].event.league)
              ? exist
              : true;
          } else {
            exist;
          }
        }
        return exist;
      } catch (y) {
        return false;
      }
    }

    // Three alternatives exist here.
    // The first is if All Leagues is selected, it should just call everything true.  (COMPLETE)
    // The second is if otherLeagues is selected, it should pull anything that does not equal NFL, NCAAF, NCAAB, etc.
    // The third is if the league is empty/null. In this case, it should not pull the bets when otherLeagues is selected
  };

  const futureBetExists = future => {
    return future == true ? '(Future) ' : '';
  };

  const profileTabHistoricalOrPending = x => {
    //profileTabHistoricalOrPending
    return x === 'historical' || x === 'pending';
  };

  const dateStandard = startTime => {
    const month = [
      'Jan',
      'Feb',
      'Mar',
      'Apr',
      'May',
      'Jun',
      'Jul',
      'Aug',
      'Sep',
      'Oct',
      'Nov',
      'Dec',
    ];
    const date = new Date(startTime);
    let str = month[date.getMonth()] + ' ' + date.getDate();
    if (date.getFullYear() === new Date().getFullYear()) {
      str = str;
    } else {
      str = str + ', ' + date.getFullYear();
    }
    return str;
  };

  const checkSportsbooksConnected = sportsbooks => {
    let connected = false;
    for (let x = 0; x < sportsbooks.length; x++) {
      if (sportsbooks[x].account.latestRefreshResponse == null) {
        connected = true;
      } else if (
        (new Date().getTime() -
          new Date(sportsbooks[x].account.betRefreshRequested).getTime()) /
          1000 >=
          60 * 60 * 10 ||
        sportsbooks[x].account.latestRefreshResponse.status == 401 ||
        sportsbooks[x].account.latestRefreshResponse.status == 403 ||
        sportsbooks[x].account.latestRefreshResponse.status == 500
      ) {
        connected = false;
        break;
      } else {
        connected = true;
      }
    }

    Constants.sportsbooksConnected = connected;

    setSportsbooksConnected(Constants.sportsbooksConnected);

    return sportsbooks;
  };

  const valuePositive = x => {
    return Number(x) > 0;
  };

  const eventNotExist = event => {
    return event == null;
  };

  // Sets the total bankroll amount to compare the the amount pending for the Active Bets Pending Ring
  const totalBankroll = x => {
    Constants.totalBankroll = x;
    setTotalBankroll(Constants.totalBankroll);
  };

  const unitSyntax = x => {
    const units = x / 100 / Constants.userDefaultUnitSize;
    return '(' + `${Math.round(units * 100) / 100}` + 'U)';
  };

  const filterDateButton = x => {
    return Constants.filterDate.includes(x) ? true : false;
  };

  const oddsAmericanSyntax = oddsAmerican => {
    //return oddsAmerican < 0 ? "(" + oddsAmerican + ") " : "(+" + oddsAmerican + ") ";

    if (oddsAmerican == null) {
      return '';
    } else if (oddsAmerican < 0) {
      return '(' + oddsAmerican + ') ';
    } else {
      return '(+' + oddsAmerican + ') ';
    }
  };

  const filterLiveBet = x => {
    return Constants.filterLiveBet.includes(x) ? true : false;
  };

  const typeMultilegCompare = type => {
    return type === 'parlay' || type === 'teaser';
  };

  const spacingSuffix = x => {
    return x == null ? '' : x + ' ';
  };

  const addDateFilter = async item => {
    await Constants.filterDate.splice(0, 1, item);
  };

  const addOutcomeFilter = async item => {
    await Constants.filterOutcome.push(item);
  };

  const typeSingleCompare = type => {
    return type === 'single';
  };

  const getPropDetailsPlayer = x => {
    return x[0].propDetails == null ? '' : x[0].propDetails.player;
  };

  const removeOutcomeFilter = async item => {
    const array = Constants.filterOutcome;
    for (var i = 0; i < array.length; i++) {
      if (array[i] === item) {
        await // Not sure if this is needed, or if this needs to be asynchronous
        array.splice(i, 1);
      }
    }

    // Code found here: https://love2dev.com/blog/javascript-remove-from-array/
  };

  const typeTeaserCompare = type => {
    return type === 'teaser';
  };

  const profileTabHistorical = x => {
    //profileTabHistorical
    return x === 'historical';
  };

  const gradeColorPoor = x => {
    return x > 0.28 && x <= 0.52;
  };

  const getProposition = x => {
    return x[0].proposition;
  };

  const filterBetTypeButton = x => {
    return Constants.filterBetType.includes(x) ? true : false;
  };

  const toUpperCase = x => {
    return x.toUpperCase();
  };

  const filterLeagueButton = x => {
    return Constants.filterLeague.includes(x) ? true : false;
  };

  const checkAllSportsbooksConnected = x => {
    const t1 = new Date(x.account.betRefreshRequested).getTime();
    const t2 = new Date().getTime();
    const diffSec = (t2 - t1) / 1000;

    if (x.length == 0 || x == null) {
      Constants.allSportsbooksConnected = true;
    } else {
      let exist = true;
      for (let i = 0; i < x.length; i++) {
        if ((i = 0)) {
          continue;
        } else if (
          diffSec / (3600 * 24) >= 2 ||
          x.account.latestRefreshResponse.status == 401 ||
          x.account.latestRefreshResponse.status == 403 ||
          x.account.latestRefreshResponse.status == 500
        ) {
          exist = false;
        }
      }
      Constants.allSportsbooksConnected = exist;
    }

    setAllSportsbooksConnected(Constants.allSportsbooksConnected);

    //setSportsbooksSynced(Constants.allSportsbooksConnected);

    /*
if (sportsbooks.length !== 0){
Constants.sportsbooksSynced = true;
Constants.waitlisted = false;
};

setSportsbooksSynced(Constants.sportsbooksSynced);

return sportsbooks;
*/
  };

  const shareScreenNameName = x => {
    return x == 'name';
  };

  const addBetStatusFilter = async item => {
    await Constants.filterBetStatusApply.push(item);
  };

  const winPercentageSyntax = x => {
    return '(' + `${Math.round(x * 10000) / 100}` + '%)';
  };

  const totalBetCount = x => {
    if (x !== null) {
      const [w, l, p] = x.split('-');
      //setWins(w);
      ///setLosses(l);
      //setPushes(p);

      return Number(w) + Number(l) + Number(p);
    } else {
      return '-';
    }
  };

  const addBetTypeFilter = async item => {
    await Constants.filterBetType.push(item);
  };

  const checkEarlyAccessCode = x => {
    return x !== 'V7XyG' ? true : false;
  };

  const countFiltersApplied = () => {
    const length =
      Constants.filterLeagueApply.length +
      Constants.filterSportsbookApply.length +
      Constants.filterDateApply.length +
      Constants.filterBetTypeApply.length +
      Constants.filterUnderdog.length +
      Constants.filterUnder.length +
      Constants.filterLiveBet.length +
      Constants.filterOutcome.length;
    // Simply add all other filters arrays onto here to create the count
    return length != 0 ? length : false;
  };

  const capitalizeAllWords = x => {
    const words = x.split(' ');

    for (let i = 0; i < words.length; i++) {
      words[i] = words[i][0].toUpperCase() + words[i].substr(1);
    }

    return words.join(' ');
  };

  const propositionMoneyline = x => {
    return x === 'moneyline' || x === 'h2h';
  };

  const tutorialScreenCounter2 = x => {
    return x == 2 ? true : false;
  };

  const addUnderdogFilter = async item => {
    await Constants.filterUnderdog.splice(0, 1, item);
  };

  const getEvent = x => {
    return x[0].event;
  };

  const lineSuffix = line => {
    if (line == null) {
      return '';
    } else if (line <= 0) {
      return line + ' ';
    } else if (line > 0) {
      return '+' + line + ' ';
    }
  };

  const mostProfitableTeamsCompare = x => {
    return x == 'Teams';
  };

  const arrayChange = array => {
    return [...array];
  };

  const pendingArrayWorkaround = test => {
    console.log('pendingArray', test.length);
    return test.filter(item => item.outcome === 'pending');
  };

  const valueNeutral = x => {
    return Number(x) == 0;
  };

  const addSportsbookFilter = async item => {
    if (item === 'Total') {
      Constants.filterSportsbook.length = 0;
    } else {
      await Constants.filterSportsbook.push(item);
    }
  };

  const propositionSpread = x => {
    return x === 'spread';
  };

  const gradeSyntax = x => {
    if (x > 0.92) {
      return 'A+';
    } else if (x > 0.84) {
      return 'A';
    } else if (x > 0.76) {
      return 'A-';
    } else if (x > 0.68) {
      return 'B+';
    } else if (x > 0.6) {
      return 'B';
    } else if (x > 0.52) {
      return 'B-';
    } else if (x > 0.44) {
      return 'C+';
    } else if (x > 0.36) {
      return 'C';
    } else if (x > 0.28) {
      return 'C-';
    } else if (x > 0.2) {
      return 'D+';
    } else if (x > 0.12) {
      return 'D';
    } else if (x <= 0.12 && x > 0) {
      return 'D-';
    } else {
      return '-';
    }
  };

  const filterUnderdogButton = x => {
    return Constants.filterUnderdog.includes(x) ? true : false;
  };

  const pushOutcomeCompare = outcome => {
    return outcome === 'push';
  };

  const gradeColorGood = x => {
    return x > 0.76;
  };

  const voidOutcomeCompare = outcome => {
    return outcome === 'void';
  };

  const removeSportsbookFilter = async item => {
    const array = Constants.filterSportsbook;

    if (item === 'Total') {
      return false;
    } else {
      for (var i = 0; i < array.length; i++) {
        if (array[i] === item) {
          await // Not sure if this is needed, or if this needs to be asynchronous
          array.splice(i, 1);
        }
      }
    }
  };

  const filterBetsFunction = x => {
    let data = Constants.filterLeague;

    data = data.filter(function (item) {
      return item.state == '';
    });

    //Constants.oddsDisplayed[1] = x;
    //return [Constants.oddsDisplayed[0],x];
  };

  const compareGradeLeagueConsistency = x => {
    return x == 'leagueConsistency';
  };

  // Filters the betslips based on the filters applied
  const filterBetslips = betslips => {
    const primaryBetTypes = ['spread', 'total', 'moneyline', '3-way'];
    const primaryLeagues = [
      'NFL',
      'NCAAF',
      'NBA',
      'NCAAMB',
      'MLB',
      'NHL',
      'UFC',
      null,
    ];

    //console.log("I ran")
    function isDisplayed(betslips) {
      function getYTD() {
        var now = new Date();
        var start = new Date(now.getFullYear(), 0, 0);
        var diff = now - start;
        var oneDay = 1000 * 60 * 60 * 24;
        var day = Math.floor(diff / oneDay);
        return day;
      }

      function loopDate() {
        let exist = false;
        for (let x = 0; x < betslips.bets.length; x++) {
          let d = new Date();
          if (
            betslips.bets[x].event === null ||
            betslips.bets[x].event.startTime === null
          ) {
            exist;
          } else if (Constants.filterDateApply.includes('today')) {
            let date1 = new Date(betslips.bets[x].event.startTime);
            let date2 = new Date(d.setDate(d.getDate()));

            date1.setHours(0, 0, 0, 0);
            date2.setHours(0, 0, 0, 0);

            exist = date1.getTime() === date2.getTime();
          } else if (Constants.filterDateApply.includes('yesterday')) {
            let date1 = new Date(betslips.bets[x].event.startTime);
            let date2 = new Date(d.setDate(d.getDate() - 1));

            date1.setHours(0, 0, 0, 0);
            date2.setHours(0, 0, 0, 0);

            exist = date1.getTime() === date2.getTime();
          } else if (Constants.filterDateApply.includes('sevenDays')) {
            exist =
              new Date(betslips.bets[x].event.startTime) >=
              d.setDate(d.getDate() - 7);
          } else if (Constants.filterDateApply.includes('twentyEightDays')) {
            exist =
              new Date(betslips.bets[x].event.startTime) >=
              d.setDate(d.getDate() - 28);
          } else if (Constants.filterDateApply.includes('threeMonths')) {
            exist =
              new Date(betslips.bets[x].event.startTime) >=
              d.setDate(d.getDate() - 90);
          } else if (Constants.filterDateApply.includes('sixMonths')) {
            exist =
              new Date(betslips.bets[x].event.startTime) >=
              d.setDate(d.getDate() - 180);
          } else if (Constants.filterDateApply.includes('yearToDate')) {
            exist =
              new Date(betslips.bets[x].event.startTime) >=
              d.setDate(d.getDate() - getYTD());
          } else if (Constants.filterDateApply.includes('twelveMonths')) {
            exist =
              new Date(betslips.bets[x].event.startTime) >=
              d.setDate(d.getDate() - 365);
          } else {
            exist;
          }
        }
        return exist;
      }

      function loopLeague() {
        let exist = false;
        for (let x = 0; x < betslips.bets.length; x++) {
          if (
            betslips.bets[x].event === null ||
            betslips.bets[x].event.league === null
          ) {
            exist;
          } else if (
            Constants.filterLeagueApply.includes(betslips.bets[x].event.league)
          ) {
            exist = true;
          } else if (Constants.filterLeagueApply.includes('otherLeagues')) {
            exist = primaryLeagues.includes(betslips.bets[x].event.league)
              ? exist
              : true;
          } else {
            exist;
          }
        }
        return exist;
      }

      function loopUnderdog() {
        let exist = false;
        for (let x = 0; x < betslips.bets.length; x++) {
          if (betslips.bets[x].proposition === null) {
            exist;
          } else if (
            Constants.filterUnderdogApply.includes('favorite') &&
            ((betslips.bets[x].proposition === 'moneyline' &&
              betslips.bets[x].oddsAmerican < 0) ||
              (betslips.bets[x].proposition === 'spread' &&
                betslips.bets[x].line < 0))
          ) {
            exist = true;
          } else if (
            Constants.filterUnderdogApply.includes('underdog') &&
            ((betslips.bets[x].proposition === 'moneyline' &&
              betslips.bets[x].oddsAmerican > 0) ||
              (betslips.bets[x].proposition === 'spread' &&
                betslips.bets[x].line > 0))
          ) {
            exist = true;
          } else {
            exist;
          }
        }
        return exist;
      }

      function loopLiveBet() {
        let exist = false;
        for (let x = 0; x < betslips.bets.length; x++) {
          if (
            Constants.filterLiveBetApply.includes('preGame') &&
            (betslips.bets[x].live === null ||
              betslips.bets[x].live === false) &&
            (betslips.bets[x].propDetails === null ||
              betslips.bets[x].propDetails.future === false)
          ) {
            exist = true;
          } else if (
            Constants.filterLiveBetApply.includes('live') &&
            betslips.bets[x].live !== null &&
            betslips.bets[x].live === true
          ) {
            exist = true;
          } else if (
            Constants.filterLiveBetApply.includes('future') &&
            betslips.bets[x].propDetails !== null &&
            betslips.bets[x].propDetails.future !== null &&
            betslips.bets[x].propDetails.future === true
          ) {
            exist = true;
          } else {
            exist;
          }
        }
        return exist;
      }

      function loopUnder() {
        let exist = false;
        for (let x = 0; x < betslips.bets.length; x++) {
          if (betslips.bets[x].position === null) {
            exist;
          } else if (
            Constants.filterUnderApply.includes(betslips.bets[x].position)
          ) {
            exist = true;
          } else {
            exist;
          }
        }
        return exist;
      }

      if (
        ((Constants.profileTabDevice == 'historical' &&
          betslips.outcome !== 'pending') ||
          Constants.profileTabDevice == betslips.outcome) &&
        /* (old one)
    (((Constants.filterBetStatusApply.length == 0
    && betslips.outcome !== "pending")
    || (Constants.filterBetStatusApply.includes(betslips.outcome)))
    */

        (Constants.filterSportsbookApply.length == 0 ||
          Constants.filterSportsbookApply.includes(betslips.book.name)) &&
        (Constants.filterBetTypeApply.length == 0 ||
          Constants.filterBetTypeApply.includes(betslips.type) ||
          (betslips.bets.length == 1 &&
            Constants.filterBetTypeApply.includes(betslips.bets[0].type)) ||
          (betslips.bets.length == 1 &&
            betslips.bets[0].type != 'prop' &&
            Constants.filterBetTypeApply.includes(
              betslips.bets[0].proposition
            )) ||
          (betslips.bets.length == 1 &&
            betslips.bets[0].type != 'prop' &&
            Constants.filterLeagueApply.includes('otherBetTypes') &&
            !primaryBetTypes.includes(betslips.bets[0].proposition))) &&
        (Constants.filterLeagueApply.length == 0 || loopLeague()) &&
        (Constants.filterDateApply.length == 0 || loopDate()) &&
        (Constants.filterUnderdogApply.length == 0 || loopUnderdog()) &&
        (Constants.filterLiveBetApply.length == 0 || loopLiveBet()) &&
        (Constants.filterOutcomeApply.length == 0 ||
          Constants.filterOutcomeApply.includes(betslips.outcome)) &&
        (Constants.filterUnderApply.length == 0 || loopUnder())
      ) {
        return true;
      } else {
        return false;
      }
    }

    betslips = betslips.filter(isDisplayed);

    Constants.betsFound = betslips.length == 0 ? false : true;

    Constants.statsNetProfit = betslips.reduce((a, b) => a + b.netProfit, 0);

    Constants.statsAtRisk = betslips.reduce((a, b) => a + b.atRisk, 0);

    Constants.statsPendingAmount = betslips.reduce((a, b) => a + b.toWin, 0);

    // Set the amount winning
    const winningAmount = betslips.filter(
      bet => bet.activeBetStatusOverall == 'winning'
    );
    Constants.toWinWinning = winningAmount.reduce((a, b) => a + b.toWin, 0);

    // Set the amount losing
    const losingAmount = betslips.filter(
      bet => bet.activeBetStatusOverall == 'losing'
    );
    Constants.toWinLosing = losingAmount.reduce((a, b) => a + b.toWin, 0);

    Constants.statsWins = betslips.filter(obj => {
      if (obj.outcome === 'win') {
        return true;
      }
    }).length;

    Constants.statsLosses = betslips.filter(obj => {
      if (obj.outcome === 'loss') {
        return true;
      }
    }).length;

    Constants.statsPushes = betslips.filter(obj => {
      if (obj.outcome === 'push') {
        return true;
      }
    }).length;

    Constants.statsPendingCount = betslips.filter(obj => {
      if (obj.outcome === 'pending') {
        return true;
      }
    }).length;

    setVarNetProfit(Constants.statsNetProfit);
    setVarAtRisk(Constants.statsAtRisk);
    setVarPendingAmount(Constants.statsPendingAmount);
    setVarWins(Constants.statsWins);
    setVarLosses(Constants.statsLosses);
    setVarPushes(Constants.statsPushes);
    setVarPendingCount(Constants.statsPendingCount);
    setBetsFound(Constants.betsFound);
    setVarToWinWinning(Constants.toWinWinning);
    setVarToWinLosing(Constants.toWinLosing);

    return betslips;

    /*

return live == true ? "(Live)" : "";

//live


return future == true ? "(Future) " : "";

//propDetails.future

*/
  };

  const tutorialScreenCounter4 = x => {
    return x == 4 ? true : false;
  };

  const profileTabBreakdown = x => {
    //profileTabBreakdown
    return x === 'breakdown';
  };

  const countFilters = () => {
    const length =
      Constants.filterLeague.length +
      Constants.filterSportsbook.length +
      Constants.filterDate.length +
      Constants.filterBetType.length +
      Constants.filterUnderdog.length +
      Constants.filterUnder.length +
      Constants.filterLiveBet.length +
      Constants.filterOutcome.length;
    // Simply add all other filters arrays onto here to create the count
    return length != 0 ? ' (' + length + ')' : '';
  };

  const gradeColorFair = x => {
    return x > 0.52 && x <= 0.76;
  };

  const valueNegative = x => {
    return Number(x) < 0;
  };

  const gradeColorBad = x => {
    return x <= 0.28 && x > 0;
  };

  const dateTimeStandard = startTime => {
    const month = [
      'Jan',
      'Feb',
      'Mar',
      'Apr',
      'May',
      'Jun',
      'Jul',
      'Aug',
      'Sep',
      'Oct',
      'Nov',
      'Dec',
    ];
    const date = new Date(startTime);
    let str = month[date.getMonth()] + ' ' + date.getDate() + ', ';
    if (date.getFullYear() === new Date().getFullYear()) {
      str = str;
    } else {
      str = str + date.getFullYear() + ', ';
    }
    if (date.getHours() >= 12) {
      if (date.getHours() == 12) {
        str =
          str +
          date.getHours() +
          ':' +
          (date.getMinutes() < 10
            ? '0' + date.getMinutes()
            : date.getMinutes()) +
          'p';
      } else {
        str =
          str +
          (date.getHours() - 12) +
          ':' +
          (date.getMinutes() < 10
            ? '0' + date.getMinutes()
            : date.getMinutes()) +
          'p';
      }
    } else {
      if (date.getHours() == 0) {
        str =
          str +
          (date.getHours() + 12) +
          ':' +
          (date.getMinutes() < 10
            ? '0' + date.getMinutes()
            : date.getMinutes()) +
          'a';
      } else {
        str =
          str +
          date.getHours() +
          ':' +
          (date.getMinutes() < 10
            ? '0' + date.getMinutes()
            : date.getMinutes()) +
          'a';
      }
    }
    return str;
  };

  const returnMostProfitable = x => {
    if (x.length === 0) {
      return null;
    } else {
      return [x[0]];
    }
  };

  const lossOutcomeCompare = outcome => {
    return outcome === 'loss' || outcome === 'halfloss';
  };

  // Checks if refereshPressCount is a multiple of 5 or not.
  const refreshPressCounter = x => {
    //Used in tandem with the refereshPressCount variable to check if
    //the user has clicked on the Refresh button a multiple of 5 times
    //If it is a multiple of 5, the answer will be false and will give the user a notice.

    //Remove the 'x' parameter
    //var remainder = Constants.refreshPressCount % 5;

    var remainder = x % 5;
    return remainder == 0 ? false : true;
  };

  const pendingOutcomeCompare = outcome => {
    return outcome === 'pending' || outcome == null;
  };

  const shareScreenNameHidden = x => {
    return x == 'hidden';
  };

  const notPendingOutcomeCompare = outcome => {
    return outcome !== 'pending';
  };

  const filterSportsbookApplied = x => {
    if (x.outcome !== 'pending') {
      if (Constants.filterSportsbookApply.length == 0) {
        return true;
      } else if (Constants.filterSportsbookApply.includes(x.book.name)) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  };

  const propDetailsMetricSpecialShare = x => {
    return x.propDetails && x.propDetails.metricSpecial
      ? x.propDetails.metricSpecial.charAt(0).toUpperCase() +
          x.propDetails.metricSpecial.slice(1) +
          ' '
      : '';
  };

  const pendingBetsFound = topLevel => {
    let counter = 0;
    for (const input of topLevel) {
      if (input.outcome === 'pending') counter += 1;
    }
    return counter > 0 ? false : true;
  };

  const myFunctionName = () => {
    const primaryLeagues = [
      'NFL',
      'NCAAF',
      'NBA',
      'NCAAMB',
      'MLB',
      'NHL',
      'UFC',
      null,
    ];

    if (Constants.filterLeagueApply.length === 0) {
      return true;
    } else {
      try {
        let exist = false;
        for (let x = 0; x < bets.length; x++) {
          //console.log(bets[x])
          if (Constants.filterLeagueApply.includes(bets[x].event.league)) {
            exist = true;
          } else if (Constants.filterLeagueApply.includes('otherLeagues')) {
            exist = primaryLeagues.includes(bets[x].event.league)
              ? exist
              : true;
          } else {
            exist;
          }
        }
        return exist;
      } catch (y) {
        return false;
      }
    }
  };

  const removeFilter = async item => {
    const array = Constants.filterLeague;
    for (var i = 0; i < array.length; i++) {
      if (array[i] === item) {
        await // Not sure if this is needed, or if this needs to be asynchronous
        array.splice(i, 1);
      }
    }

    // Code found here: https://love2dev.com/blog/javascript-remove-from-array/
  };

  const removeBetTypeFilter = async item => {
    const array = Constants.filterBetType;
    for (var i = 0; i < array.length; i++) {
      if (array[i] === item) {
        await // Not sure if this is needed, or if this needs to be asynchronous
        array.splice(i, 1);
      }
    }

    // Code found here: https://love2dev.com/blog/javascript-remove-from-array/
  };

  const compareGradeUnitSizeConsistency = x => {
    return x == 'unitSizeConsistency';
  };

  const getPosition = x => {
    return x[0].position;
  };

  const getSegment = x => {
    return x[0].segment;
  };

  const abbrTeamNameOld = x => {
    /// THIS DOES NOT WORK RIGHT NOW
    // If contains doesn't contain @, then keep x (the name of the event) the same. If it DOES contain @, break it apart
    // removing all spaces, changes each team to the proper abbreviation, and then put it back together.

    const teamsTable = {
      // NFL
      'Arizona Cardinals': 'ARI',
      'Atlanta Falcons': 'ATL',
      'Baltimore Ravens': 'BAL',
      'Buffalo Bills': 'BUF',
      'Carolina Panthers': 'CAR',
      'Chicago Bears': 'CHI',
      'Cincinnati Bengals': 'CIN',
      'Cleveland Browns': 'CLE',
      'Dallas Cowboys': 'DAL',
      'Denver Broncos': 'DEN',
      'Detroit Lions': 'DET',
      'Green Bay Packers': 'GB',
      'Houston Texans': 'HOU',
      'Indianapolis Colts': 'IND',
      'Jacksonville Jaguars': 'JAC',
      'Kansas City Chiefs': 'KC',
      'Las Vegas Raiders': 'LV',
      'Los Angeles Chargers': 'LAC',
      'Los Angeles Rams': 'LAR',
      'Miami Dolphins': 'MIA',
      'Minnesota Vikings': 'MIN',
      'New England Patriots': 'NE',
      'New Orleans Saints': 'NO',
      'New York Giants': 'NYG',
      'New York Jets': 'NYJ',
      'Philadelphia Eagles': 'PHI',
      'Pittsburgh Steelers': 'PIT',
      'San Francisco 49ers': 'SF',
      'Seattle Seahawks': 'SEA',
      'Tampa Bay Buccaneers': 'TB',
      'Tennessee Titans': 'TEN',
      'Washington Football Team': 'WAS',
      // NBA
      'Atlanta Hawks': 'ATL',
      'Brooklyn Nets': 'BKN',
      'Boston Celtics': 'BOS',
      'Charlotte Hornets': 'CHA',
      'Chicago Bulls': 'CHI',
      'Cleveland Cavaliers': 'CLE',
      'Dallas Mavericks': 'DAL',
      'Denver Nuggets': 'DEN',
      'Detroit Pistons': 'DET',
      'Golden State Warriors': 'GSW',
      'Houston Rockets': 'HOU',
      'Indiana Pacers': 'IND',
      'Los Angeles Clippers': 'LAC',
      'Los Angeles Lakers': 'LAL',
      'Memphis Grizzlies': 'MEM',
      'Miami Heat': 'MIA',
      'Milwaukee Bucks': 'MIL',
      'Minnesota Timberwolves': 'MIN',
      'New Orleans Pelicans': 'NOP',
      'New York Knicks': 'NYK',
      'Oklahoma City Thunder': 'OKC',
      'Orlando Magic': 'ORL',
      'Philadelphia 76ers': 'PHI',
      'Phoenix Suns': 'PHX',
      'Portland Trail Blazers': 'POR',
      'Sacramento Kings': 'SAC',
      'San Antonio Spurs': 'SAS',
      'Toronto Raptors': 'TOR',
      'Utah Jazz': 'UTA',
      'Washington Wizards': 'WAS',
      // NCAA
      'Boston College': 'BC',
      Clemson: 'CLEM',
      Duke: 'DUKE',
      'Florida State': 'FSU',
      'Georgia Tech': 'GT',
      Louisville: 'LOU',
      'Miami (FL)': 'MIA',
      'NC State': 'NCST',
      Pittsburgh: 'PITT',
      Syracuse: 'SYR',
      'North Carolina': 'UNC',
      Virginia: 'UVA',
      'Virginia Tech': 'VT',
      'Wake Forest': 'WAKE',
      Illinois: 'ILL',
      Indiana: 'IND',
      Iowa: 'IOWA',
      Michigan: 'MICH',
      'Michigan State': 'MSU',
      Minnesota: 'MINN',
      Nebraska: 'NEB',
      Northwestern: 'NW',
      'Ohio State': 'OSU',
      'Penn State': 'PSU',
      Purdue: 'PUR',
      Rutgers: 'RUTG',
      Maryland: 'UMD',
      Wisconsin: 'WIS',
      Baylor: 'BAY',
      'Iowa State': 'ISU',
      Kansas: 'KU',
      'Kansas State': 'KSU',
      Oklahoma: 'OKLA',
      'Oklahoma State': 'OKST',
      TCU: 'TCU',
      Texas: 'TEX',
      'Texas Tech': 'TTU',
      'West Virginia': 'WVU',
      Arizona: 'ARIZ',
      'Arizona State': 'ASU',
      Cal: 'CAL',
      Colorado: 'COLO',
      Oregon: 'ORE',
      'Oregon State': 'ORST',
      Stanford: 'STAN',
      UCLA: 'UCLA',
      USC: 'USC',
      Utah: 'UTAH',
      Washington: 'WASH',
      'Washington State': 'WSU',
      Alabama: 'BAMA',
      Arkansas: 'ARK',
      Auburn: 'AUB',
      Florida: 'FLA',
      Georgia: 'UGA',
      Kentucky: 'UK',
      LSU: 'LSU',
      'Ole Miss': 'MISS',
      'Mississippi State': 'MSST',
      Missouri: 'MIZZ',
      'South Carolina': 'SCAR',
      Tennessee: 'TENN',
      'Texas A&M': 'TAMU',
      Vanderbilt: 'VAN',
      BYU: 'BYU',
      Army: 'ARMY',
      UMass: 'UMASS',
      'Notre Dame': 'ND',
      Cincinnati: 'CIN',
      UConn: 'CONN',
      ECU: 'ECU',
      Houston: 'HOU',
      Memphis: 'MEM',
      Navy: 'NAVY',
      SMU: 'SMU',
      'South Florida': 'USF',
      Temple: 'TEM',
      Tulane: 'TULN',
      Tulsa: 'TLSA',
      UCF: 'UCF',
      Charlotte: 'CHAR',
      FAU: 'FAU',
      FIU: 'FIU',
      'Louisiana Tech': 'LT',
      Marshall: 'MRSH',
      'Middle Tennessee': 'MTSU',
      'North Texas': 'UNT',
      'Old Dominion': 'ODU',
      Rice: 'RICE',
      'Southern Miss': 'USM',
      UTEP: 'UTEP',
      UTSA: 'UTSA',
      WKU: 'WKU',
      Akron: 'AKR',
      'Ball State': 'BALL',
      'Bowling Green': 'BGSU',
      Buffalo: 'BUFF',
      'Central Michigan': 'CMU',
      'Eastern Michigan': 'EMU',
      'Kent State': 'KENT',
      'Miami (OH)': 'M-OH',
      'Northern Illinois': 'NIU',
      Ohio: 'OHIO',
      Toledo: 'TOL',
      'Western Michigan': 'WMU',
      'Air Force': 'AFA',
      'Boise State': 'BSU',
      'Colorado State': 'CSU',
      'Fresno State': 'FRES',
      Hawaii: 'HAW',
      Nevada: 'NEV',
      'New Mexico': 'UNM',
      'San Diego State': 'SDSU',
      'San José State': 'SJSU',
      UNLV: 'UNLV',
      'Utah State': 'USU',
      Wyoming: 'WYO',
      'Appalachian State': 'APP',
      'Arkansas State': 'ARST',
      'Georgia Southern': 'GASO',
      'Georgia State': 'GSU',
      Idaho: 'IDHO',
      'Louisiana Lafayette': 'ULL',
      'Louisiana Monroe': 'ULM',
      'New Mexico State': 'NMSU',
      'South Alabama': 'USA',
      'Texas State': 'TXST',
      Troy: 'TROY',
      'Cal Poly': 'CP',
      'Eastern Washington': 'EWU',
      'Idaho State': 'IDST',
      Montana: 'MONT',
      'Montana State': 'MTST',
      'North Dakota': 'UND',
      'Northern Arizona': 'NAU',
      'Northern Colorado': 'UNCO',
      'Portland State': 'PRST',
      'Sacramento State': 'SAC',
      'Southern Utah': 'SUU',
      'UC Davis': 'UCD',
      'Weber State': 'WEB',
      'Charleston Southern': 'CHSO',
      'Coastal Carolina': 'CCAR',
      'Gardner-Webb': 'WEBB',
      'Kennesaw State': 'KENN',
      Liberty: 'LIB',
      Monmouth: 'MONM',
      Presbyterian: 'PRE',
      Albany: 'ALBY',
      Delaware: 'DEL',
      Elon: 'ELON',
      'James Madison': 'JMU',
      Maine: 'MNE',
      'New Hampshire': 'UNH',
      'Rhode Island': 'URI',
      Richmond: 'RICH',
      'Stony Brook': 'STON',
      Towson: 'TOWS',
      Villanova: 'NOVA',
      'William & Mary': 'W&M',
      Brown: 'BRWN',
      Cornell: 'COR',
      Columbia: 'CLMB',
      Dartmouth: 'DART',
      Harvard: 'HARV',
      UPenn: 'PENN',
      Princeton: 'PRIN',
      Yale: 'YALE',
      'Bethune-Cookman': 'COOK',
      'Delaware State': 'DSU',
      'Florida A&M': 'FAMU',
      Hampton: 'HAMP',
      Howard: 'HOW',
      'Morgan State': 'MORG',
      'Norfolk State': 'NORF',
      'North Carolina A&T': 'NCAT',
      'NC Central': 'NCCU',
      'Savannah State': 'SAV',
      'South Carolina State': 'SCST',
      'Illinois State': 'ILST',
      'Indiana State': 'INST',
      'Missouri State': 'MOST',
      'North Dakota State': 'NDSU',
      'Northern Iowa': 'UNI',
      'South Dakota': 'SDAK',
      'South Dakota State': 'SDSU',
      'Southern Illinois': 'SIU',
      'Western Illinois': 'WIU',
      'Youngstown State': 'YSU',
      Bryant: 'BRY',
      'Central Connecticut': 'CCSU',
      Duquesne: 'DUQ',
      'Robert Morris (PA)': 'RMU',
      'Sacred Heart': 'SHU',
      'St. Francis (PA)': 'SFU',
      Wagner: 'WAG',
      'Austin Peay': 'PEAY',
      'Eastern Illinois': 'EIU',
      'Eastern Kentucky': 'EKY',
      'Jacksonville State': 'JVST',
      'Murray State': 'MURR',
      'Southeast Missouri': 'SEMO',
      'Tennessee State': 'TNST',
      'Tennessee Tech': 'TNTC',
      'Tennessee-Martin': 'UTM',
      Bucknell: 'BUCK',
      Colgate: 'COLG',
      Fordham: 'FOR',
      Georgetown: 'GTWN',
      'Holy Cross': 'HC',
      Lafayette: 'LAF',
      Lehigh: 'LEH',
      Butler: 'BUT',
      Campbell: 'CAMP',
      Davidson: 'DAV',
      Dayton: 'DAY',
      Drake: 'DRKE',
      Jacksonville: 'JAC',
      Marist: 'MRST',
      'Morehead State': 'MORE',
      'San Diego': 'USD',
      Stetson: 'STET',
      Valparaiso: 'VALP',
      Chattanooga: 'CHAT',
      ETSU: 'ETSU',
      Furman: 'FUR',
      Mercer: 'MER',
      Samford: 'SAM',
      'The Citadel': 'CIT',
      VMI: 'VMI',
      'Western Carolina': 'WCU',
      Wofford: 'WOF',
      'Abilene Christian': 'ACU',
      'Central Arkansas': 'UCA',
      'Houston Baptist': 'HBU',
      'Incarnate Word': 'IW',
      Lamar: 'LAM',
      'McNeese State': 'MCNS',
      'Nicholls State': 'NICH',
      'Northwestern State': 'NWST',
      'Sam Houston State': 'SHSU',
      'Southeastern Louisiana': 'SELA',
      'Stephen F. Austin': 'SFA',
      'Alabama A&M': 'AAMU',
      'Alabama State': 'ALST',
      'Alcorn State': 'ALCN',
      'Arkansas-Pine Bluff': 'ARPB',
      'Grambling State': 'GRAM',
      'Jackson State': 'JKST',
      'Mississippi Valley State': 'MVSU',
      'Prairie View A&M': 'PV',
      'Southern University': 'SOU',
      'Texas Southern': 'TXSO',
      // MLB
      'Arizona Diamondbacks': 'ARI',
      'Atlanta Braves': 'ATL',
      'Baltimore Orioles': 'BAL',
      'Boston Red Sox': 'BOS',
      'Chicago White Sox': 'CWS',
      'Chicago Cubs': 'CHC',
      'Cinncinnati Reds': 'CIN',
      'Cleveland Indians': 'CLE',
      'Colorado Rockies': 'COL',
      'Detroit Tigers': 'DET',
      'Houston Astros': 'HOU',
      'Kansas City Royals': 'KC',
      'Los Angeles Angels': 'ANA',
      'Los Angeles Dodgers': 'LA',
      'Miami Marlins': 'MIA',
      'Milwaukee Brewers': 'MIL',
      'Minnesota Twins': 'MIN',
      'New York Mets': 'NYM',
      'New York Yankees': 'NYY',
      'Oakland Athletics': 'OAK',
      'Philadelphia Phillies': 'PHI',
      'Pittsburgh Pirates': 'PIT',
      'San Diego Padres': 'SD',
      'San Francisco Giants': 'SF',
      'Seattle Mariners': 'SEA',
      'St Louis Cardinals': 'STL',
      'Tampa Bay Rays': 'TB',
      'Texas Rangers': 'TEX',
      'Toronto Blue Jays': 'TOR',
      'Washington Nationals': 'WAS',
      // NHL
      'Anaheim Ducks': 'ANA',
      'Buffalo Sabres': 'BUF',
      'Boston Bruins': 'BOS',
      'Arizona Coyotes': 'ARI',
      'Colorado Avalanche': 'COL',
      'Chicago Blackhawks': 'CHI',
      'Dallas Stars': 'DAL',
      'Carolina Hurricanes': 'CAR',
      'Edmonton Oilers': 'EDM',
      'Minnesota Wild': 'MIN',
      'Detroit Red Wings': 'DET',
      'Columbus Blue Jackets': 'CBJ',
      'Los Angeles Kings': 'LAK',
      'New Jersey Devils': 'NJD',
      'New York Rangers': 'NYR',
      'New York Islanders': 'NYI',
      'Calgary Flames': 'CGY',
      'Ottawa Senators': 'OTT',
      'Montréal Canadiens': 'MTL',
      'Philadelphia Flyers': 'PHI',
      'Pittsburgh Penguins': 'PIT',
      'San Jose Sharks': 'SJS',
      'Florida Panthers': 'FLA',
      'Nashville Predators': 'NSH',
      'Tampa Bay Lightning': 'TBL',
      'Toronto Maple Leafs': 'TOR',
      'St Louis Blues': 'STL',
      'Vancouver Canucks': 'VAN',
      'Vegas Golden Knights': 'VGK',
      'Washington Capitals': 'WSH',
      'Winnipeg Jets': 'WPG',
      'Seattle Kraken': 'SEA',
    };

    const [away, home] = x.split(' @ ');

    let atSymbol = ' @ ';

    if (x.includes(atSymbol)) {
      setAway(away);
      setHome(home);
      return (teamTable[away] || away) + ' @ ' + (teamTable[home] || home);
    } else {
      return x;
    }
  };

  const propDetailsMetricSpecial = metricSpecial => {
    return metricSpecial == null
      ? ''
      : metricSpecial.charAt(0).toUpperCase() + metricSpecial.slice(1) + ' ';
  };

  const refreshBets = () => {
    const SSpublicKey = 'ded051886fb76987f7d80664cdb73b99fad637c0';
    const SSprivateKey = '31891124503a015f1f9421f768341c364a8e6a53';
    const sharpsports = new SharpSports(
      Constants.internalId,
      SSpublicKey,
      SSprivateKey
    );

    sharpsports.Refresh();
  };

  const eventLeagueSuffix = league => {
    return league == null ? '' : league + ' | ';
  };

  const checkSportsbooksSynced = sportsbooks => {
    /*
if (sportsbooks.length !== 0){
Constants.sportsbooksSynced = true;
Constants.waitlisted = false;
};

//Constants.sportsbooksSynced = sportsbooks.length == 0 ? false : true;
//Constants.waitlisted = sportsbooks.length == 0 ? true : false;

setSportsbooksSynced(Constants.sportsbooksSynced);
//setWaitlisted(Constants.waitlisted);

return sportsbooks;
*/

    if (sportsbooks !== 0 || sportsbooks !== null) {
      return true;
    }
  };

  const tutorialScreenCounter123 = x => {
    return x == 1 || x == 2 || x == 3 ? true : false;
  };

  const statusPendingCompare = status => {
    return status === 'pending';
  };

  const combinedFilters = x => {
    /*let array =
[...Constants.filterSportsbookApply,
...Constants.filterDateApply,
...Constants.filterLeagueApply,
...Constants.filterBetTypeApply,
...Constants.filterUnderdogApply,
...Constants.filterUnderApply,
...Constants.filterOutcomeApply]

array.length > 0 ? Constants.combinedFiltersArray = array.join(" ") : Constants.combinedFiltersArray = "None";


Constants.combinedFiltersArray.push(...)

let firstArray = [1, 2, 3, 'Shinchan']
let secondArray = ['Nohara', 4, 5, 6]
let thirdArray = [7, 8, 9, 'Himawari']

let combinedArray = []


Constants.combinedFiltersArray = [];

Constants.combinedFiltersArray.push(
...Constants.filterSportsbookApply,
...Constants.filterDateApply,
...Constants.filterLeagueApply,
...Constants.filterBetTypeApply,
...Constants.filterUnderdogApply,
...Constants.filterUnderApply,
...Constants.filterOutcomeApply);
*/

    //return x.toString() + ", ";

    return x.length !== 0 ? x.join(', ') + ', ' : '';
  };

  const addFilter = async item => {
    await Constants.filterLeague.push(item);
  };

  const scoreZero = x => {
    if (x !== null) {
      return true;
    }
  };

  const getPropDetailsMetricSpecial = x => {
    return x[0].propDetails == null ? '' : x[0].propDetails.metricSpecial;
  };

  const getEventLeague = x => {
    return x[0].event == null ? '' : x[0].event.league;
  };

  const balanceSyntax = x => {
    if (x !== null) {
      return x < 0
        ? '-$' + Math.abs(x / 100).toFixed(2)
        : '$' + Math.abs(x / 100).toFixed(2);
    } else {
      return '-';
    }
  };

  const profileTabPending = x => {
    //profileTabPending
    return x === 'pending';
  };

  const typeStraightCompare = type => {
    return type === 'straight';
  };

  const propDetailsPlayer = x => {
    return x.propDetails && x.propDetails.player
      ? x.propDetails.player + ' '
      : '';
  };

  const { theme } = props;
  const { navigation } = props;

  React.useEffect(() => {
    StatusBar.setBarStyle('light-content');
  }, []);

  const swaggerAPIUpdatePushNotificationTokenGET =
    SwaggerAPIApi.useUpdatePushNotificationTokenGET();

  const isFocused = useIsFocused();
  React.useEffect(() => {
    try {
      if (!isFocused) {
        return;
      }
      segmentLogScreen(segment, 'Me');
    } catch (err) {
      console.error(err);
    }
  }, [isFocused]);

  const [allSportsbooksConnected, setAllSportsbooksConnected] =
    React.useState(false);
  const [betsFound, setBetsFound] = React.useState(true);
  const [date, setDate] = React.useState(new Date());
  const [datePickerValue, setDatePickerValue] = React.useState(new Date());
  const [datePickerValue2, setDatePickerValue2] = React.useState(new Date());
  const [dateRangeEnd, setDateRangeEnd] = React.useState(new Date());
  const [dateRangeStart, setDateRangeStart] = React.useState(new Date());
  const [dummyTwo, setDummyTwo] = React.useState(1);
  const [loadingApply, setLoadingApply] = React.useState(false);
  const [loadingCancel, setLoadingCancel] = React.useState(false);
  const [loadingReset, setLoadingReset] = React.useState(false);
  const [moreInfo, setMoreInfo] = React.useState([]);
  const [refreshingYhrvO2G1, setRefreshingYhrvO2G1] = React.useState(false);
  const [sendEvent, setSendEvent] = React.useState('');
  const [sendEventLeague, setSendEventLeague] = React.useState('');
  const [sendEventName, setSendEventName] = React.useState('');
  const [sendEventStartTime, setSendEventStartTime] = React.useState('');
  const [sendGrade, setSendGrade] = React.useState('');
  const [sendGradeType, setSendGradeType] = React.useState('');
  const [sendLine, setSendLine] = React.useState(0);
  const [sendLive, setSendLive] = React.useState(false);
  const [sendOddsAmerican, setSendOddsAmerican] = React.useState(0);
  const [sendOddsAmericanUpperLevel, setSendOddsAmericanUpperLevel] =
    React.useState('');
  const [sendOutcome, setSendOutcome] = React.useState('');
  const [sendParlayLegCount, setSendParlayLegCount] = React.useState('');
  const [sendPosition, setSendPosition] = React.useState('');
  const [sendPropDetailsFuture, setSendPropDetailsFuture] =
    React.useState(false);
  const [sendPropDetailsMetricSpecial, setSendPropDetailsMetricSpecial] =
    React.useState('');
  const [sendPropDetailsPlayer, setSendPropDetailsPlayer] = React.useState('');
  const [sendPropDetailsTeam, setSendPropDetailsTeam] = React.useState('');
  const [sendProposition, setSendProposition] = React.useState('');
  const [sendSegment, setSendSegment] = React.useState('');
  const [sendTypeLowerLevel, setSendTypeLowerLevel] = React.useState('');
  const [sendTypeUpperLevel, setSendTypeUpperLevel] = React.useState('');
  const [sportsbooksConnected, setSportsbooksConnected] = React.useState(false);
  const [sportsbooksSynced, setSportsbooksSynced] = React.useState(false);
  const [textInputValue, setTextInputValue] = React.useState('');
  const [toggleMostProfitableItem, setToggleMostProfitableItem] =
    React.useState('');
  const [toggleMostProfitableModal, setToggleMostProfitableModal] =
    React.useState(false);
  const [varAtRisk, setVarAtRisk] = React.useState(0);
  const [varLosses, setVarLosses] = React.useState(0);
  const [varNetProfit, setVarNetProfit] = React.useState(0);
  const [varPendingAmount, setVarPendingAmount] = React.useState(0);
  const [varPendingCount, setVarPendingCount] = React.useState(0);
  const [varPushes, setVarPushes] = React.useState(0);
  const [varToWinLosing, setVarToWinLosing] = React.useState(0);
  const [varToWinWinning, setVarToWinWinning] = React.useState(0);
  const [varWins, setVarWins] = React.useState(0);

  return (
    <ScreenContainer hasSafeArea={false} hasTopSafeArea={true}>
      <Surface
        style={StyleSheet.applyWidth(
          { backgroundColor: theme.colors.background, borderRadius: 0 },
          dimensions.width
        )}
        elevation={3}
      >
        {/* Menu Bar */}
        <View
          style={StyleSheet.applyWidth(
            { borderRadius: 0, justifyContent: 'center' },
            dimensions.width
          )}
        >
          <View
            style={StyleSheet.applyWidth(
              { flexDirection: 'row', justifyContent: 'space-between' },
              dimensions.width
            )}
          >
            {/* Left Button */}
            <View
              style={StyleSheet.applyWidth(
                {
                  alignItems: 'flex-start',
                  borderRadius: 0,
                  justifyContent: 'center',
                  width: '33%',
                },
                dimensions.width
              )}
            >
              <Touchable
                onPress={() => {
                  try {
                    setGlobalVariableValue({
                      key: 'toggleMenuModal',
                      value: true,
                    });
                    setGlobalVariableValue({
                      key: 'profileCardSettings',
                      value: false,
                    });
                    segmentLogTrack(
                      segment,
                      'Menu opened',
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined
                    );
                  } catch (err) {
                    console.error(err);
                  }
                }}
              >
                <View
                  style={StyleSheet.applyWidth(
                    {
                      alignItems: 'center',
                      flexDirection: 'row',
                      height: 50,
                      paddingLeft: 16,
                      paddingRight: 16,
                    },
                    dimensions.width
                  )}
                >
                  {/* Menu */}
                  <Icon
                    name={'Ionicons/ios-menu'}
                    size={28}
                    color={theme.colors.lightLowImportanceText}
                  />
                </View>
              </Touchable>
            </View>

            <View
              style={StyleSheet.applyWidth(
                {
                  alignContent: 'center',
                  alignItems: 'center',
                  height: 50,
                  justifyContent: 'center',
                },
                dimensions.width
              )}
            >
              {/* Vault Logo */}
              <>
                {!Constants['showVaultLogo'] ? null : (
                  <Image
                    style={StyleSheet.applyWidth(
                      { height: 50, width: 115 },
                      dimensions.width
                    )}
                    source={Images.VaultLogoLightFontClearBackground}
                    resizeMode={'contain'}
                  />
                )}
              </>
            </View>
            {/* Right Button */}
            <View
              style={StyleSheet.applyWidth(
                {
                  alignItems: 'center',
                  borderRadius: 0,
                  flexDirection: 'row',
                  height: 50,
                  justifyContent: 'flex-end',
                  width: '33%',
                },
                dimensions.width
              )}
            >
              {/* Discord Touchable */}
              <Touchable
                onPress={() => {
                  const handler = async () => {
                    try {
                      await WebBrowser.openBrowserAsync(
                        'https://discord.gg/6bGRD7BpUD'
                      );
                      segmentLogTrack(
                        segment,
                        'Join the Discord',
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined
                      );
                    } catch (err) {
                      console.error(err);
                    }
                  };
                  handler();
                }}
                style={StyleSheet.applyWidth(
                  { marginRight: 16 },
                  dimensions.width
                )}
              >
                <View
                  style={StyleSheet.applyWidth(
                    {
                      alignItems: 'center',
                      backgroundColor: theme.colors.discordBlurple,
                      borderColor: theme.colors.discordBlurple,
                      borderRadius: 6,
                      flexDirection: 'row',
                      justifyContent: 'center',
                      paddingBottom: 2,
                      paddingLeft: 8,
                      paddingRight: 8,
                      paddingTop: 2,
                    },
                    dimensions.width
                  )}
                >
                  <Text
                    style={StyleSheet.applyWidth(
                      {
                        color: theme.colors.backgroundInverseMainFont,
                        fontFamily: 'System',
                        fontSize: 12,
                        fontWeight: '700',
                        marginRight: 3,
                        textAlign: 'right',
                      },
                      dimensions.width
                    )}
                  >
                    {'Join\nDiscord'}
                  </Text>
                  <Icon
                    name={'MaterialCommunityIcons/discord'}
                    size={22}
                    color={theme.colors.backgroundInverseMainFont}
                  />
                </View>
              </Touchable>
            </View>
          </View>
        </View>
      </Surface>
      {/* Waitlist View */}
      <>
        {!Constants['waitlisted'] ? null : (
          <View
            style={StyleSheet.applyWidth(
              { paddingBottom: 28 },
              dimensions.width
            )}
          >
            <View
              style={StyleSheet.applyWidth(
                {
                  backgroundColor: theme.colors.primary,
                  flexDirection: 'row',
                  paddingBottom: 12,
                  paddingLeft: '4%',
                  paddingRight: '4%',
                  paddingTop: 12,
                },
                dimensions.width
              )}
            >
              <View
                style={StyleSheet.applyWidth({ flex: 1 }, dimensions.width)}
              >
                <View
                  style={StyleSheet.applyWidth(
                    { alignItems: 'center', flexDirection: 'row' },
                    dimensions.width
                  )}
                >
                  <Text
                    style={StyleSheet.applyWidth(
                      {
                        color: theme.colors.strongTextOnGoldButtons,
                        fontFamily: 'System',
                        fontSize: 16,
                        fontWeight: '700',
                        marginRight: 3,
                      },
                      dimensions.width
                    )}
                  >
                    {"You're On the Waitlist!"}
                  </Text>
                </View>

                <Text
                  style={StyleSheet.applyWidth(
                    {
                      color: theme.colors.strongTextOnGoldButtons,
                      fontSize: 12,
                      marginTop: 10,
                    },
                    dimensions.width
                  )}
                >
                  {
                    "We're currently at capacity but we'll let you know as soon as space is available."
                  }
                </Text>

                <View
                  style={StyleSheet.applyWidth(
                    {
                      alignItems: 'center',
                      flexDirection: 'row',
                      marginTop: 20,
                    },
                    dimensions.width
                  )}
                >
                  {/* Skip the line */}
                  <Touchable
                    onPress={() => {
                      try {
                        navigation.navigate('CreateProfileBetaStack', {
                          screen: 'CreateProfile5ChooseYourPromoScreen',
                        });
                      } catch (err) {
                        console.error(err);
                      }
                    }}
                  >
                    <View
                      style={StyleSheet.applyWidth(
                        {
                          alignItems: 'center',
                          borderBottomWidth: 1,
                          borderColor: theme.colors.strongTextOnGoldButtons,
                          borderLeftWidth: 1,
                          borderRadius: 8,
                          borderRightWidth: 1,
                          borderTopWidth: 1,
                          justifyContent: 'center',
                          paddingBottom: 8,
                          paddingLeft: 16,
                          paddingRight: 16,
                          paddingTop: 8,
                        },
                        dimensions.width
                      )}
                    >
                      {/* Skip the line */}
                      <Text
                        style={StyleSheet.applyWidth(
                          {
                            color: theme.colors.strongTextOnGoldButtons,
                            fontFamily: 'System',
                            fontWeight: '700',
                          },
                          dimensions.width
                        )}
                      >
                        {'Skip the line'}
                      </Text>
                    </View>
                  </Touchable>
                </View>
              </View>
            </View>
          </View>
        )}
      </>
      {/* Waitlisted */}
      <>
        {Constants['waitlisted'] ? null : (
          <View>
            {/* Demo Mode View */}
            <>
              {sportsbooksSynced ? null : (
                <View>
                  <View>
                    <Touchable
                      onPress={() => {
                        try {
                          navigation.navigate('SharpSportsFormScreen');
                          segmentLogTrack(
                            segment,
                            'Sync a sportsbook',
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined
                          );
                        } catch (err) {
                          console.error(err);
                        }
                      }}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            alignItems: 'center',
                            backgroundColor: theme.colors.primary,
                            flexDirection: 'row',
                            paddingBottom: 6,
                            paddingLeft: '4%',
                            paddingRight: '4%',
                            paddingTop: 6,
                          },
                          dimensions.width
                        )}
                      >
                        <Icon
                          style={StyleSheet.applyWidth(
                            { marginRight: 6 },
                            dimensions.width
                          )}
                          name={'Ionicons/ios-add-circle'}
                          size={28}
                          color={theme.colors.strongTextOnGoldButtons}
                        />
                        <View
                          style={StyleSheet.applyWidth(
                            { flex: 1, marginRight: 6 },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.strongTextOnGoldButtons,
                                fontFamily: 'System',
                                fontSize: 14,
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'Sync A Sportsbook'}
                          </Text>

                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.strongTextOnGoldButtons,
                                fontSize: 12,
                              },
                              dimensions.width
                            )}
                          >
                            {
                              "You're in Demo Mode. Sync at least one sportsbook to view your bets and stats!"
                            }
                          </Text>
                        </View>

                        <SwaggerAPIApi.FetchGetBankrollPageByIdGET
                          dummy={Constants['updatedSportsBook']}
                          internalId={Constants['internalId']}
                          onData={fetchData => {
                            try {
                              checkSportsbooksSynced(fetchData);
                            } catch (err) {
                              console.error(err);
                            }
                          }}
                        >
                          {({
                            loading,
                            error,
                            data,
                            refetchGetBankrollPageById,
                          }) => {
                            const fetchData = data;
                            if (!fetchData || loading) {
                              return <ActivityIndicator />;
                            }

                            if (error) {
                              return (
                                <Text style={{ textAlign: 'center' }}>
                                  There was a problem fetching this data
                                </Text>
                              );
                            }

                            return null;
                          }}
                        </SwaggerAPIApi.FetchGetBankrollPageByIdGET>
                      </View>
                    </Touchable>
                  </View>
                </View>
              )}
            </>
            <>
              {!sportsbooksSynced ? null : (
                <View>
                  {/* Resync Sportsbook Prompt Touchable */}
                  <>
                    {sportsbooksConnected ? null : (
                      <Touchable
                        onPress={() => {
                          try {
                            navigation.navigate('CreateProfileBetaStack');
                          } catch (err) {
                            console.error(err);
                          }
                        }}
                      >
                        <>
                          {!Constants[
                            'showSportsbooksDisconnectedPrompt'
                          ] ? null : (
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  alignItems: 'center',
                                  backgroundColor: theme.colors['Error'],
                                  flexDirection: 'row',
                                  justifyContent: 'space-between',
                                  paddingBottom: 6,
                                  paddingLeft: 16,
                                  paddingTop: 6,
                                },
                                dimensions.width
                              )}
                            >
                              <View
                                style={StyleSheet.applyWidth(
                                  {
                                    alignItems: 'center',
                                    flex: 1,
                                    flexDirection: 'row',
                                    marginRight: 16,
                                  },
                                  dimensions.width
                                )}
                              >
                                <Icon
                                  style={StyleSheet.applyWidth(
                                    { marginRight: 6 },
                                    dimensions.width
                                  )}
                                  size={28}
                                  name={'Foundation/unlink'}
                                  color={
                                    theme.colors[
                                      'Background Inverse (Main Font)'
                                    ]
                                  }
                                />
                                <View
                                  style={StyleSheet.applyWidth(
                                    { flex: 1, marginRight: 6 },
                                    dimensions.width
                                  )}
                                >
                                  <Text
                                    style={StyleSheet.applyWidth(
                                      {
                                        color:
                                          theme.colors[
                                            'Background Inverse (Main Font)'
                                          ],
                                        fontFamily: 'System',
                                        fontSize: 14,
                                        fontWeight: '700',
                                      },
                                      dimensions.width
                                    )}
                                  >
                                    {'Sportsbook disconnected!'}
                                  </Text>

                                  <Text
                                    style={StyleSheet.applyWidth(
                                      {
                                        color:
                                          theme.colors[
                                            'Background Inverse (Main Font)'
                                          ],
                                        fontSize: 12,
                                      },
                                      dimensions.width
                                    )}
                                  >
                                    {
                                      'You may not be seeing all your bets. Click to resync the disconnected book(s).'
                                    }
                                  </Text>
                                </View>

                                <SwaggerAPIApi.FetchGetBankrollPageByIdGET
                                  dummy={Constants['updatedSportsBook']}
                                  internalId={Constants['internalId']}
                                >
                                  {({
                                    loading,
                                    error,
                                    data,
                                    refetchGetBankrollPageById,
                                  }) => {
                                    const fetchData = data;
                                    if (!fetchData || loading) {
                                      return <ActivityIndicator />;
                                    }

                                    if (error) {
                                      return (
                                        <Text style={{ textAlign: 'center' }}>
                                          There was a problem fetching this data
                                        </Text>
                                      );
                                    }

                                    return (
                                      <View
                                        style={StyleSheet.applyWidth(
                                          { height: 0, width: 0 },
                                          dimensions.width
                                        )}
                                      >
                                        <FlatList
                                          data={checkSportsbooksConnected(
                                            fetchData
                                          )}
                                          listKey={'6DhXmK24'}
                                          keyExtractor={listData =>
                                            listData?.id ||
                                            listData?.uuid ||
                                            JSON.stringify(listData)
                                          }
                                          renderItem={({ item }) => {
                                            const listData = item;
                                            return null;
                                          }}
                                          style={StyleSheet.applyWidth(
                                            { height: 0, width: 0 },
                                            dimensions.width
                                          )}
                                          contentContainerStyle={StyleSheet.applyWidth(
                                            { flex: 1 },
                                            dimensions.width
                                          )}
                                          numColumns={1}
                                        />
                                      </View>
                                    );
                                  }}
                                </SwaggerAPIApi.FetchGetBankrollPageByIdGET>
                              </View>
                              {/* Hide Notice Touchable */}
                              <Touchable
                                onPress={() => {
                                  try {
                                    setGlobalVariableValue({
                                      key: 'showSportsbooksDisconnectedPrompt',
                                      value: false,
                                    });
                                  } catch (err) {
                                    console.error(err);
                                  }
                                }}
                              >
                                <View
                                  style={StyleSheet.applyWidth(
                                    {
                                      alignItems: 'center',
                                      justifyContent: 'center',
                                      marginBottom: 10,
                                      marginLeft: 10,
                                      marginRight: 16,
                                      marginTop: 10,
                                    },
                                    dimensions.width
                                  )}
                                >
                                  <Icon
                                    name={'Ionicons/ios-close'}
                                    size={20}
                                    color={
                                      theme.colors[
                                        'Background Inverse (Main Font)'
                                      ]
                                    }
                                  />
                                </View>
                              </Touchable>
                            </View>
                          )}
                        </>
                      </Touchable>
                    )}
                  </>
                </View>
              )}
            </>
          </View>
        )}
      </>
      {/* NEW Scroll View */}
      <ScrollView
        refreshControl={
          <RefreshControl
            refreshing={refreshingYhrvO2G1}
            onRefresh={() => {
              const handler = async () => {
                try {
                  setRefreshingYhrvO2G1(true);
                  await SwaggerAPIApi.cacheUserBetsGET(Constants, {
                    internalId: Constants['internalId'],
                  });
                  setGlobalVariableValue({
                    key: 'refreshPressCount',
                    value: Constants['refreshPressCount'] + 1,
                  });
                  setGlobalVariableValue({
                    key: 'updatedSportsBook',
                    value: Constants['updatedSportsBook'] + 1,
                  });
                  segmentLogTrack(
                    segment,
                    'Bets refreshed',
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined
                  );
                  setRefreshingYhrvO2G1(false);
                } catch (err) {
                  console.error(err);
                  setRefreshingYhrvO2G1(false);
                }
              };
              handler();
            }}
            colors={[theme.colors['Background Inverse (Main Font)']]}
            tintColor={theme.colors['Background Inverse (Main Font)']}
          />
        }
        bounces={true}
        showsVerticalScrollIndicator={false}
      >
        {/* Shadow Hide View */}
        <View
          style={StyleSheet.applyWidth(
            { backgroundColor: theme.colors.background, height: 10 },
            dimensions.width
          )}
        />
        {/* Profile Card View */}
        <View
          style={StyleSheet.applyWidth(
            { paddingLeft: 16, paddingRight: 16 },
            dimensions.width
          )}
        >
          <Touchable
            onPress={() => {
              try {
                navigation.navigate('SettingsBetaScreen');
                setGlobalVariableValue({
                  key: 'profileCardSettings',
                  value: true,
                });
                segmentLogTrack(
                  segment,
                  'Navigated to Settings',
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined
                );
              } catch (err) {
                console.error(err);
              }
            }}
          >
            <Surface
              style={StyleSheet.applyWidth(
                {
                  backgroundColor: theme.colors.divider,
                  borderRadius: 18,
                  marginTop: 30,
                },
                dimensions.width
              )}
              elevation={3}
            >
              <View>
                {/* Profile Information Fetch */}
                <SwaggerAPIApi.FetchGetUserInfoGET
                  interanlId={Constants['internalId']}
                >
                  {({ loading, error, data, refetchGetUserInfo }) => {
                    const profileInformationFetchData = data;
                    if (!profileInformationFetchData || loading) {
                      return <ActivityIndicator />;
                    }

                    if (error) {
                      return (
                        <Text style={{ textAlign: 'center' }}>
                          There was a problem fetching this data
                        </Text>
                      );
                    }

                    return (
                      <View
                        style={StyleSheet.applyWidth(
                          { alignItems: 'center', bottom: 30 },
                          dimensions.width
                        )}
                      >
                        <Surface
                          style={StyleSheet.applyWidth(
                            { borderRadius: 46 },
                            dimensions.width
                          )}
                          elevation={2}
                        >
                          <Circle
                            size={92}
                            bgColor={theme.colors.backgroundInverseMainFont}
                          >
                            {/* Profile Picture */}
                            <>
                              {!Constants['profilePictureUrl'] ? null : (
                                <CircleImage
                                  source={{
                                    uri: `${Constants['profilePictureUrl']}`,
                                  }}
                                  size={90}
                                />
                              )}
                            </>
                            {/* Default Profile Picture */}
                            <>
                              {Constants['profilePictureUrl'] ? null : (
                                <Circle
                                  bgColor={theme.colors.lightLowImportanceText}
                                  size={90}
                                >
                                  <LinearGradient
                                    style={StyleSheet.applyWidth(
                                      {
                                        alignItems: 'center',
                                        height: '100%',
                                        justifyContent: 'center',
                                        width: '100%',
                                      },
                                      dimensions.width
                                    )}
                                    endY={100}
                                    endX={100}
                                    color2={theme.colors.divider}
                                    color1={theme.colors.lightLowImportanceText}
                                  >
                                    <Text
                                      style={StyleSheet.applyWidth(
                                        {
                                          color:
                                            theme.colors
                                              .backgroundInverseMainFont,
                                          fontFamily: 'System',
                                          fontSize: 40,
                                          fontWeight: '400',
                                          textAlign: 'center',
                                          textTransform: 'uppercase',
                                        },
                                        dimensions.width
                                      )}
                                    >
                                      {firstCharacter(
                                        profileInformationFetchData?.firstName
                                      )}
                                      {firstCharacter(
                                        profileInformationFetchData?.lastName
                                      )}
                                    </Text>
                                  </LinearGradient>
                                </Circle>
                              )}
                            </>
                          </Circle>
                        </Surface>
                        {/* Name */}
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontSize: 28,
                              fontWeight: '700',
                              marginTop: 12,
                            },
                            dimensions.width
                          )}
                        >
                          {profileInformationFetchData?.firstName}{' '}
                          {profileInformationFetchData?.lastName}
                        </Text>
                        {/* Username */}
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.lightLowImportanceText,
                              fontFamily: 'System',
                              fontWeight: '700',
                            },
                            dimensions.width
                          )}
                        >
                          {'@'}
                          {profileInformationFetchData?.userName}
                        </Text>
                      </View>
                    );
                  }}
                </SwaggerAPIApi.FetchGetUserInfoGET>
                {/* Bettor Stats Fetch */}
                <SwaggerAPIApi.FetchGetBettorStatsByBettorIdKate$sGET
                  dummy={'adf'}
                  internalId={Constants['internalId']}
                  onData={bettorStatsFetchData => {
                    try {
                      setGlobalVariableValue({
                        key: 'waitlisted',
                        value: checkWaitlist(
                          bettorStatsFetchData?.activeAccounts
                        ),
                      });
                      setSportsbooksSynced(
                        checkSportsbooksSynced(
                          bettorStatsFetchData?.activeAccounts
                        )
                      );
                      totalBankroll(bettorStatsFetchData?.balance);
                    } catch (err) {
                      console.error(err);
                    }
                  }}
                >
                  {({
                    loading,
                    error,
                    data,
                    refetchGetBettorStatsByBettorIdKate$s,
                  }) => {
                    const bettorStatsFetchData = data;
                    if (!bettorStatsFetchData || loading) {
                      return <ActivityIndicator />;
                    }

                    if (error) {
                      return (
                        <Text style={{ textAlign: 'center' }}>
                          There was a problem fetching this data
                        </Text>
                      );
                    }

                    return (
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            flexDirection: 'row',
                            justifyContent: 'space-evenly',
                            marginBottom: 12,
                            marginLeft: 12,
                            marginRight: 12,
                          },
                          dimensions.width
                        )}
                      >
                        <View
                          style={StyleSheet.applyWidth(
                            { alignItems: 'center', width: '33%' },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.backgroundInverseMainFont,
                                fontFamily: 'System',
                                fontSize: 14,
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {totalBetCount(bettorStatsFetchData?.record)}
                          </Text>

                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.lightLowImportanceText,
                                fontSize: 12,
                              },
                              dimensions.width
                            )}
                          >
                            {'Bets'}
                          </Text>
                        </View>

                        <View
                          style={StyleSheet.applyWidth(
                            { alignItems: 'center', width: '33%' },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.backgroundInverseMainFont,
                                fontFamily: 'System',
                                fontSize: 14,
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {balanceSyntax(bettorStatsFetchData?.pending)}
                          </Text>

                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.lightLowImportanceText,
                                fontSize: 12,
                              },
                              dimensions.width
                            )}
                          >
                            {'Pending'}
                          </Text>
                        </View>

                        <View
                          style={StyleSheet.applyWidth(
                            { alignItems: 'center', width: '33%' },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.backgroundInverseMainFont,
                                fontFamily: 'System',
                                fontSize: 14,
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {balanceSyntax(bettorStatsFetchData?.balance)}
                          </Text>

                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.lightLowImportanceText,
                                fontSize: 12,
                              },
                              dimensions.width
                            )}
                          >
                            {'Bankroll'}
                          </Text>
                        </View>
                      </View>
                    );
                  }}
                </SwaggerAPIApi.FetchGetBettorStatsByBettorIdKate$sGET>
              </View>
            </Surface>
          </Touchable>
        </View>
        {/* Section Selector View */}
        <View
          style={StyleSheet.applyWidth({ marginTop: 40 }, dimensions.width)}
        >
          <View
            style={StyleSheet.applyWidth(
              { flexDirection: 'row', justifyContent: 'space-evenly' },
              dimensions.width
            )}
          >
            {/* Pending Bets View_On */}
            <>
              {!profileTabPending(Constants['profileTabDevice']) ? null : (
                <View
                  style={StyleSheet.applyWidth(
                    { width: '33%' },
                    dimensions.width
                  )}
                >
                  <View
                    style={StyleSheet.applyWidth(
                      { alignItems: 'center' },
                      dimensions.width
                    )}
                  >
                    <Icon
                      color={theme.colors.primary}
                      size={28}
                      name={'Ionicons/ios-receipt'}
                    />
                  </View>
                  <Divider
                    style={StyleSheet.applyWidth(
                      { height: 2, marginTop: 5 },
                      dimensions.width
                    )}
                    color={theme.colors.primary}
                  />
                </View>
              )}
            </>
            {/* Pending Bets Touchable_Off */}
            <>
              {profileTabPending(Constants['profileTabDevice']) ? null : (
                <Touchable
                  onPress={() => {
                    try {
                      setGlobalVariableValue({
                        key: 'profileTabDevice',
                        value: 'pending',
                      });
                      setDummyTwo(dummyTwo + 1);
                      segmentLogTrack(
                        segment,
                        'Active bets view selected',
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined
                      );
                    } catch (err) {
                      console.error(err);
                    }
                  }}
                  style={StyleSheet.applyWidth(
                    { width: '33%' },
                    dimensions.width
                  )}
                >
                  <View
                    style={StyleSheet.applyWidth(
                      { alignItems: 'center' },
                      dimensions.width
                    )}
                  >
                    <Icon
                      size={28}
                      color={theme.colors.divider}
                      name={'Ionicons/ios-receipt'}
                    />
                  </View>
                </Touchable>
              )}
            </>
            {/* Historical Bets View_On */}
            <>
              {!profileTabHistorical(Constants['profileTabDevice']) ? null : (
                <View
                  style={StyleSheet.applyWidth(
                    { width: '34%' },
                    dimensions.width
                  )}
                >
                  <View
                    style={StyleSheet.applyWidth(
                      { alignItems: 'center' },
                      dimensions.width
                    )}
                  >
                    <Icon
                      color={theme.colors.primary}
                      size={28}
                      name={'Ionicons/ios-checkmark-circle'}
                    />
                  </View>
                  <Divider
                    style={StyleSheet.applyWidth(
                      { height: 2, marginTop: 5 },
                      dimensions.width
                    )}
                    color={theme.colors.primary}
                  />
                </View>
              )}
            </>
            {/* Historical Bets Touchable_Off */}
            <>
              {profileTabHistorical(Constants['profileTabDevice']) ? null : (
                <Touchable
                  onPress={() => {
                    try {
                      setGlobalVariableValue({
                        key: 'profileTabDevice',
                        value: 'historical',
                      });
                      setDummyTwo(dummyTwo + 1);
                      segmentLogTrack(
                        segment,
                        'Settled Bets View selected',
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined
                      );
                    } catch (err) {
                      console.error(err);
                    }
                  }}
                  style={StyleSheet.applyWidth(
                    { width: '34%' },
                    dimensions.width
                  )}
                >
                  <View
                    style={StyleSheet.applyWidth(
                      { alignItems: 'center' },
                      dimensions.width
                    )}
                  >
                    <Icon
                      name={'Ionicons/ios-checkmark-circle'}
                      color={theme.colors.divider}
                      size={28}
                    />
                  </View>
                </Touchable>
              )}
            </>
            {/* Breakdown View_On */}
            <>
              {!profileTabBreakdown(Constants['profileTabDevice']) ? null : (
                <View
                  style={StyleSheet.applyWidth(
                    { width: '33%' },
                    dimensions.width
                  )}
                >
                  <View
                    style={StyleSheet.applyWidth(
                      { alignItems: 'center' },
                      dimensions.width
                    )}
                  >
                    <Icon
                      name={'MaterialCommunityIcons/view-dashboard'}
                      color={theme.colors.primary}
                      size={28}
                    />
                  </View>
                  <Divider
                    style={StyleSheet.applyWidth(
                      { height: 2, marginTop: 5 },
                      dimensions.width
                    )}
                    color={theme.colors.primary}
                  />
                </View>
              )}
            </>
            {/* Breakdown Touchable_Off */}
            <>
              {profileTabBreakdown(Constants['profileTabDevice']) ? null : (
                <Touchable
                  onPress={() => {
                    try {
                      setGlobalVariableValue({
                        key: 'profileTabDevice',
                        value: 'breakdown',
                      });
                      setDummyTwo(dummyTwo + 1);
                      segmentLogTrack(
                        segment,
                        'Breakdown view selected',
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined
                      );
                    } catch (err) {
                      console.error(err);
                    }
                  }}
                  style={StyleSheet.applyWidth(
                    { width: '33%' },
                    dimensions.width
                  )}
                >
                  <View
                    style={StyleSheet.applyWidth(
                      { alignItems: 'center' },
                      dimensions.width
                    )}
                  >
                    <Icon
                      name={'MaterialCommunityIcons/view-dashboard'}
                      color={theme.colors.divider}
                      size={28}
                    />
                  </View>
                </Touchable>
              )}
            </>
          </View>
          <Divider
            style={StyleSheet.applyWidth({ height: 1 }, dimensions.width)}
            color={theme.colors.divider}
          />
        </View>
        {/* Waitlisted False View */}
        <>
          {Constants['waitlisted'] ? null : (
            <View>
              {/* Demo Mode False View */}
              <>
                {!sportsbooksSynced ? null : (
                  <View>
                    {/* Bets View */}
                    <>
                      {!profileTabHistoricalOrPending(
                        Constants['profileTabDevice']
                      ) ? null : (
                        <View>
                          {/* Title View */}
                          <View
                            style={StyleSheet.applyWidth(
                              {
                                marginLeft: '4%',
                                marginRight: '4%',
                                marginTop: 24,
                              },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  alignItems: 'center',
                                  flexDirection: 'row',
                                  justifyContent: 'space-between',
                                },
                                dimensions.width
                              )}
                            >
                              {/* Settled Bets Text */}
                              <>
                                {!profileTabHistorical(
                                  Constants['profileTabDevice']
                                ) ? null : (
                                  <Text
                                    style={StyleSheet.applyWidth(
                                      {
                                        color:
                                          theme.colors
                                            .backgroundInverseMainFont,
                                        fontFamily: 'System',
                                        fontSize: 20,
                                        fontWeight: '700',
                                      },
                                      dimensions.width
                                    )}
                                  >
                                    {'Settled Bets'}
                                  </Text>
                                )}
                              </>
                              {/* Active Bets Text */}
                              <>
                                {!profileTabPending(
                                  Constants['profileTabDevice']
                                ) ? null : (
                                  <Text
                                    style={StyleSheet.applyWidth(
                                      {
                                        color:
                                          theme.colors
                                            .backgroundInverseMainFont,
                                        fontFamily: 'System',
                                        fontSize: 20,
                                        fontWeight: '700',
                                      },
                                      dimensions.width
                                    )}
                                  >
                                    {'Active Bets'}
                                  </Text>
                                )}
                              </>
                              <View
                                style={StyleSheet.applyWidth(
                                  {
                                    alignItems: 'center',
                                    flexDirection: 'row',
                                  },
                                  dimensions.width
                                )}
                              >
                                <Touchable
                                  onPress={() => {
                                    try {
                                      setGlobalVariableValue({
                                        key: 'toggleFiltersModal',
                                        value: true,
                                      });
                                      segmentLogTrack(
                                        segment,
                                        'Filters opened',
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined
                                      );
                                    } catch (err) {
                                      console.error(err);
                                    }
                                  }}
                                >
                                  <View
                                    style={StyleSheet.applyWidth(
                                      {
                                        alignItems: 'center',
                                        flexDirection: 'row',
                                        justifyContent: 'center',
                                        paddingBottom: 4,
                                        paddingLeft: 16,
                                        paddingRight: 16,
                                        paddingTop: 4,
                                      },
                                      dimensions.width
                                    )}
                                  >
                                    <>
                                      {!countFiltersApplied() ? null : (
                                        <Text
                                          style={StyleSheet.applyWidth(
                                            {
                                              color: theme.colors.primary,
                                              fontSize: 10,
                                            },
                                            dimensions.width
                                          )}
                                        >
                                          {countFiltersApplied()}
                                        </Text>
                                      )}
                                    </>
                                    {/* Filter */}
                                    <>
                                      {!countFiltersApplied() ? null : (
                                        <Icon
                                          name={'MaterialIcons/filter-alt'}
                                          color={theme.colors.primary}
                                          size={28}
                                        />
                                      )}
                                    </>
                                    {/* Filter */}
                                    <>
                                      {countFiltersApplied() ? null : (
                                        <Icon
                                          name={'MaterialIcons/filter-alt'}
                                          size={28}
                                          color={
                                            theme.colors.lightLowImportanceText
                                          }
                                        />
                                      )}
                                    </>
                                  </View>
                                </Touchable>

                                <Touchable
                                  onPress={() => {
                                    try {
                                      setGlobalVariableValue({
                                        key: 'toggleShareModal',
                                        value: true,
                                      });
                                      segmentLogTrack(
                                        segment,
                                        'Share modal opened',
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined,
                                        undefined
                                      );
                                    } catch (err) {
                                      console.error(err);
                                    }
                                  }}
                                >
                                  <View
                                    style={StyleSheet.applyWidth(
                                      {
                                        alignItems: 'flex-end',
                                        justifyContent: 'center',
                                        paddingBottom: 4,
                                        paddingLeft: 16,
                                        paddingTop: 4,
                                      },
                                      dimensions.width
                                    )}
                                  >
                                    <Icon
                                      name={'MaterialIcons/ios-share'}
                                      size={28}
                                      color={
                                        theme.colors.lightLowImportanceText
                                      }
                                    />
                                  </View>
                                </Touchable>
                              </View>
                            </View>
                          </View>
                          {/* Historical Record Pie Charts */}
                          <>
                            {!profileTabHistorical(
                              Constants['profileTabDevice']
                            ) ? null : (
                              <View
                                style={StyleSheet.applyWidth(
                                  {
                                    height: 100,
                                    marginBottom: 14,
                                    marginLeft: 16,
                                    marginRight: 16,
                                    marginTop: 16,
                                  },
                                  dimensions.width
                                )}
                              >
                                <Utils.CustomCodeErrorBoundary>
                                  <CustomCode.VictoryPieRecordFour />
                                </Utils.CustomCodeErrorBoundary>
                              </View>
                            )}
                          </>
                          {/* Pending Record Pie Charts */}
                          <>
                            {!profileTabPending(
                              Constants['profileTabDevice']
                            ) ? null : (
                              <View
                                style={StyleSheet.applyWidth(
                                  {
                                    marginBottom: 14,
                                    marginLeft: 16,
                                    marginRight: 16,
                                    marginTop: 16,
                                  },
                                  dimensions.width
                                )}
                              >
                                <>
                                  {!Constants['ringLegendShown'] ? null : (
                                    <Touchable
                                      onPress={() => {
                                        try {
                                          setGlobalVariableValue({
                                            key: 'ringLegendShown',
                                            value: false,
                                          });
                                        } catch (err) {
                                          console.error(err);
                                        }
                                      }}
                                    >
                                      <View
                                        style={StyleSheet.applyWidth(
                                          { height: 100 },
                                          dimensions.width
                                        )}
                                      >
                                        <Utils.CustomCodeErrorBoundary>
                                          <CustomCode.VictoryPieRecordPending />
                                        </Utils.CustomCodeErrorBoundary>
                                      </View>
                                      {/* Legend */}
                                      <View
                                        style={StyleSheet.applyWidth(
                                          {
                                            alignItems: 'center',
                                            marginTop: 10,
                                          },
                                          dimensions.width
                                        )}
                                      >
                                        <View
                                          style={StyleSheet.applyWidth(
                                            { alignItems: 'flex-start' },
                                            dimensions.width
                                          )}
                                        >
                                          <View
                                            style={StyleSheet.applyWidth(
                                              {
                                                alignItems: 'center',
                                                flexDirection: 'row',
                                              },
                                              dimensions.width
                                            )}
                                          >
                                            <Icon
                                              style={StyleSheet.applyWidth(
                                                { marginRight: 3 },
                                                dimensions.width
                                              )}
                                              size={10}
                                              color={theme.colors['Good']}
                                              name={'FontAwesome/circle'}
                                            />
                                            <Text
                                              style={StyleSheet.applyWidth(
                                                {
                                                  color:
                                                    theme.colors[
                                                      'Light_low_importance_text'
                                                    ],
                                                  fontSize: 10,
                                                },
                                                dimensions.width
                                              )}
                                            >
                                              {'Active bets winning'}
                                            </Text>
                                          </View>

                                          <View
                                            style={StyleSheet.applyWidth(
                                              {
                                                alignItems: 'center',
                                                flexDirection: 'row',
                                                marginTop: 3,
                                              },
                                              dimensions.width
                                            )}
                                          >
                                            <Icon
                                              style={StyleSheet.applyWidth(
                                                { marginRight: 3 },
                                                dimensions.width
                                              )}
                                              size={10}
                                              name={'FontAwesome/circle'}
                                              color={theme.colors['Fair']}
                                            />
                                            <Text
                                              style={StyleSheet.applyWidth(
                                                {
                                                  color:
                                                    theme.colors[
                                                      'Light_low_importance_text'
                                                    ],
                                                  fontSize: 10,
                                                },
                                                dimensions.width
                                              )}
                                            >
                                              {'Active bets losing'}
                                            </Text>
                                          </View>

                                          <View
                                            style={StyleSheet.applyWidth(
                                              {
                                                alignItems: 'center',
                                                flexDirection: 'row',
                                                marginTop: 3,
                                              },
                                              dimensions.width
                                            )}
                                          >
                                            <Icon
                                              style={StyleSheet.applyWidth(
                                                { marginRight: 3 },
                                                dimensions.width
                                              )}
                                              size={10}
                                              name={'FontAwesome/circle'}
                                              color={
                                                theme.colors[
                                                  'Background Inverse (Main Font)'
                                                ]
                                              }
                                            />
                                            <Text
                                              style={StyleSheet.applyWidth(
                                                {
                                                  color:
                                                    theme.colors[
                                                      'Light_low_importance_text'
                                                    ],
                                                  fontSize: 10,
                                                },
                                                dimensions.width
                                              )}
                                            >
                                              {'Not active/Push/\nUnknown'}
                                            </Text>
                                          </View>
                                        </View>
                                      </View>
                                    </Touchable>
                                  )}
                                </>
                                <>
                                  {Constants['ringLegendShown'] ? null : (
                                    <Touchable
                                      onPress={() => {
                                        try {
                                          setGlobalVariableValue({
                                            key: 'ringLegendShown',
                                            value: true,
                                          });
                                        } catch (err) {
                                          console.error(err);
                                        }
                                      }}
                                    >
                                      <View
                                        style={StyleSheet.applyWidth(
                                          { height: 100 },
                                          dimensions.width
                                        )}
                                      >
                                        <Utils.CustomCodeErrorBoundary>
                                          <CustomCode.VictoryPieRecordPending />
                                        </Utils.CustomCodeErrorBoundary>
                                      </View>
                                    </Touchable>
                                  )}
                                </>
                              </View>
                            )}
                          </>
                          {/* All Bets Fetch */}
                          <SwaggerAPIApi.FetchGetBetslipsByBettorIdNotKate$sGET
                            dummy={Constants['updatedSportsBook']}
                            internalId={Constants['internalId']}
                          >
                            {({
                              loading,
                              error,
                              data,
                              refetchGetBetslipsByBettorIdNotKate$s,
                            }) => {
                              const allBetsFetchData = data;
                              if (!allBetsFetchData || loading) {
                                return <ActivityIndicator />;
                              }

                              if (error) {
                                return (
                                  <Text style={{ textAlign: 'center' }}>
                                    There was a problem fetching this data
                                  </Text>
                                );
                              }

                              return (
                                <>
                                  {/* All Bets Section */}
                                  <View
                                    style={StyleSheet.applyWidth(
                                      {
                                        marginLeft: '4%',
                                        marginRight: '4%',
                                        marginTop: 4,
                                        paddingBottom: 100,
                                      },
                                      dimensions.width
                                    )}
                                  >
                                    {/* No Bets Found */}
                                    <>
                                      {betsFound ? null : (
                                        <View
                                          style={StyleSheet.applyWidth(
                                            {
                                              alignItems: 'center',
                                              marginTop: 18,
                                            },
                                            dimensions.width
                                          )}
                                        >
                                          <Text
                                            style={StyleSheet.applyWidth(
                                              {
                                                color:
                                                  theme.colors
                                                    .lightLowImportanceText,
                                                fontFamily: 'System',
                                                fontWeight: '700',
                                              },
                                              dimensions.width
                                            )}
                                          >
                                            {'No Bets Found'}
                                          </Text>
                                        </View>
                                      )}
                                    </>
                                    {/* All Bets List ABC */}
                                    <FlatList
                                      data={filterBetslips(allBetsFetchData)}
                                      listKey={'FN9XrJJ8'}
                                      keyExtractor={allBetsListABCData =>
                                        allBetsListABCData?.id ||
                                        allBetsListABCData?.uuid ||
                                        JSON.stringify(allBetsListABCData)
                                      }
                                      renderItem={({ item }) => {
                                        const allBetsListABCData = item;
                                        return (
                                          <>
                                            {/* Historical Bets Touchable */}
                                            <>
                                              {!profileTabHistorical(
                                                Constants['profileTabDevice']
                                              ) ? null : (
                                                <Touchable
                                                  onPress={() => {
                                                    try {
                                                      navigation.navigate(
                                                        'MyBetsBetInfoScreen',
                                                        {
                                                          Bet: allBetsListABCData?.id,
                                                        }
                                                      );
                                                      segmentLogTrack(
                                                        segment,
                                                        'Settled bet clicked',
                                                        undefined,
                                                        allBetsListABCData?.id,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined
                                                      );
                                                    } catch (err) {
                                                      console.error(err);
                                                    }
                                                  }}
                                                  style={StyleSheet.applyWidth(
                                                    { marginTop: 6 },
                                                    dimensions.width
                                                  )}
                                                >
                                                  <Surface
                                                    style={StyleSheet.applyWidth(
                                                      {
                                                        backgroundColor:
                                                          theme.colors.divider,
                                                        borderRadius: 8,
                                                      },
                                                      dimensions.width
                                                    )}
                                                    elevation={1}
                                                  >
                                                    {/* Bet Block */}
                                                    <View
                                                      style={StyleSheet.applyWidth(
                                                        {
                                                          backgroundColor:
                                                            theme.colors
                                                              .divider,
                                                          borderBottomWidth: 1,
                                                          borderColor:
                                                            theme.colors
                                                              .divider,
                                                          borderLeftWidth: 1,
                                                          borderRadius: 8,
                                                          borderRightWidth: 1,
                                                          borderTopWidth: 1,
                                                          flexDirection: 'row',
                                                          justifyContent:
                                                            'space-between',
                                                          paddingBottom: 6,
                                                          paddingLeft: 6,
                                                          paddingRight: 6,
                                                          paddingTop: 6,
                                                        },
                                                        dimensions.width
                                                      )}
                                                      collapsable={false}
                                                    >
                                                      {/* Left Align */}
                                                      <View
                                                        style={StyleSheet.applyWidth(
                                                          {
                                                            flexDirection:
                                                              'row',
                                                            width: '70%',
                                                          },
                                                          dimensions.width
                                                        )}
                                                      >
                                                        {/* Icon */}
                                                        <View
                                                          style={StyleSheet.applyWidth(
                                                            {
                                                              alignContent:
                                                                'center',
                                                              alignItems:
                                                                'center',
                                                              justifyContent:
                                                                'center',
                                                              marginRight: 6,
                                                            },
                                                            dimensions.width
                                                          )}
                                                        >
                                                          {/* Loss */}
                                                          <>
                                                            {!lossOutcomeCompare(
                                                              allBetsListABCData?.outcome
                                                            ) ? null : (
                                                              <Icon
                                                                name={
                                                                  'Ionicons/ios-close-circle'
                                                                }
                                                                size={32}
                                                                color={
                                                                  theme.colors
                                                                    .badErrorCancel
                                                                }
                                                              />
                                                            )}
                                                          </>
                                                          {/* Win */}
                                                          <>
                                                            {!winOutcomeCompare(
                                                              allBetsListABCData?.outcome
                                                            ) ? null : (
                                                              <Icon
                                                                name={
                                                                  'Ionicons/ios-checkmark-circle'
                                                                }
                                                                size={32}
                                                                color={
                                                                  theme.colors
                                                                    .good
                                                                }
                                                              />
                                                            )}
                                                          </>
                                                          {/* Push */}
                                                          <>
                                                            {!pushOutcomeCompare(
                                                              allBetsListABCData?.outcome
                                                            ) ? null : (
                                                              <Icon
                                                                name={
                                                                  'Ionicons/ios-remove-circle'
                                                                }
                                                                size={32}
                                                                color={
                                                                  theme.colors[
                                                                    'Background Inverse (Main Font)'
                                                                  ]
                                                                }
                                                              />
                                                            )}
                                                          </>
                                                          {/* Void */}
                                                          <>
                                                            {!voidOutcomeCompare(
                                                              allBetsListABCData?.outcome
                                                            ) ? null : (
                                                              <Icon
                                                                name={
                                                                  'Ionicons/ios-remove-circle'
                                                                }
                                                                size={32}
                                                                color={
                                                                  theme.colors
                                                                    .lightLowImportanceText
                                                                }
                                                              />
                                                            )}
                                                          </>
                                                          {/* Cashout */}
                                                          <>
                                                            {!cashoutOutcomeCompare(
                                                              allBetsListABCData?.outcome
                                                            ) ? null : (
                                                              <Icon
                                                                name={
                                                                  'Ionicons/ios-arrow-undo-circle'
                                                                }
                                                                size={32}
                                                                color={
                                                                  theme.colors
                                                                    .fair
                                                                }
                                                              />
                                                            )}
                                                          </>
                                                        </View>
                                                        {/* Bet/Odds/Teams */}
                                                        <View
                                                          style={StyleSheet.applyWidth(
                                                            {
                                                              flex: 1,
                                                              justifyContent:
                                                                'center',
                                                              marginRight: 6,
                                                            },
                                                            dimensions.width
                                                          )}
                                                        >
                                                          {/* Graded Single Bet Lower Level */}
                                                          <>
                                                            {!typeSingleCompare(
                                                              allBetsListABCData?.type
                                                            ) ? null : (
                                                              <FlatList
                                                                data={
                                                                  allBetsListABCData?.bets
                                                                }
                                                                listKey={JSON.stringify(
                                                                  allBetsListABCData?.bets
                                                                )}
                                                                keyExtractor={gradedSingleBetLowerLevelData =>
                                                                  gradedSingleBetLowerLevelData?.id ||
                                                                  gradedSingleBetLowerLevelData?.uuid ||
                                                                  JSON.stringify(
                                                                    gradedSingleBetLowerLevelData
                                                                  )
                                                                }
                                                                renderItem={({
                                                                  item,
                                                                }) => {
                                                                  const gradedSingleBetLowerLevelData =
                                                                    item;
                                                                  return (
                                                                    <>
                                                                      {/* Single Bet */}
                                                                      <>
                                                                        {propositionTotal(
                                                                          gradedSingleBetLowerLevelData?.proposition
                                                                        ) ? null : (
                                                                          <Text
                                                                            style={StyleSheet.applyWidth(
                                                                              {
                                                                                color:
                                                                                  theme
                                                                                    .colors
                                                                                    .backgroundInverseMainFont,
                                                                                fontFamily:
                                                                                  'System',
                                                                                fontWeight:
                                                                                  '700',
                                                                              },
                                                                              dimensions.width
                                                                            )}
                                                                            ellipsizeMode={
                                                                              'tail'
                                                                            }
                                                                            numberOfLines={
                                                                              2
                                                                            }
                                                                          >
                                                                            {spacingSuffix(
                                                                              gradedSingleBetLowerLevelData
                                                                                ?.propDetails
                                                                                ?.player
                                                                            )}
                                                                            {spacingSuffix(
                                                                              gradedSingleBetLowerLevelData
                                                                                ?.propDetails
                                                                                ?.team
                                                                            )}
                                                                            {propositionUncommonDisplay(
                                                                              gradedSingleBetLowerLevelData?.proposition
                                                                            )}
                                                                            {spacingSuffix(
                                                                              gradedSingleBetLowerLevelData?.position
                                                                            )}
                                                                            {lineSuffix(
                                                                              gradedSingleBetLowerLevelData?.line
                                                                            )}
                                                                            {propDetailsMetricSpecial(
                                                                              gradedSingleBetLowerLevelData
                                                                                ?.propDetails
                                                                                ?.metricSpecial
                                                                            )}
                                                                            {oddsAmericanSyntax(
                                                                              allBetsListABCData?.oddsAmerican
                                                                            )}
                                                                            {segmentExists(
                                                                              gradedSingleBetLowerLevelData?.segment
                                                                            )}
                                                                            {futureBetExists(
                                                                              gradedSingleBetLowerLevelData
                                                                                ?.propDetails
                                                                                ?.future
                                                                            )}
                                                                            {liveBetExists(
                                                                              gradedSingleBetLowerLevelData?.live
                                                                            )}
                                                                          </Text>
                                                                        )}
                                                                      </>
                                                                      {/* propositionTotal */}
                                                                      <>
                                                                        {!propositionTotal(
                                                                          gradedSingleBetLowerLevelData?.proposition
                                                                        ) ? null : (
                                                                          <Text
                                                                            style={StyleSheet.applyWidth(
                                                                              {
                                                                                color:
                                                                                  theme
                                                                                    .colors
                                                                                    .backgroundInverseMainFont,
                                                                                fontFamily:
                                                                                  'System',
                                                                                fontSize: 14,
                                                                                fontWeight:
                                                                                  '700',
                                                                              },
                                                                              dimensions.width
                                                                            )}
                                                                            numberOfLines={
                                                                              2
                                                                            }
                                                                            ellipsizeMode={
                                                                              'tail'
                                                                            }
                                                                          >
                                                                            {spacingSuffix(
                                                                              gradedSingleBetLowerLevelData
                                                                                ?.propDetails
                                                                                ?.player
                                                                            )}
                                                                            {spacingSuffix(
                                                                              gradedSingleBetLowerLevelData
                                                                                ?.propDetails
                                                                                ?.team
                                                                            )}
                                                                            {spacingSuffix(
                                                                              gradedSingleBetLowerLevelData?.position
                                                                            )}
                                                                            {spacingSuffix(
                                                                              gradedSingleBetLowerLevelData?.line
                                                                            )}
                                                                            {propDetailsMetricSpecial(
                                                                              gradedSingleBetLowerLevelData
                                                                                ?.propDetails
                                                                                ?.metricSpecial
                                                                            )}
                                                                            {oddsAmericanSyntax(
                                                                              allBetsListABCData?.oddsAmerican
                                                                            )}
                                                                            {segmentExists(
                                                                              gradedSingleBetLowerLevelData?.segment
                                                                            )}
                                                                            {futureBetExists(
                                                                              gradedSingleBetLowerLevelData
                                                                                ?.propDetails
                                                                                ?.future
                                                                            )}
                                                                            {liveBetExists(
                                                                              gradedSingleBetLowerLevelData?.live
                                                                            )}
                                                                          </Text>
                                                                        )}
                                                                      </>
                                                                      <>
                                                                        {eventNotExist(
                                                                          gradedSingleBetLowerLevelData?.event
                                                                        ) ? null : (
                                                                          <View
                                                                            style={StyleSheet.applyWidth(
                                                                              {
                                                                                flexDirection:
                                                                                  'row',
                                                                                flexWrap:
                                                                                  'wrap',
                                                                              },
                                                                              dimensions.width
                                                                            )}
                                                                          >
                                                                            {/* League */}
                                                                            <>
                                                                              {!gradedSingleBetLowerLevelData
                                                                                ?.event
                                                                                ?.awayTeam ? null : (
                                                                                <Text
                                                                                  style={StyleSheet.applyWidth(
                                                                                    {
                                                                                      color:
                                                                                        theme
                                                                                          .colors[
                                                                                          'Light_low_importance_text'
                                                                                        ],
                                                                                      fontSize: 12,
                                                                                    },
                                                                                    dimensions.width
                                                                                  )}
                                                                                >
                                                                                  {
                                                                                    gradedSingleBetLowerLevelData
                                                                                      ?.event
                                                                                      ?.league
                                                                                  }
                                                                                  {
                                                                                    ' | '
                                                                                  }
                                                                                </Text>
                                                                              )}
                                                                            </>
                                                                            {/* Away Team */}
                                                                            <>
                                                                              {!gradedSingleBetLowerLevelData
                                                                                ?.event
                                                                                ?.awayTeam ? null : (
                                                                                <Text
                                                                                  style={StyleSheet.applyWidth(
                                                                                    {
                                                                                      color:
                                                                                        theme
                                                                                          .colors[
                                                                                          'Light_low_importance_text'
                                                                                        ],
                                                                                      fontSize: 12,
                                                                                    },
                                                                                    dimensions.width
                                                                                  )}
                                                                                >
                                                                                  {abbrTeamName(
                                                                                    gradedSingleBetLowerLevelData
                                                                                      ?.event
                                                                                      ?.awayTeam
                                                                                  )}{' '}
                                                                                </Text>
                                                                              )}
                                                                            </>
                                                                            {/* Away Score */}
                                                                            <>
                                                                              {!gradedSingleBetLowerLevelData
                                                                                ?.event
                                                                                ?.awayScore ? null : (
                                                                                <Text
                                                                                  style={StyleSheet.applyWidth(
                                                                                    {
                                                                                      color:
                                                                                        theme
                                                                                          .colors[
                                                                                          'Light_low_importance_text'
                                                                                        ],
                                                                                      fontFamily:
                                                                                        'System',
                                                                                      fontSize: 12,
                                                                                      fontWeight:
                                                                                        '600',
                                                                                    },
                                                                                    dimensions.width
                                                                                  )}
                                                                                >
                                                                                  {
                                                                                    gradedSingleBetLowerLevelData
                                                                                      ?.event
                                                                                      ?.awayScore
                                                                                  }{' '}
                                                                                </Text>
                                                                              )}
                                                                            </>
                                                                            {/* Dash */}
                                                                            <>
                                                                              {!gradedSingleBetLowerLevelData
                                                                                ?.event
                                                                                ?.awayTeam ? null : (
                                                                                <Text
                                                                                  style={StyleSheet.applyWidth(
                                                                                    {
                                                                                      color:
                                                                                        theme
                                                                                          .colors[
                                                                                          'Light_low_importance_text'
                                                                                        ],
                                                                                      fontSize: 12,
                                                                                    },
                                                                                    dimensions.width
                                                                                  )}
                                                                                >
                                                                                  {
                                                                                    '- '
                                                                                  }
                                                                                </Text>
                                                                              )}
                                                                            </>
                                                                            {/* Home Score */}
                                                                            <>
                                                                              {!gradedSingleBetLowerLevelData
                                                                                ?.event
                                                                                ?.homeScore ? null : (
                                                                                <Text
                                                                                  style={StyleSheet.applyWidth(
                                                                                    {
                                                                                      color:
                                                                                        theme
                                                                                          .colors[
                                                                                          'Light_low_importance_text'
                                                                                        ],
                                                                                      fontFamily:
                                                                                        'System',
                                                                                      fontSize: 12,
                                                                                      fontWeight:
                                                                                        '600',
                                                                                    },
                                                                                    dimensions.width
                                                                                  )}
                                                                                >
                                                                                  {
                                                                                    gradedSingleBetLowerLevelData
                                                                                      ?.event
                                                                                      ?.homeScore
                                                                                  }{' '}
                                                                                </Text>
                                                                              )}
                                                                            </>
                                                                            {/* Home Team */}
                                                                            <>
                                                                              {!gradedSingleBetLowerLevelData
                                                                                ?.event
                                                                                ?.awayTeam ? null : (
                                                                                <Text
                                                                                  style={StyleSheet.applyWidth(
                                                                                    {
                                                                                      color:
                                                                                        theme
                                                                                          .colors[
                                                                                          'Light_low_importance_text'
                                                                                        ],
                                                                                      fontSize: 12,
                                                                                    },
                                                                                    dimensions.width
                                                                                  )}
                                                                                >
                                                                                  {abbrTeamName(
                                                                                    gradedSingleBetLowerLevelData
                                                                                      ?.event
                                                                                      ?.homeTeam
                                                                                  )}
                                                                                </Text>
                                                                              )}
                                                                            </>
                                                                            {/* League and Name */}
                                                                            <>
                                                                              {gradedSingleBetLowerLevelData
                                                                                ?.event
                                                                                ?.awayTeam ? null : (
                                                                                <Text
                                                                                  style={StyleSheet.applyWidth(
                                                                                    {
                                                                                      color:
                                                                                        theme
                                                                                          .colors[
                                                                                          'Light_low_importance_text'
                                                                                        ],
                                                                                      fontSize: 12,
                                                                                    },
                                                                                    dimensions.width
                                                                                  )}
                                                                                >
                                                                                  {
                                                                                    gradedSingleBetLowerLevelData
                                                                                      ?.event
                                                                                      ?.league
                                                                                  }
                                                                                  {
                                                                                    ' | '
                                                                                  }
                                                                                  {
                                                                                    gradedSingleBetLowerLevelData
                                                                                      ?.event
                                                                                      ?.name
                                                                                  }
                                                                                </Text>
                                                                              )}
                                                                            </>
                                                                          </View>
                                                                        )}
                                                                      </>
                                                                      {/* Start Time */}
                                                                      <>
                                                                        {eventNotExist(
                                                                          gradedSingleBetLowerLevelData?.event
                                                                        ) ? null : (
                                                                          <Text
                                                                            style={StyleSheet.applyWidth(
                                                                              {
                                                                                color:
                                                                                  theme
                                                                                    .colors
                                                                                    .lightLowImportanceText,
                                                                                fontSize: 10,
                                                                              },
                                                                              dimensions.width
                                                                            )}
                                                                            numberOfLines={
                                                                              1
                                                                            }
                                                                            ellipsizeMode={
                                                                              'tail'
                                                                            }
                                                                          >
                                                                            {dateStandard(
                                                                              gradedSingleBetLowerLevelData
                                                                                ?.event
                                                                                ?.startTime
                                                                            )}
                                                                          </Text>
                                                                        )}
                                                                      </>
                                                                    </>
                                                                  );
                                                                }}
                                                                contentContainerStyle={StyleSheet.applyWidth(
                                                                  { flex: 1 },
                                                                  dimensions.width
                                                                )}
                                                                numColumns={1}
                                                              />
                                                            )}
                                                          </>
                                                          {/* Parlay */}
                                                          <>
                                                            {!typeParlayCompare(
                                                              allBetsListABCData?.type
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .backgroundInverseMainFont,
                                                                    fontFamily:
                                                                      'System',
                                                                    fontWeight:
                                                                      '700',
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                              >
                                                                {parlayLegCount(
                                                                  allBetsListABCData?.bets
                                                                )}
                                                                {'X Parlay '}
                                                                {oddsAmericanSyntax(
                                                                  allBetsListABCData?.oddsAmerican
                                                                )}
                                                              </Text>
                                                            )}
                                                          </>
                                                          {/* Teaser */}
                                                          <>
                                                            {!typeTeaserCompare(
                                                              allBetsListABCData?.type
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .backgroundInverseMainFont,
                                                                    fontFamily:
                                                                      'System',
                                                                    fontWeight:
                                                                      '700',
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                              >
                                                                {'Teaser '}
                                                                {oddsAmericanSyntax(
                                                                  allBetsListABCData?.oddsAmerican
                                                                )}
                                                              </Text>
                                                            )}
                                                          </>
                                                          {/* Graded Multileg Bet */}
                                                          <>
                                                            {!typeMultilegCompare(
                                                              allBetsListABCData?.type
                                                            ) ? null : (
                                                              <FlatList
                                                                data={
                                                                  allBetsListABCData?.bets
                                                                }
                                                                listKey={JSON.stringify(
                                                                  allBetsListABCData?.bets
                                                                )}
                                                                keyExtractor={gradedMultilegBetData =>
                                                                  gradedMultilegBetData?.id ||
                                                                  gradedMultilegBetData?.uuid ||
                                                                  JSON.stringify(
                                                                    gradedMultilegBetData
                                                                  )
                                                                }
                                                                renderItem={({
                                                                  item,
                                                                }) => {
                                                                  const gradedMultilegBetData =
                                                                    item;
                                                                  return (
                                                                    <>
                                                                      {/* Is Multileg */}
                                                                      <View
                                                                        style={StyleSheet.applyWidth(
                                                                          {
                                                                            alignItems:
                                                                              'center',
                                                                            flexDirection:
                                                                              'row',
                                                                          },
                                                                          dimensions.width
                                                                        )}
                                                                      >
                                                                        {/* Icon */}
                                                                        <View
                                                                          style={StyleSheet.applyWidth(
                                                                            {
                                                                              alignContent:
                                                                                'center',
                                                                              alignItems:
                                                                                'center',
                                                                              justifyContent:
                                                                                'center',
                                                                              marginRight: 1,
                                                                            },
                                                                            dimensions.width
                                                                          )}
                                                                        >
                                                                          {/* Pending/Null */}
                                                                          <>
                                                                            {!pendingOutcomeCompare(
                                                                              gradedMultilegBetData?.outcome
                                                                            ) ? null : (
                                                                              <Icon
                                                                                size={
                                                                                  20
                                                                                }
                                                                                color={
                                                                                  theme
                                                                                    .colors
                                                                                    .lightLowImportanceText
                                                                                }
                                                                                name={
                                                                                  'Ionicons/ios-radio-button-off'
                                                                                }
                                                                              />
                                                                            )}
                                                                          </>
                                                                          {/* Loss */}
                                                                          <>
                                                                            {!lossOutcomeCompare(
                                                                              gradedMultilegBetData?.outcome
                                                                            ) ? null : (
                                                                              <Icon
                                                                                name={
                                                                                  'Ionicons/ios-close-circle'
                                                                                }
                                                                                size={
                                                                                  20
                                                                                }
                                                                                color={
                                                                                  theme
                                                                                    .colors
                                                                                    .badErrorCancel
                                                                                }
                                                                              />
                                                                            )}
                                                                          </>
                                                                          {/* Win */}
                                                                          <>
                                                                            {!winOutcomeCompare(
                                                                              gradedMultilegBetData?.outcome
                                                                            ) ? null : (
                                                                              <Icon
                                                                                name={
                                                                                  'Ionicons/ios-checkmark-circle'
                                                                                }
                                                                                size={
                                                                                  20
                                                                                }
                                                                                color={
                                                                                  theme
                                                                                    .colors
                                                                                    .good
                                                                                }
                                                                              />
                                                                            )}
                                                                          </>
                                                                          {/* Push */}
                                                                          <>
                                                                            {!pushOutcomeCompare(
                                                                              gradedMultilegBetData?.outcome
                                                                            ) ? null : (
                                                                              <Icon
                                                                                name={
                                                                                  'Ionicons/ios-remove-circle'
                                                                                }
                                                                                size={
                                                                                  20
                                                                                }
                                                                                color={
                                                                                  theme
                                                                                    .colors[
                                                                                    'Background Inverse (Main Font)'
                                                                                  ]
                                                                                }
                                                                              />
                                                                            )}
                                                                          </>
                                                                          {/* Void */}
                                                                          <>
                                                                            {!voidOutcomeCompare(
                                                                              gradedMultilegBetData?.outcome
                                                                            ) ? null : (
                                                                              <Icon
                                                                                name={
                                                                                  'Ionicons/ios-remove-circle'
                                                                                }
                                                                                size={
                                                                                  20
                                                                                }
                                                                                color={
                                                                                  theme
                                                                                    .colors
                                                                                    .lightLowImportanceText
                                                                                }
                                                                              />
                                                                            )}
                                                                          </>
                                                                          {/* Cashout */}
                                                                          <>
                                                                            {!cashoutOutcomeCompare(
                                                                              gradedMultilegBetData?.outcome
                                                                            ) ? null : (
                                                                              <Icon
                                                                                name={
                                                                                  'Ionicons/ios-arrow-undo-circle'
                                                                                }
                                                                                size={
                                                                                  20
                                                                                }
                                                                                color={
                                                                                  theme
                                                                                    .colors
                                                                                    .fair
                                                                                }
                                                                              />
                                                                            )}
                                                                          </>
                                                                        </View>

                                                                        <View
                                                                          style={StyleSheet.applyWidth(
                                                                            {
                                                                              flex: 1,
                                                                              justifyContent:
                                                                                'center',
                                                                            },
                                                                            dimensions.width
                                                                          )}
                                                                        >
                                                                          <>
                                                                            {propositionTotal(
                                                                              gradedMultilegBetData?.proposition
                                                                            ) ? null : (
                                                                              <Text
                                                                                style={StyleSheet.applyWidth(
                                                                                  {
                                                                                    color:
                                                                                      theme
                                                                                        .colors
                                                                                        .lightLowImportanceText,
                                                                                    fontSize: 12,
                                                                                  },
                                                                                  dimensions.width
                                                                                )}
                                                                                ellipsizeMode={
                                                                                  'tail'
                                                                                }
                                                                                numberOfLines={
                                                                                  2
                                                                                }
                                                                              >
                                                                                {showParlayBookDescription(
                                                                                  gradedMultilegBetData
                                                                                )}
                                                                                {spacingSuffix(
                                                                                  gradedMultilegBetData
                                                                                    ?.propDetails
                                                                                    ?.player
                                                                                )}
                                                                                {spacingSuffix(
                                                                                  gradedMultilegBetData
                                                                                    ?.propDetails
                                                                                    ?.team
                                                                                )}
                                                                                {propositionUncommonDisplay(
                                                                                  gradedMultilegBetData?.proposition
                                                                                )}
                                                                                {spacingSuffix(
                                                                                  gradedMultilegBetData?.position
                                                                                )}
                                                                                {lineSuffix(
                                                                                  gradedMultilegBetData?.line
                                                                                )}
                                                                                {propDetailsMetricSpecial(
                                                                                  gradedMultilegBetData
                                                                                    ?.propDetails
                                                                                    ?.metricSpecial
                                                                                )}
                                                                                {oddsAmericanSyntax(
                                                                                  gradedMultilegBetData?.oddsAmerican
                                                                                )}
                                                                                {segmentExists(
                                                                                  gradedMultilegBetData?.segment
                                                                                )}
                                                                                {futureBetExists(
                                                                                  gradedMultilegBetData
                                                                                    ?.propDetails
                                                                                    ?.future
                                                                                )}
                                                                                {liveBetExists(
                                                                                  gradedMultilegBetData?.live
                                                                                )}
                                                                              </Text>
                                                                            )}
                                                                          </>
                                                                          {/* propositionTotal */}
                                                                          <>
                                                                            {!propositionTotal(
                                                                              gradedMultilegBetData?.proposition
                                                                            ) ? null : (
                                                                              <Text
                                                                                style={StyleSheet.applyWidth(
                                                                                  {
                                                                                    color:
                                                                                      theme
                                                                                        .colors
                                                                                        .lightLowImportanceText,
                                                                                    fontSize: 12,
                                                                                  },
                                                                                  dimensions.width
                                                                                )}
                                                                                ellipsizeMode={
                                                                                  'tail'
                                                                                }
                                                                                numberOfLines={
                                                                                  2
                                                                                }
                                                                              >
                                                                                {showParlayBookDescription(
                                                                                  gradedMultilegBetData
                                                                                )}
                                                                                {spacingSuffix(
                                                                                  gradedMultilegBetData
                                                                                    ?.propDetails
                                                                                    ?.player
                                                                                )}
                                                                                {spacingSuffix(
                                                                                  gradedMultilegBetData
                                                                                    ?.propDetails
                                                                                    ?.team
                                                                                )}
                                                                                {spacingSuffix(
                                                                                  gradedMultilegBetData?.position
                                                                                )}
                                                                                {spacingSuffix(
                                                                                  gradedMultilegBetData?.line
                                                                                )}
                                                                                {propDetailsMetricSpecial(
                                                                                  gradedMultilegBetData
                                                                                    ?.propDetails
                                                                                    ?.metricSpecial
                                                                                )}
                                                                                {oddsAmericanSyntax(
                                                                                  gradedMultilegBetData?.oddsAmerican
                                                                                )}
                                                                                {segmentExists(
                                                                                  gradedMultilegBetData?.segment
                                                                                )}
                                                                                {futureBetExists(
                                                                                  gradedMultilegBetData
                                                                                    ?.propDetails
                                                                                    ?.future
                                                                                )}
                                                                                {liveBetExists(
                                                                                  gradedMultilegBetData?.live
                                                                                )}
                                                                              </Text>
                                                                            )}
                                                                          </>
                                                                        </View>
                                                                      </View>
                                                                    </>
                                                                  );
                                                                }}
                                                                contentContainerStyle={StyleSheet.applyWidth(
                                                                  { flex: 1 },
                                                                  dimensions.width
                                                                )}
                                                                numColumns={1}
                                                              />
                                                            )}
                                                          </>
                                                        </View>
                                                      </View>
                                                      {/* Right Align */}
                                                      <View
                                                        style={StyleSheet.applyWidth(
                                                          {
                                                            flexDirection:
                                                              'row',
                                                            justifyContent:
                                                              'flex-end',
                                                            width: '30%',
                                                          },
                                                          dimensions.width
                                                        )}
                                                      >
                                                        <View
                                                          style={StyleSheet.applyWidth(
                                                            {
                                                              alignItems:
                                                                'flex-end',
                                                              justifyContent:
                                                                'space-between',
                                                            },
                                                            dimensions.width
                                                          )}
                                                        >
                                                          <Text
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                color:
                                                                  theme.colors
                                                                    .divider,
                                                                fontSize: 12,
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            {'-'}
                                                          </Text>

                                                          <View
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                alignItems:
                                                                  'flex-end',
                                                                flex: 1,
                                                                justifyContent:
                                                                  'center',
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            <>
                                                              {!lossOutcomeCompare(
                                                                allBetsListABCData?.outcome
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .badErrorCancel,
                                                                      fontFamily:
                                                                        'System',
                                                                      fontSize: 14,
                                                                      fontWeight:
                                                                        '700',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                  ellipsizeMode={
                                                                    'tail'
                                                                  }
                                                                  numberOfLines={
                                                                    1
                                                                  }
                                                                >
                                                                  {netProfitSuffix(
                                                                    allBetsListABCData?.netProfit
                                                                  )}
                                                                </Text>
                                                              )}
                                                            </>
                                                            <>
                                                              {!winOutcomeCompare(
                                                                allBetsListABCData?.outcome
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .good,
                                                                      fontFamily:
                                                                        'System',
                                                                      fontSize: 14,
                                                                      fontWeight:
                                                                        '700',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                  ellipsizeMode={
                                                                    'tail'
                                                                  }
                                                                  numberOfLines={
                                                                    1
                                                                  }
                                                                >
                                                                  {netProfitSuffix(
                                                                    allBetsListABCData?.netProfit
                                                                  )}
                                                                </Text>
                                                              )}
                                                            </>
                                                            <>
                                                              {!pushOutcomeCompare(
                                                                allBetsListABCData?.outcome
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .backgroundInverseMainFont,
                                                                      fontFamily:
                                                                        'System',
                                                                      fontSize: 14,
                                                                      fontWeight:
                                                                        '700',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                  ellipsizeMode={
                                                                    'tail'
                                                                  }
                                                                  numberOfLines={
                                                                    1
                                                                  }
                                                                >
                                                                  {netProfitSuffix(
                                                                    allBetsListABCData?.netProfit
                                                                  )}
                                                                </Text>
                                                              )}
                                                            </>
                                                            <>
                                                              {!voidOutcomeCompare(
                                                                allBetsListABCData?.outcome
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .backgroundInverseMainFont,
                                                                      fontFamily:
                                                                        'System',
                                                                      fontSize: 14,
                                                                      fontWeight:
                                                                        '700',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                  ellipsizeMode={
                                                                    'tail'
                                                                  }
                                                                  numberOfLines={
                                                                    1
                                                                  }
                                                                >
                                                                  {netProfitSuffix(
                                                                    allBetsListABCData?.netProfit
                                                                  )}
                                                                </Text>
                                                              )}
                                                            </>
                                                            <>
                                                              {!cashoutOutcomeCompare(
                                                                allBetsListABCData?.outcome
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .fair,
                                                                      fontFamily:
                                                                        'System',
                                                                      fontSize: 14,
                                                                      fontWeight:
                                                                        '700',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                  ellipsizeMode={
                                                                    'tail'
                                                                  }
                                                                  numberOfLines={
                                                                    1
                                                                  }
                                                                >
                                                                  {netProfitSuffix(
                                                                    allBetsListABCData?.netProfit
                                                                  )}
                                                                </Text>
                                                              )}
                                                            </>
                                                          </View>

                                                          <View
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                alignItems:
                                                                  'center',
                                                                flexDirection:
                                                                  'row',
                                                                justifyContent:
                                                                  'flex-end',
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            {/* Free Bet */}
                                                            <>
                                                              {!atRiskZero(
                                                                allBetsListABCData?.atRisk
                                                              ) ? null : (
                                                                <View
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      alignItems:
                                                                        'center',
                                                                      backgroundColor:
                                                                        theme
                                                                          .colors[
                                                                          'Light_low_importance_text'
                                                                        ],
                                                                      borderRadius: 2,
                                                                      height: 10,
                                                                      justifyContent:
                                                                        'center',
                                                                      marginRight: 4,
                                                                      width: 10,
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  <Text
                                                                    style={StyleSheet.applyWidth(
                                                                      {
                                                                        color:
                                                                          theme
                                                                            .colors[
                                                                            'Divider'
                                                                          ],
                                                                        fontFamily:
                                                                          'System',
                                                                        fontSize: 8,
                                                                        fontWeight:
                                                                          '700',
                                                                        textAlign:
                                                                          'center',
                                                                      },
                                                                      dimensions.width
                                                                    )}
                                                                  >
                                                                    {'F'}
                                                                  </Text>
                                                                </View>
                                                              )}
                                                            </>
                                                            {/* Logo */}
                                                            <Image
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  height: 12,
                                                                  width: 12,
                                                                },
                                                                dimensions.width
                                                              )}
                                                              resizeMode={
                                                                'contain'
                                                              }
                                                              source={{
                                                                uri: `${allBetsListABCData?.book?.bookLogo}`,
                                                              }}
                                                            />
                                                          </View>
                                                        </View>
                                                      </View>
                                                    </View>
                                                  </Surface>
                                                </Touchable>
                                              )}
                                            </>
                                            {/* Pending Bets Touchable */}
                                            <>
                                              {!profileTabPending(
                                                Constants['profileTabDevice']
                                              ) ? null : (
                                                <Touchable
                                                  onPress={() => {
                                                    try {
                                                      navigation.navigate(
                                                        'MyBetsBetInfoScreen',
                                                        {
                                                          Bet: allBetsListABCData?.id,
                                                        }
                                                      );
                                                      segmentLogTrack(
                                                        segment,
                                                        'Active bets clicked',
                                                        undefined,
                                                        allBetsListABCData?.id,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined,
                                                        undefined
                                                      );
                                                    } catch (err) {
                                                      console.error(err);
                                                    }
                                                  }}
                                                  style={StyleSheet.applyWidth(
                                                    { marginTop: 6 },
                                                    dimensions.width
                                                  )}
                                                >
                                                  <Surface
                                                    style={StyleSheet.applyWidth(
                                                      {
                                                        backgroundColor:
                                                          theme.colors.divider,
                                                        borderRadius: 8,
                                                      },
                                                      dimensions.width
                                                    )}
                                                    elevation={1}
                                                  >
                                                    {/* Pending Bet Block */}
                                                    <View
                                                      style={StyleSheet.applyWidth(
                                                        {
                                                          backgroundColor:
                                                            theme.colors
                                                              .divider,
                                                          borderBottomWidth: 1,
                                                          borderColor:
                                                            theme.colors
                                                              .divider,
                                                          borderLeftWidth: 1,
                                                          borderRadius: 8,
                                                          borderRightWidth: 1,
                                                          borderTopWidth: 1,
                                                          flexDirection: 'row',
                                                          justifyContent:
                                                            'space-between',
                                                          paddingBottom: 6,
                                                          paddingLeft: 6,
                                                          paddingRight: 6,
                                                          paddingTop: 6,
                                                        },
                                                        dimensions.width
                                                      )}
                                                      collapsable={false}
                                                    >
                                                      {/* Left Align */}
                                                      <>
                                                        {!typeSingleCompare(
                                                          allBetsListABCData?.type
                                                        ) ? null : (
                                                          <View
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                flexDirection:
                                                                  'row',
                                                                width: '50%',
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            {/* Bet/Odds/Teams/Time */}
                                                            <View
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  flex: 1,
                                                                  justifyContent:
                                                                    'center',
                                                                  marginRight: 6,
                                                                },
                                                                dimensions.width
                                                              )}
                                                            >
                                                              {/* Pending Single Bet Lower Level */}
                                                              <FlatList
                                                                data={
                                                                  allBetsListABCData?.bets
                                                                }
                                                                listKey={JSON.stringify(
                                                                  allBetsListABCData?.bets
                                                                )}
                                                                keyExtractor={pendingSingleBetLowerLevelData =>
                                                                  pendingSingleBetLowerLevelData?.id ||
                                                                  pendingSingleBetLowerLevelData?.uuid ||
                                                                  JSON.stringify(
                                                                    pendingSingleBetLowerLevelData
                                                                  )
                                                                }
                                                                renderItem={({
                                                                  item,
                                                                }) => {
                                                                  const pendingSingleBetLowerLevelData =
                                                                    item;
                                                                  return (
                                                                    <>
                                                                      {/* Single */}
                                                                      <>
                                                                        {propositionTotal(
                                                                          pendingSingleBetLowerLevelData?.proposition
                                                                        ) ? null : (
                                                                          <Text
                                                                            style={StyleSheet.applyWidth(
                                                                              {
                                                                                color:
                                                                                  theme
                                                                                    .colors
                                                                                    .backgroundInverseMainFont,
                                                                                fontFamily:
                                                                                  'System',
                                                                                fontWeight:
                                                                                  '700',
                                                                              },
                                                                              dimensions.width
                                                                            )}
                                                                            ellipsizeMode={
                                                                              'tail'
                                                                            }
                                                                            numberOfLines={
                                                                              2
                                                                            }
                                                                          >
                                                                            {spacingSuffix(
                                                                              pendingSingleBetLowerLevelData
                                                                                ?.propDetails
                                                                                ?.player
                                                                            )}
                                                                            {spacingSuffix(
                                                                              pendingSingleBetLowerLevelData
                                                                                ?.propDetails
                                                                                ?.team
                                                                            )}
                                                                            {propositionUncommonDisplay(
                                                                              pendingSingleBetLowerLevelData?.proposition
                                                                            )}
                                                                            {spacingSuffix(
                                                                              pendingSingleBetLowerLevelData?.position
                                                                            )}
                                                                            {lineSuffix(
                                                                              pendingSingleBetLowerLevelData?.line
                                                                            )}
                                                                            {propDetailsMetricSpecial(
                                                                              pendingSingleBetLowerLevelData
                                                                                ?.propDetails
                                                                                ?.metricSpecial
                                                                            )}
                                                                            {oddsAmericanSyntax(
                                                                              pendingSingleBetLowerLevelData?.oddsAmerican
                                                                            )}
                                                                            {segmentExists(
                                                                              pendingSingleBetLowerLevelData?.segment
                                                                            )}
                                                                            {futureBetExists(
                                                                              pendingSingleBetLowerLevelData
                                                                                ?.propDetails
                                                                                ?.future
                                                                            )}
                                                                            {liveBetExists(
                                                                              pendingSingleBetLowerLevelData?.live
                                                                            )}
                                                                          </Text>
                                                                        )}
                                                                      </>
                                                                      {/* propositionTotal */}
                                                                      <>
                                                                        {!propositionTotal(
                                                                          pendingSingleBetLowerLevelData?.proposition
                                                                        ) ? null : (
                                                                          <Text
                                                                            style={StyleSheet.applyWidth(
                                                                              {
                                                                                color:
                                                                                  theme
                                                                                    .colors
                                                                                    .backgroundInverseMainFont,
                                                                                fontFamily:
                                                                                  'System',
                                                                                fontWeight:
                                                                                  '700',
                                                                              },
                                                                              dimensions.width
                                                                            )}
                                                                            ellipsizeMode={
                                                                              'tail'
                                                                            }
                                                                            numberOfLines={
                                                                              2
                                                                            }
                                                                          >
                                                                            {spacingSuffix(
                                                                              pendingSingleBetLowerLevelData
                                                                                ?.propDetails
                                                                                ?.player
                                                                            )}
                                                                            {spacingSuffix(
                                                                              pendingSingleBetLowerLevelData
                                                                                ?.propDetails
                                                                                ?.team
                                                                            )}
                                                                            {spacingSuffix(
                                                                              pendingSingleBetLowerLevelData?.position
                                                                            )}
                                                                            {spacingSuffix(
                                                                              pendingSingleBetLowerLevelData?.line
                                                                            )}
                                                                            {propDetailsMetricSpecial(
                                                                              pendingSingleBetLowerLevelData
                                                                                ?.propDetails
                                                                                ?.metricSpecial
                                                                            )}
                                                                            {oddsAmericanSyntax(
                                                                              pendingSingleBetLowerLevelData?.oddsAmerican
                                                                            )}
                                                                            {segmentExists(
                                                                              pendingSingleBetLowerLevelData?.segment
                                                                            )}
                                                                            {futureBetExists(
                                                                              pendingSingleBetLowerLevelData
                                                                                ?.propDetails
                                                                                ?.future
                                                                            )}
                                                                            {liveBetExists(
                                                                              pendingSingleBetLowerLevelData?.live
                                                                            )}
                                                                          </Text>
                                                                        )}
                                                                      </>
                                                                      <>
                                                                        {eventNotExist(
                                                                          pendingSingleBetLowerLevelData?.event
                                                                        ) ? null : (
                                                                          <View
                                                                            style={StyleSheet.applyWidth(
                                                                              {
                                                                                flexDirection:
                                                                                  'row',
                                                                                flexWrap:
                                                                                  'wrap',
                                                                              },
                                                                              dimensions.width
                                                                            )}
                                                                          >
                                                                            {/* League */}
                                                                            <>
                                                                              {!pendingSingleBetLowerLevelData
                                                                                ?.event
                                                                                ?.awayTeam ? null : (
                                                                                <Text
                                                                                  style={StyleSheet.applyWidth(
                                                                                    {
                                                                                      color:
                                                                                        theme
                                                                                          .colors[
                                                                                          'Light_low_importance_text'
                                                                                        ],
                                                                                      fontSize: 12,
                                                                                    },
                                                                                    dimensions.width
                                                                                  )}
                                                                                >
                                                                                  {
                                                                                    pendingSingleBetLowerLevelData
                                                                                      ?.event
                                                                                      ?.league
                                                                                  }
                                                                                  {
                                                                                    ' | '
                                                                                  }
                                                                                </Text>
                                                                              )}
                                                                            </>
                                                                            {/* Away Team */}
                                                                            <>
                                                                              {!pendingSingleBetLowerLevelData
                                                                                ?.event
                                                                                ?.awayTeam ? null : (
                                                                                <Text
                                                                                  style={StyleSheet.applyWidth(
                                                                                    {
                                                                                      color:
                                                                                        theme
                                                                                          .colors[
                                                                                          'Light_low_importance_text'
                                                                                        ],
                                                                                      fontSize: 12,
                                                                                    },
                                                                                    dimensions.width
                                                                                  )}
                                                                                >
                                                                                  {abbrTeamName(
                                                                                    pendingSingleBetLowerLevelData
                                                                                      ?.event
                                                                                      ?.awayTeam
                                                                                  )}{' '}
                                                                                </Text>
                                                                              )}
                                                                            </>
                                                                            {/* Away Score */}
                                                                            <>
                                                                              {!scoreZero(
                                                                                pendingSingleBetLowerLevelData
                                                                                  ?.event
                                                                                  ?.awayScore
                                                                              ) ? null : (
                                                                                <Text
                                                                                  style={StyleSheet.applyWidth(
                                                                                    {
                                                                                      color:
                                                                                        theme
                                                                                          .colors[
                                                                                          'Light_low_importance_text'
                                                                                        ],
                                                                                      fontFamily:
                                                                                        'System',
                                                                                      fontSize: 12,
                                                                                      fontWeight:
                                                                                        '600',
                                                                                    },
                                                                                    dimensions.width
                                                                                  )}
                                                                                >
                                                                                  {
                                                                                    pendingSingleBetLowerLevelData
                                                                                      ?.event
                                                                                      ?.awayScore
                                                                                  }{' '}
                                                                                </Text>
                                                                              )}
                                                                            </>
                                                                            {/* Dash */}
                                                                            <>
                                                                              {!pendingSingleBetLowerLevelData
                                                                                ?.event
                                                                                ?.awayTeam ? null : (
                                                                                <Text
                                                                                  style={StyleSheet.applyWidth(
                                                                                    {
                                                                                      color:
                                                                                        theme
                                                                                          .colors[
                                                                                          'Light_low_importance_text'
                                                                                        ],
                                                                                      fontSize: 12,
                                                                                    },
                                                                                    dimensions.width
                                                                                  )}
                                                                                >
                                                                                  {
                                                                                    '- '
                                                                                  }
                                                                                </Text>
                                                                              )}
                                                                            </>
                                                                            {/* Home Score */}
                                                                            <>
                                                                              {!scoreZero(
                                                                                pendingSingleBetLowerLevelData
                                                                                  ?.event
                                                                                  ?.homeScore
                                                                              ) ? null : (
                                                                                <Text
                                                                                  style={StyleSheet.applyWidth(
                                                                                    {
                                                                                      color:
                                                                                        theme
                                                                                          .colors[
                                                                                          'Light_low_importance_text'
                                                                                        ],
                                                                                      fontFamily:
                                                                                        'System',
                                                                                      fontSize: 12,
                                                                                      fontWeight:
                                                                                        '600',
                                                                                    },
                                                                                    dimensions.width
                                                                                  )}
                                                                                >
                                                                                  {
                                                                                    pendingSingleBetLowerLevelData
                                                                                      ?.event
                                                                                      ?.homeScore
                                                                                  }{' '}
                                                                                </Text>
                                                                              )}
                                                                            </>
                                                                            {/* Home Team */}
                                                                            <>
                                                                              {!pendingSingleBetLowerLevelData
                                                                                ?.event
                                                                                ?.awayTeam ? null : (
                                                                                <Text
                                                                                  style={StyleSheet.applyWidth(
                                                                                    {
                                                                                      color:
                                                                                        theme
                                                                                          .colors[
                                                                                          'Light_low_importance_text'
                                                                                        ],
                                                                                      fontSize: 12,
                                                                                    },
                                                                                    dimensions.width
                                                                                  )}
                                                                                >
                                                                                  {abbrTeamName(
                                                                                    pendingSingleBetLowerLevelData
                                                                                      ?.event
                                                                                      ?.homeTeam
                                                                                  )}
                                                                                </Text>
                                                                              )}
                                                                            </>
                                                                            {/* League and Name */}
                                                                            <>
                                                                              {pendingSingleBetLowerLevelData
                                                                                ?.event
                                                                                ?.awayTeam ? null : (
                                                                                <Text
                                                                                  style={StyleSheet.applyWidth(
                                                                                    {
                                                                                      color:
                                                                                        theme
                                                                                          .colors[
                                                                                          'Light_low_importance_text'
                                                                                        ],
                                                                                      fontSize: 12,
                                                                                    },
                                                                                    dimensions.width
                                                                                  )}
                                                                                >
                                                                                  {
                                                                                    pendingSingleBetLowerLevelData
                                                                                      ?.event
                                                                                      ?.league
                                                                                  }
                                                                                  {
                                                                                    ' | '
                                                                                  }
                                                                                  {
                                                                                    pendingSingleBetLowerLevelData
                                                                                      ?.event
                                                                                      ?.name
                                                                                  }
                                                                                </Text>
                                                                              )}
                                                                            </>
                                                                          </View>
                                                                        )}
                                                                      </>
                                                                      <>
                                                                        {pendingSingleBetLowerLevelData?.active ? null : (
                                                                          <View>
                                                                            {/* Start Time */}
                                                                            <>
                                                                              {eventNotExist(
                                                                                pendingSingleBetLowerLevelData?.event
                                                                              ) ? null : (
                                                                                <Text
                                                                                  style={StyleSheet.applyWidth(
                                                                                    {
                                                                                      color:
                                                                                        theme
                                                                                          .colors
                                                                                          .lightLowImportanceText,
                                                                                      fontSize: 10,
                                                                                    },
                                                                                    dimensions.width
                                                                                  )}
                                                                                  numberOfLines={
                                                                                    1
                                                                                  }
                                                                                  ellipsizeMode={
                                                                                    'tail'
                                                                                  }
                                                                                >
                                                                                  {dateTimeStandard(
                                                                                    pendingSingleBetLowerLevelData
                                                                                      ?.event
                                                                                      ?.startTime
                                                                                  )}
                                                                                </Text>
                                                                              )}
                                                                            </>
                                                                          </View>
                                                                        )}
                                                                      </>
                                                                      <>
                                                                        {!pendingSingleBetLowerLevelData?.active ? null : (
                                                                          <View
                                                                            style={StyleSheet.applyWidth(
                                                                              {
                                                                                alignItems:
                                                                                  'flex-start',
                                                                              },
                                                                              dimensions.width
                                                                            )}
                                                                          >
                                                                            {/* Live */}
                                                                            <View
                                                                              style={StyleSheet.applyWidth(
                                                                                {
                                                                                  alignItems:
                                                                                    'center',
                                                                                  backgroundColor:
                                                                                    theme
                                                                                      .colors[
                                                                                      'Error'
                                                                                    ],
                                                                                  borderRadius: 2,
                                                                                  justifyContent:
                                                                                    'center',
                                                                                  paddingLeft: 2,
                                                                                  paddingRight: 2,
                                                                                },
                                                                                dimensions.width
                                                                              )}
                                                                            >
                                                                              <Text
                                                                                style={StyleSheet.applyWidth(
                                                                                  {
                                                                                    color:
                                                                                      theme
                                                                                        .colors[
                                                                                        'Background Inverse (Main Font)'
                                                                                      ],
                                                                                    fontSize: 10,
                                                                                    textAlign:
                                                                                      'center',
                                                                                  },
                                                                                  dimensions.width
                                                                                )}
                                                                              >
                                                                                {
                                                                                  'LIVE'
                                                                                }
                                                                              </Text>
                                                                            </View>
                                                                          </View>
                                                                        )}
                                                                      </>
                                                                    </>
                                                                  );
                                                                }}
                                                                contentContainerStyle={StyleSheet.applyWidth(
                                                                  { flex: 1 },
                                                                  dimensions.width
                                                                )}
                                                                numColumns={1}
                                                              />
                                                            </View>
                                                          </View>
                                                        )}
                                                      </>
                                                      {/* Multileg Left Align */}
                                                      <>
                                                        {!typeMultilegCompare(
                                                          allBetsListABCData?.type
                                                        ) ? null : (
                                                          <View
                                                            style={StyleSheet.applyWidth(
                                                              { width: '77%' },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            {/* Title */}
                                                            <View
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  flex: 1,
                                                                  width: '64%',
                                                                },
                                                                dimensions.width
                                                              )}
                                                            >
                                                              {/* Parlay */}
                                                              <>
                                                                {!typeParlayCompare(
                                                                  allBetsListABCData?.type
                                                                ) ? null : (
                                                                  <Text
                                                                    style={StyleSheet.applyWidth(
                                                                      {
                                                                        color:
                                                                          theme
                                                                            .colors
                                                                            .backgroundInverseMainFont,
                                                                        fontFamily:
                                                                          'System',
                                                                        fontWeight:
                                                                          '700',
                                                                      },
                                                                      dimensions.width
                                                                    )}
                                                                    ellipsizeMode={
                                                                      'tail'
                                                                    }
                                                                    numberOfLines={
                                                                      2
                                                                    }
                                                                  >
                                                                    {parlayLegCount(
                                                                      allBetsListABCData?.bets
                                                                    )}
                                                                    {
                                                                      'X Parlay '
                                                                    }
                                                                    {oddsAmericanSyntax(
                                                                      allBetsListABCData?.oddsAmerican
                                                                    )}
                                                                  </Text>
                                                                )}
                                                              </>
                                                              {/* Teaser */}
                                                              <>
                                                                {!typeTeaserCompare(
                                                                  allBetsListABCData?.type
                                                                ) ? null : (
                                                                  <Text
                                                                    style={StyleSheet.applyWidth(
                                                                      {
                                                                        color:
                                                                          theme
                                                                            .colors
                                                                            .backgroundInverseMainFont,
                                                                        fontFamily:
                                                                          'System',
                                                                        fontWeight:
                                                                          '700',
                                                                      },
                                                                      dimensions.width
                                                                    )}
                                                                  >
                                                                    {'Teaser '}
                                                                    {oddsAmericanSyntax(
                                                                      allBetsListABCData?.oddsAmerican
                                                                    )}
                                                                  </Text>
                                                                )}
                                                              </>
                                                            </View>
                                                            {/* Pending Multileg */}
                                                            <FlatList
                                                              data={
                                                                allBetsListABCData?.bets
                                                              }
                                                              listKey={JSON.stringify(
                                                                allBetsListABCData?.bets
                                                              )}
                                                              keyExtractor={pendingMultilegData =>
                                                                pendingMultilegData?.id ||
                                                                pendingMultilegData?.uuid ||
                                                                JSON.stringify(
                                                                  pendingMultilegData
                                                                )
                                                              }
                                                              renderItem={({
                                                                item,
                                                              }) => {
                                                                const pendingMultilegData =
                                                                  item;
                                                                return (
                                                                  <View
                                                                    style={StyleSheet.applyWidth(
                                                                      {
                                                                        alignItems:
                                                                          'center',
                                                                        flexDirection:
                                                                          'row',
                                                                      },
                                                                      dimensions.width
                                                                    )}
                                                                  >
                                                                    <View
                                                                      style={StyleSheet.applyWidth(
                                                                        {
                                                                          alignItems:
                                                                            'center',
                                                                          flex: 1,
                                                                          flexDirection:
                                                                            'row',
                                                                          width:
                                                                            '64%',
                                                                        },
                                                                        dimensions.width
                                                                      )}
                                                                    >
                                                                      {/* Icon */}
                                                                      <View
                                                                        style={StyleSheet.applyWidth(
                                                                          {
                                                                            alignContent:
                                                                              'center',
                                                                            alignItems:
                                                                              'center',
                                                                            justifyContent:
                                                                              'center',
                                                                            marginRight: 1,
                                                                          },
                                                                          dimensions.width
                                                                        )}
                                                                      >
                                                                        {/* Pending/Null */}
                                                                        <>
                                                                          {!pendingOutcomeCompare(
                                                                            pendingMultilegData?.outcome
                                                                          ) ? null : (
                                                                            <Icon
                                                                              size={
                                                                                20
                                                                              }
                                                                              color={
                                                                                theme
                                                                                  .colors
                                                                                  .lightLowImportanceText
                                                                              }
                                                                              name={
                                                                                'Ionicons/ios-radio-button-off'
                                                                              }
                                                                            />
                                                                          )}
                                                                        </>
                                                                        {/* Loss */}
                                                                        <>
                                                                          {!lossOutcomeCompare(
                                                                            pendingMultilegData?.outcome
                                                                          ) ? null : (
                                                                            <Icon
                                                                              name={
                                                                                'Ionicons/ios-close-circle'
                                                                              }
                                                                              size={
                                                                                20
                                                                              }
                                                                              color={
                                                                                theme
                                                                                  .colors
                                                                                  .badErrorCancel
                                                                              }
                                                                            />
                                                                          )}
                                                                        </>
                                                                        {/* Win */}
                                                                        <>
                                                                          {!winOutcomeCompare(
                                                                            pendingMultilegData?.outcome
                                                                          ) ? null : (
                                                                            <Icon
                                                                              name={
                                                                                'Ionicons/ios-checkmark-circle'
                                                                              }
                                                                              size={
                                                                                20
                                                                              }
                                                                              color={
                                                                                theme
                                                                                  .colors
                                                                                  .good
                                                                              }
                                                                            />
                                                                          )}
                                                                        </>
                                                                        {/* Push */}
                                                                        <>
                                                                          {!pushOutcomeCompare(
                                                                            pendingMultilegData?.outcome
                                                                          ) ? null : (
                                                                            <Icon
                                                                              name={
                                                                                'Ionicons/ios-remove-circle'
                                                                              }
                                                                              size={
                                                                                20
                                                                              }
                                                                              color={
                                                                                theme
                                                                                  .colors[
                                                                                  'Background Inverse (Main Font)'
                                                                                ]
                                                                              }
                                                                            />
                                                                          )}
                                                                        </>
                                                                        {/* Void */}
                                                                        <>
                                                                          {!voidOutcomeCompare(
                                                                            pendingMultilegData?.outcome
                                                                          ) ? null : (
                                                                            <Icon
                                                                              name={
                                                                                'Ionicons/ios-remove-circle'
                                                                              }
                                                                              size={
                                                                                20
                                                                              }
                                                                              color={
                                                                                theme
                                                                                  .colors
                                                                                  .lightLowImportanceText
                                                                              }
                                                                            />
                                                                          )}
                                                                        </>
                                                                        {/* Cashout */}
                                                                        <>
                                                                          {!cashoutOutcomeCompare(
                                                                            pendingMultilegData?.outcome
                                                                          ) ? null : (
                                                                            <Icon
                                                                              name={
                                                                                'Ionicons/ios-arrow-undo-circle'
                                                                              }
                                                                              size={
                                                                                20
                                                                              }
                                                                              color={
                                                                                theme
                                                                                  .colors
                                                                                  .fair
                                                                              }
                                                                            />
                                                                          )}
                                                                        </>
                                                                      </View>
                                                                      {/* Info */}
                                                                      <View
                                                                        style={StyleSheet.applyWidth(
                                                                          {
                                                                            flex: 1,
                                                                            justifyContent:
                                                                              'center',
                                                                          },
                                                                          dimensions.width
                                                                        )}
                                                                      >
                                                                        <>
                                                                          {propositionTotal(
                                                                            pendingMultilegData?.proposition
                                                                          ) ? null : (
                                                                            <Text
                                                                              style={StyleSheet.applyWidth(
                                                                                {
                                                                                  color:
                                                                                    theme
                                                                                      .colors
                                                                                      .lightLowImportanceText,
                                                                                  fontSize: 12,
                                                                                },
                                                                                dimensions.width
                                                                              )}
                                                                              ellipsizeMode={
                                                                                'tail'
                                                                              }
                                                                              numberOfLines={
                                                                                2
                                                                              }
                                                                            >
                                                                              {showParlayBookDescription(
                                                                                pendingMultilegData
                                                                              )}
                                                                              {spacingSuffix(
                                                                                pendingMultilegData
                                                                                  ?.propDetails
                                                                                  ?.player
                                                                              )}
                                                                              {spacingSuffix(
                                                                                pendingMultilegData
                                                                                  ?.propDetails
                                                                                  ?.team
                                                                              )}
                                                                              {propositionUncommonDisplay(
                                                                                pendingMultilegData?.proposition
                                                                              )}
                                                                              {spacingSuffix(
                                                                                pendingMultilegData?.position
                                                                              )}
                                                                              {lineSuffix(
                                                                                pendingMultilegData?.line
                                                                              )}
                                                                              {propDetailsMetricSpecial(
                                                                                pendingMultilegData
                                                                                  ?.propDetails
                                                                                  ?.metricSpecial
                                                                              )}
                                                                              {oddsAmericanSyntax(
                                                                                pendingMultilegData?.oddsAmerican
                                                                              )}
                                                                              {segmentExists(
                                                                                pendingMultilegData?.segment
                                                                              )}
                                                                              {futureBetExists(
                                                                                pendingMultilegData
                                                                                  ?.propDetails
                                                                                  ?.future
                                                                              )}
                                                                              {liveBetExists(
                                                                                pendingMultilegData?.live
                                                                              )}
                                                                            </Text>
                                                                          )}
                                                                        </>
                                                                        {/* propositionTotal */}
                                                                        <>
                                                                          {!propositionTotal(
                                                                            pendingMultilegData?.proposition
                                                                          ) ? null : (
                                                                            <Text
                                                                              style={StyleSheet.applyWidth(
                                                                                {
                                                                                  color:
                                                                                    theme
                                                                                      .colors
                                                                                      .lightLowImportanceText,
                                                                                  fontSize: 12,
                                                                                },
                                                                                dimensions.width
                                                                              )}
                                                                              ellipsizeMode={
                                                                                'tail'
                                                                              }
                                                                              numberOfLines={
                                                                                2
                                                                              }
                                                                            >
                                                                              {showParlayBookDescription(
                                                                                pendingMultilegData
                                                                              )}
                                                                              {spacingSuffix(
                                                                                pendingMultilegData
                                                                                  ?.propDetails
                                                                                  ?.player
                                                                              )}
                                                                              {spacingSuffix(
                                                                                pendingMultilegData
                                                                                  ?.propDetails
                                                                                  ?.team
                                                                              )}
                                                                              {spacingSuffix(
                                                                                pendingMultilegData?.position
                                                                              )}
                                                                              {spacingSuffix(
                                                                                pendingMultilegData?.line
                                                                              )}
                                                                              {propDetailsMetricSpecial(
                                                                                pendingMultilegData
                                                                                  ?.propDetails
                                                                                  ?.metricSpecial
                                                                              )}
                                                                              {oddsAmericanSyntax(
                                                                                pendingMultilegData?.oddsAmerican
                                                                              )}
                                                                              {segmentExists(
                                                                                pendingMultilegData?.segment
                                                                              )}
                                                                              {futureBetExists(
                                                                                pendingMultilegData
                                                                                  ?.propDetails
                                                                                  ?.future
                                                                              )}
                                                                              {liveBetExists(
                                                                                pendingMultilegData?.live
                                                                              )}
                                                                            </Text>
                                                                          )}
                                                                        </>
                                                                      </View>
                                                                    </View>
                                                                    {/* Live Bet Indicator */}
                                                                    <>
                                                                      {!awayScoreAvailable(
                                                                        pendingMultilegData
                                                                          ?.event
                                                                          ?.awayScore
                                                                      ) ? null : (
                                                                        <View
                                                                          style={StyleSheet.applyWidth(
                                                                            {
                                                                              alignItems:
                                                                                'center',
                                                                              height: 12,
                                                                              justifyContent:
                                                                                'center',
                                                                              width:
                                                                                '36%',
                                                                            },
                                                                            dimensions.width
                                                                          )}
                                                                        >
                                                                          <>
                                                                            {typePropCompare(
                                                                              pendingMultilegData?.type
                                                                            ) ? null : (
                                                                              <View>
                                                                                {/* Moneyline */}
                                                                                <>
                                                                                  {!propositionMoneyline(
                                                                                    pendingMultilegData?.proposition
                                                                                  ) ? null : (
                                                                                    <Utils.CustomCodeErrorBoundary>
                                                                                      <BetIndicators.VictoryBarMoneylineSmall
                                                                                        bet={
                                                                                          pendingMultilegData
                                                                                        }
                                                                                      />
                                                                                    </Utils.CustomCodeErrorBoundary>
                                                                                  )}
                                                                                </>
                                                                                {/* Total */}
                                                                                <>
                                                                                  {!propositionTotal(
                                                                                    pendingMultilegData?.proposition
                                                                                  ) ? null : (
                                                                                    <Utils.CustomCodeErrorBoundary>
                                                                                      <BetIndicators.VictoryBarTotalSmall
                                                                                        bet={
                                                                                          pendingMultilegData
                                                                                        }
                                                                                      />
                                                                                    </Utils.CustomCodeErrorBoundary>
                                                                                  )}
                                                                                </>
                                                                                {/* Spread */}
                                                                                <>
                                                                                  {!propositionSpread(
                                                                                    pendingMultilegData?.proposition
                                                                                  ) ? null : (
                                                                                    <Utils.CustomCodeErrorBoundary>
                                                                                      <BetIndicators.VictoryBarSpreadSmall
                                                                                        bet={
                                                                                          pendingMultilegData
                                                                                        }
                                                                                      />
                                                                                    </Utils.CustomCodeErrorBoundary>
                                                                                  )}
                                                                                </>
                                                                              </View>
                                                                            )}
                                                                          </>
                                                                        </View>
                                                                      )}
                                                                    </>
                                                                  </View>
                                                                );
                                                              }}
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  width: '100%',
                                                                },
                                                                dimensions.width
                                                              )}
                                                              numColumns={1}
                                                            />
                                                          </View>
                                                        )}
                                                      </>
                                                      {/* Live Bet Indicator */}
                                                      <>
                                                        {!typeSingleCompare(
                                                          allBetsListABCData?.type
                                                        ) ? null : (
                                                          <View
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                alignItems:
                                                                  'center',
                                                                justifyContent:
                                                                  'center',
                                                                width: '27%',
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            <View
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  alignItems:
                                                                    'center',
                                                                  height: 12,
                                                                  justifyContent:
                                                                    'center',
                                                                },
                                                                dimensions.width
                                                              )}
                                                            >
                                                              {/* Live Bet Indicator List */}
                                                              <FlatList
                                                                data={
                                                                  allBetsListABCData?.bets
                                                                }
                                                                listKey={JSON.stringify(
                                                                  allBetsListABCData?.bets
                                                                )}
                                                                keyExtractor={liveBetIndicatorListData =>
                                                                  liveBetIndicatorListData?.id ||
                                                                  liveBetIndicatorListData?.uuid ||
                                                                  JSON.stringify(
                                                                    liveBetIndicatorListData
                                                                  )
                                                                }
                                                                renderItem={({
                                                                  item,
                                                                }) => {
                                                                  const liveBetIndicatorListData =
                                                                    item;
                                                                  return (
                                                                    <>
                                                                      {/* Remove Not Live Bets VIew */}
                                                                      <>
                                                                        {!awayScoreAvailable(
                                                                          liveBetIndicatorListData
                                                                            ?.event
                                                                            ?.awayScore
                                                                        ) ? null : (
                                                                          <View>
                                                                            {/* Remove Props View */}
                                                                            <>
                                                                              {typePropCompare(
                                                                                liveBetIndicatorListData?.type
                                                                              ) ? null : (
                                                                                <View>
                                                                                  {/* Total */}
                                                                                  <>
                                                                                    {!propositionTotal(
                                                                                      liveBetIndicatorListData?.proposition
                                                                                    ) ? null : (
                                                                                      <Utils.CustomCodeErrorBoundary>
                                                                                        <BetIndicators.VictoryBarTotalSmall
                                                                                          bet={
                                                                                            liveBetIndicatorListData
                                                                                          }
                                                                                        />
                                                                                      </Utils.CustomCodeErrorBoundary>
                                                                                    )}
                                                                                  </>
                                                                                  {/* Moneyline */}
                                                                                  <>
                                                                                    {!propositionMoneyline(
                                                                                      liveBetIndicatorListData?.proposition
                                                                                    ) ? null : (
                                                                                      <Utils.CustomCodeErrorBoundary>
                                                                                        <BetIndicators.VictoryBarMoneylineSmall
                                                                                          bet={
                                                                                            liveBetIndicatorListData
                                                                                          }
                                                                                        />
                                                                                      </Utils.CustomCodeErrorBoundary>
                                                                                    )}
                                                                                  </>
                                                                                  {/* Spread */}
                                                                                  <>
                                                                                    {!propositionSpread(
                                                                                      liveBetIndicatorListData?.proposition
                                                                                    ) ? null : (
                                                                                      <Utils.CustomCodeErrorBoundary>
                                                                                        <BetIndicators.VictoryBarSpreadSmall
                                                                                          bet={
                                                                                            liveBetIndicatorListData
                                                                                          }
                                                                                        />
                                                                                      </Utils.CustomCodeErrorBoundary>
                                                                                    )}
                                                                                  </>
                                                                                </View>
                                                                              )}
                                                                            </>
                                                                          </View>
                                                                        )}
                                                                      </>
                                                                    </>
                                                                  );
                                                                }}
                                                                contentContainerStyle={StyleSheet.applyWidth(
                                                                  {
                                                                    flex: 1,
                                                                    justifyContent:
                                                                      'center',
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                                numColumns={1}
                                                              />
                                                            </View>
                                                          </View>
                                                        )}
                                                      </>
                                                      {/* Right Align */}
                                                      <View
                                                        style={StyleSheet.applyWidth(
                                                          {
                                                            alignItems:
                                                              'flex-end',
                                                            justifyContent:
                                                              'space-between',
                                                            width: '23%',
                                                          },
                                                          dimensions.width
                                                        )}
                                                      >
                                                        <Text
                                                          style={StyleSheet.applyWidth(
                                                            {
                                                              color:
                                                                theme.colors
                                                                  .divider,
                                                              fontSize: 12,
                                                            },
                                                            dimensions.width
                                                          )}
                                                        >
                                                          {'-'}
                                                        </Text>

                                                        <View
                                                          style={StyleSheet.applyWidth(
                                                            {
                                                              flex: 1,
                                                              flexDirection:
                                                                'row',
                                                              justifyContent:
                                                                'flex-end',
                                                            },
                                                            dimensions.width
                                                          )}
                                                        >
                                                          <View
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                alignItems:
                                                                  'flex-end',
                                                                justifyContent:
                                                                  'center',
                                                                marginLeft: 10,
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            <Text
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  color:
                                                                    theme.colors
                                                                      .backgroundInverseMainFont,
                                                                  fontFamily:
                                                                    'System',
                                                                  fontSize: 14,
                                                                  fontWeight:
                                                                    '700',
                                                                },
                                                                dimensions.width
                                                              )}
                                                              ellipsizeMode={
                                                                'tail'
                                                              }
                                                              numberOfLines={1}
                                                            >
                                                              {toWinSuffix(
                                                                allBetsListABCData?.toWin
                                                              )}
                                                            </Text>

                                                            <Text
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  color:
                                                                    theme.colors
                                                                      .lightLowImportanceText,
                                                                  fontSize: 10,
                                                                },
                                                                dimensions.width
                                                              )}
                                                              ellipsizeMode={
                                                                'tail'
                                                              }
                                                              numberOfLines={1}
                                                            >
                                                              {atRiskSuffix(
                                                                allBetsListABCData?.atRisk
                                                              )}
                                                            </Text>
                                                          </View>
                                                        </View>

                                                        <View
                                                          style={StyleSheet.applyWidth(
                                                            {
                                                              alignItems:
                                                                'center',
                                                              flexDirection:
                                                                'row',
                                                              justifyContent:
                                                                'flex-end',
                                                            },
                                                            dimensions.width
                                                          )}
                                                        >
                                                          {/* Free Bet */}
                                                          <>
                                                            {!atRiskZero(
                                                              allBetsListABCData?.atRisk
                                                            ) ? null : (
                                                              <View
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    alignItems:
                                                                      'center',
                                                                    backgroundColor:
                                                                      theme
                                                                        .colors[
                                                                        'Light_low_importance_text'
                                                                      ],
                                                                    borderRadius: 2,
                                                                    height: 10,
                                                                    justifyContent:
                                                                      'center',
                                                                    marginRight: 4,
                                                                    width: 10,
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                              >
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors[
                                                                          'Divider'
                                                                        ],
                                                                      fontFamily:
                                                                        'System',
                                                                      fontSize: 8,
                                                                      fontWeight:
                                                                        '700',
                                                                      textAlign:
                                                                        'center',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {'F'}
                                                                </Text>
                                                              </View>
                                                            )}
                                                          </>
                                                          {/* Logo */}
                                                          <Image
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                height: 12,
                                                                width: 12,
                                                              },
                                                              dimensions.width
                                                            )}
                                                            resizeMode={
                                                              'contain'
                                                            }
                                                            source={{
                                                              uri: `${allBetsListABCData?.book?.bookLogo}`,
                                                            }}
                                                          />
                                                        </View>
                                                      </View>
                                                    </View>
                                                  </Surface>
                                                </Touchable>
                                              )}
                                            </>
                                          </>
                                        );
                                      }}
                                      contentContainerStyle={StyleSheet.applyWidth(
                                        { flex: 1 },
                                        dimensions.width
                                      )}
                                      numColumns={1}
                                    />
                                  </View>
                                  {/* Share Modal */}
                                  <>
                                    {!Constants['toggleShareModal'] ? null : (
                                      <Modal
                                        style={StyleSheet.applyWidth(
                                          {
                                            backgroundColor:
                                              theme.colors.background,
                                          },
                                          dimensions.width
                                        )}
                                        animationType={'slide'}
                                        presentationStyle={'pageSheet'}
                                      >
                                        <View
                                          style={StyleSheet.applyWidth(
                                            {
                                              backgroundColor:
                                                theme.colors.background,
                                              height: '100%',
                                            },
                                            dimensions.width
                                          )}
                                        >
                                          {/* Top Bar */}
                                          <Surface
                                            style={StyleSheet.applyWidth(
                                              {
                                                backgroundColor:
                                                  theme.colors.background,
                                                minHeight: 40,
                                              },
                                              dimensions.width
                                            )}
                                            elevation={2}
                                          >
                                            <View
                                              style={StyleSheet.applyWidth(
                                                {
                                                  flexDirection: 'row',
                                                  justifyContent:
                                                    'space-between',
                                                },
                                                dimensions.width
                                              )}
                                            >
                                              {/* Left View */}
                                              <View
                                                style={StyleSheet.applyWidth(
                                                  {
                                                    alignItems: 'flex-start',
                                                    justifyContent: 'center',
                                                    paddingLeft: 16,
                                                    width: '33%',
                                                  },
                                                  dimensions.width
                                                )}
                                              >
                                                <View
                                                  style={StyleSheet.applyWidth(
                                                    {
                                                      alignContent: 'center',
                                                      alignItems: 'center',
                                                      height: 23,
                                                      justifyContent: 'center',
                                                    },
                                                    dimensions.width
                                                  )}
                                                >
                                                  <Image
                                                    style={StyleSheet.applyWidth(
                                                      { height: 23, width: 75 },
                                                      dimensions.width
                                                    )}
                                                    source={
                                                      Images.VaultLogoLightFontClearBackground
                                                    }
                                                    resizeMode={'contain'}
                                                  />
                                                </View>
                                              </View>

                                              <View
                                                style={StyleSheet.applyWidth(
                                                  {
                                                    alignContent: 'center',
                                                    alignItems: 'center',
                                                    height: 50,
                                                    justifyContent: 'center',
                                                  },
                                                  dimensions.width
                                                )}
                                              >
                                                <SwaggerAPIApi.FetchGetUserInfoGET
                                                  interanlId={
                                                    Constants['internalId']
                                                  }
                                                >
                                                  {({
                                                    loading,
                                                    error,
                                                    data,
                                                    refetchGetUserInfo,
                                                  }) => {
                                                    const fetchData = data;
                                                    if (!fetchData || loading) {
                                                      return (
                                                        <ActivityIndicator />
                                                      );
                                                    }

                                                    if (error) {
                                                      return (
                                                        <Text
                                                          style={{
                                                            textAlign: 'center',
                                                          }}
                                                        >
                                                          There was a problem
                                                          fetching this data
                                                        </Text>
                                                      );
                                                    }

                                                    return (
                                                      <>
                                                        {/* Name Switcher View */}
                                                        <View
                                                          style={StyleSheet.applyWidth(
                                                            {
                                                              justifyContent:
                                                                'center',
                                                            },
                                                            dimensions.width
                                                          )}
                                                        >
                                                          {/* Username Touchable */}
                                                          <>
                                                            {!shareScreenNameUsername(
                                                              Constants[
                                                                'shareScreenName'
                                                              ]
                                                            ) ? null : (
                                                              <Touchable
                                                                onPress={() => {
                                                                  try {
                                                                    setGlobalVariableValue(
                                                                      {
                                                                        key: 'shareScreenName',
                                                                        value:
                                                                          'name',
                                                                      }
                                                                    );
                                                                  } catch (err) {
                                                                    console.error(
                                                                      err
                                                                    );
                                                                  }
                                                                }}
                                                              >
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .backgroundInverseMainFont,
                                                                      fontFamily:
                                                                        'System',
                                                                      fontSize: 18,
                                                                      fontWeight:
                                                                        '700',
                                                                      textAlign:
                                                                        'center',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                  ellipsizeMode={
                                                                    'tail'
                                                                  }
                                                                  numberOfLines={
                                                                    1
                                                                  }
                                                                >
                                                                  {'@'}
                                                                  {
                                                                    fetchData?.userName
                                                                  }
                                                                </Text>
                                                              </Touchable>
                                                            )}
                                                          </>
                                                          {/* Name Touchable */}
                                                          <>
                                                            {!shareScreenNameName(
                                                              Constants[
                                                                'shareScreenName'
                                                              ]
                                                            ) ? null : (
                                                              <Touchable
                                                                onPress={() => {
                                                                  try {
                                                                    setGlobalVariableValue(
                                                                      {
                                                                        key: 'shareScreenName',
                                                                        value:
                                                                          'hidden',
                                                                      }
                                                                    );
                                                                  } catch (err) {
                                                                    console.error(
                                                                      err
                                                                    );
                                                                  }
                                                                }}
                                                              >
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .backgroundInverseMainFont,
                                                                      fontFamily:
                                                                        'System',
                                                                      fontSize: 18,
                                                                      fontWeight:
                                                                        '700',
                                                                      textAlign:
                                                                        'center',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                  ellipsizeMode={
                                                                    'tail'
                                                                  }
                                                                  numberOfLines={
                                                                    1
                                                                  }
                                                                >
                                                                  {
                                                                    fetchData?.firstName
                                                                  }{' '}
                                                                  {
                                                                    fetchData?.lastName
                                                                  }
                                                                </Text>
                                                              </Touchable>
                                                            )}
                                                          </>
                                                          {/* Hidden Touchable */}
                                                          <>
                                                            {!shareScreenNameHidden(
                                                              Constants[
                                                                'shareScreenName'
                                                              ]
                                                            ) ? null : (
                                                              <Touchable
                                                                onPress={() => {
                                                                  try {
                                                                    setGlobalVariableValue(
                                                                      {
                                                                        key: 'shareScreenName',
                                                                        value:
                                                                          'username',
                                                                      }
                                                                    );
                                                                  } catch (err) {
                                                                    console.error(
                                                                      err
                                                                    );
                                                                  }
                                                                }}
                                                              >
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .backgroundInverseMainFont,
                                                                      fontFamily:
                                                                        'System',
                                                                      fontSize: 18,
                                                                      fontWeight:
                                                                        '700',
                                                                      paddingLeft: 8,
                                                                      paddingRight: 8,
                                                                      textAlign:
                                                                        'center',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {'-'}
                                                                </Text>
                                                              </Touchable>
                                                            )}
                                                          </>
                                                        </View>
                                                      </>
                                                    );
                                                  }}
                                                </SwaggerAPIApi.FetchGetUserInfoGET>
                                              </View>
                                              {/* Close Button */}
                                              <View
                                                style={StyleSheet.applyWidth(
                                                  {
                                                    alignItems: 'flex-end',
                                                    justifyContent: 'center',
                                                    width: '33%',
                                                  },
                                                  dimensions.width
                                                )}
                                              >
                                                <Touchable
                                                  onPress={() => {
                                                    try {
                                                      setGlobalVariableValue({
                                                        key: 'toggleShareModal',
                                                        value: false,
                                                      });
                                                    } catch (err) {
                                                      console.error(err);
                                                    }
                                                  }}
                                                >
                                                  <View
                                                    style={StyleSheet.applyWidth(
                                                      {
                                                        alignItems: 'center',
                                                        height: 50,
                                                        justifyContent:
                                                          'center',
                                                        paddingLeft: 16,
                                                        paddingRight: 16,
                                                      },
                                                      dimensions.width
                                                    )}
                                                  >
                                                    <Icon
                                                      name={
                                                        'Ionicons/ios-close'
                                                      }
                                                      size={28}
                                                      color={
                                                        theme.colors
                                                          .lightLowImportanceText
                                                      }
                                                    />
                                                  </View>
                                                </Touchable>
                                              </View>
                                            </View>
                                          </Surface>

                                          <View>
                                            {/* Filters Applied */}
                                            <View
                                              style={StyleSheet.applyWidth(
                                                {
                                                  paddingLeft: '4%',
                                                  paddingRight: '4%',
                                                  paddingTop: 8,
                                                },
                                                dimensions.width
                                              )}
                                            >
                                              <Text
                                                style={StyleSheet.applyWidth(
                                                  {
                                                    color:
                                                      theme.colors
                                                        .lightLowImportanceText,
                                                    fontFamily: 'System',
                                                    fontSize: 10,
                                                    fontWeight: '400',
                                                  },
                                                  dimensions.width
                                                )}
                                              >
                                                {'Filters applied: '}
                                                {combinedFilters(
                                                  Constants[
                                                    'filterSportsbookApply'
                                                  ]
                                                )}
                                                {combinedFilters(
                                                  Constants['filterDateApply']
                                                )}
                                                {combinedFilters(
                                                  Constants['filterLeagueApply']
                                                )}
                                                {combinedFilters(
                                                  Constants[
                                                    'filterBetTypeApply'
                                                  ]
                                                )}
                                                {combinedFilters(
                                                  Constants[
                                                    'filterUnderdogApply'
                                                  ]
                                                )}
                                                {combinedFilters(
                                                  Constants['filterUnderApply']
                                                )}
                                                {combinedFilters(
                                                  Constants[
                                                    'filterOutcomeApply'
                                                  ]
                                                )}
                                              </Text>
                                            </View>
                                            {/* Historical Records Pie Chart */}
                                            <>
                                              {!betStatusHistorical(
                                                Constants[
                                                  'filterBetStatusApply'
                                                ]
                                              ) ? null : (
                                                <View
                                                  style={StyleSheet.applyWidth(
                                                    {
                                                      height: 100,
                                                      marginBottom: 10,
                                                      marginLeft: '4%',
                                                      marginRight: '4%',
                                                      marginTop: 10,
                                                    },
                                                    dimensions.width
                                                  )}
                                                >
                                                  <Utils.CustomCodeErrorBoundary>
                                                    <CustomCode.VictoryPieRecordFour />
                                                  </Utils.CustomCodeErrorBoundary>
                                                </View>
                                              )}
                                            </>
                                            {/* Pending Records Pie Chart */}
                                            <>
                                              {betStatusHistorical(
                                                Constants[
                                                  'filterBetStatusApply'
                                                ]
                                              ) ? null : (
                                                <View
                                                  style={StyleSheet.applyWidth(
                                                    {
                                                      height: 100,
                                                      marginBottom: 10,
                                                      marginLeft: '4%',
                                                      marginRight: '4%',
                                                      marginTop: 10,
                                                    },
                                                    dimensions.width
                                                  )}
                                                >
                                                  <Utils.CustomCodeErrorBoundary>
                                                    <CustomCode.VictoryPieRecordPending />
                                                  </Utils.CustomCodeErrorBoundary>
                                                </View>
                                              )}
                                            </>
                                          </View>

                                          <ScrollView
                                            contentContainerStyle={StyleSheet.applyWidth(
                                              { paddingBottom: 10 },
                                              dimensions.width
                                            )}
                                            showsVerticalScrollIndicator={false}
                                            bounces={true}
                                          >
                                            <View
                                              style={StyleSheet.applyWidth(
                                                {
                                                  paddingLeft: '4%',
                                                  paddingRight: '4%',
                                                },
                                                dimensions.width
                                              )}
                                            >
                                              {/* All Bets List XYZ */}
                                              <FlatList
                                                data={filterBetslips(
                                                  allBetsFetchData
                                                )}
                                                listKey={'chGce8bc'}
                                                keyExtractor={allBetsListXYZData =>
                                                  allBetsListXYZData?.id ||
                                                  allBetsListXYZData?.uuid ||
                                                  JSON.stringify(
                                                    allBetsListXYZData
                                                  )
                                                }
                                                renderItem={({ item }) => {
                                                  const allBetsListXYZData =
                                                    item;
                                                  return (
                                                    <>
                                                      {/* Historical Bets */}
                                                      <>
                                                        {!betStatusHistorical(
                                                          Constants[
                                                            'filterBetStatusApply'
                                                          ]
                                                        ) ? null : (
                                                          <Surface
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                backgroundColor:
                                                                  theme.colors
                                                                    .divider,
                                                                borderRadius: 6,
                                                                marginTop: 3,
                                                              },
                                                              dimensions.width
                                                            )}
                                                            elevation={1}
                                                          >
                                                            {/* Bet Block */}
                                                            <View
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  backgroundColor:
                                                                    theme.colors
                                                                      .divider,
                                                                  borderRadius: 6,
                                                                  flexDirection:
                                                                    'row',
                                                                  justifyContent:
                                                                    'space-between',
                                                                  paddingBottom: 2,
                                                                  paddingLeft: 2,
                                                                  paddingRight: 2,
                                                                  paddingTop: 2,
                                                                },
                                                                dimensions.width
                                                              )}
                                                            >
                                                              {/* Left Align */}
                                                              <View
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    flexDirection:
                                                                      'row',
                                                                    width:
                                                                      '75%',
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                              >
                                                                {/* Icon */}
                                                                <View
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      alignContent:
                                                                        'center',
                                                                      alignItems:
                                                                        'center',
                                                                      justifyContent:
                                                                        'center',
                                                                      marginRight: 2,
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {/* Loss */}
                                                                  <>
                                                                    {!lossOutcomeCompare(
                                                                      allBetsListXYZData?.outcome
                                                                    ) ? null : (
                                                                      <Icon
                                                                        name={
                                                                          'Ionicons/ios-close-circle'
                                                                        }
                                                                        size={
                                                                          16
                                                                        }
                                                                        color={
                                                                          theme
                                                                            .colors
                                                                            .badErrorCancel
                                                                        }
                                                                      />
                                                                    )}
                                                                  </>
                                                                  {/* Win */}
                                                                  <>
                                                                    {!winOutcomeCompare(
                                                                      allBetsListXYZData?.outcome
                                                                    ) ? null : (
                                                                      <Icon
                                                                        name={
                                                                          'Ionicons/ios-checkmark-circle'
                                                                        }
                                                                        size={
                                                                          16
                                                                        }
                                                                        color={
                                                                          theme
                                                                            .colors
                                                                            .good
                                                                        }
                                                                      />
                                                                    )}
                                                                  </>
                                                                  {/* Push */}
                                                                  <>
                                                                    {!pushOutcomeCompare(
                                                                      allBetsListXYZData?.outcome
                                                                    ) ? null : (
                                                                      <Icon
                                                                        name={
                                                                          'Ionicons/ios-remove-circle'
                                                                        }
                                                                        size={
                                                                          16
                                                                        }
                                                                        color={
                                                                          theme
                                                                            .colors[
                                                                            'Background Inverse (Main Font)'
                                                                          ]
                                                                        }
                                                                      />
                                                                    )}
                                                                  </>
                                                                  {/* Void */}
                                                                  <>
                                                                    {!voidOutcomeCompare(
                                                                      allBetsListXYZData?.outcome
                                                                    ) ? null : (
                                                                      <Icon
                                                                        name={
                                                                          'Ionicons/ios-remove-circle'
                                                                        }
                                                                        size={
                                                                          16
                                                                        }
                                                                        color={
                                                                          theme
                                                                            .colors
                                                                            .lightLowImportanceText
                                                                        }
                                                                      />
                                                                    )}
                                                                  </>
                                                                  {/* Cashout */}
                                                                  <>
                                                                    {!cashoutOutcomeCompare(
                                                                      allBetsListXYZData?.outcome
                                                                    ) ? null : (
                                                                      <Icon
                                                                        name={
                                                                          'Ionicons/ios-arrow-undo-circle'
                                                                        }
                                                                        size={
                                                                          16
                                                                        }
                                                                        color={
                                                                          theme
                                                                            .colors
                                                                            .fair
                                                                        }
                                                                      />
                                                                    )}
                                                                  </>
                                                                </View>
                                                                {/* Bet/Odds/Teams */}
                                                                <View
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      flex: 1,
                                                                      justifyContent:
                                                                        'center',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {/* Graded Single Bet Lower Level */}
                                                                  <>
                                                                    {!typeSingleCompare(
                                                                      allBetsListXYZData?.type
                                                                    ) ? null : (
                                                                      <FlatList
                                                                        data={
                                                                          allBetsListXYZData?.bets
                                                                        }
                                                                        listKey={JSON.stringify(
                                                                          allBetsListXYZData?.bets
                                                                        )}
                                                                        keyExtractor={gradedSingleBetLowerLevelData =>
                                                                          gradedSingleBetLowerLevelData?.id ||
                                                                          gradedSingleBetLowerLevelData?.uuid ||
                                                                          JSON.stringify(
                                                                            gradedSingleBetLowerLevelData
                                                                          )
                                                                        }
                                                                        renderItem={({
                                                                          item,
                                                                        }) => {
                                                                          const gradedSingleBetLowerLevelData =
                                                                            item;
                                                                          return (
                                                                            <>
                                                                              {/* Single Bet */}
                                                                              <>
                                                                                {propositionTotal(
                                                                                  gradedSingleBetLowerLevelData?.proposition
                                                                                ) ? null : (
                                                                                  <Text
                                                                                    style={StyleSheet.applyWidth(
                                                                                      {
                                                                                        color:
                                                                                          theme
                                                                                            .colors
                                                                                            .backgroundInverseMainFont,
                                                                                        fontFamily:
                                                                                          'System',
                                                                                        fontSize: 12,
                                                                                        fontWeight:
                                                                                          '700',
                                                                                      },
                                                                                      dimensions.width
                                                                                    )}
                                                                                    ellipsizeMode={
                                                                                      'tail'
                                                                                    }
                                                                                    numberOfLines={
                                                                                      2
                                                                                    }
                                                                                  >
                                                                                    {propDetailsPlayer(
                                                                                      gradedSingleBetLowerLevelData
                                                                                    )}
                                                                                    {propDetailsTeam(
                                                                                      gradedSingleBetLowerLevelData
                                                                                    )}
                                                                                    {propositionUncommonDisplay(
                                                                                      gradedSingleBetLowerLevelData?.proposition
                                                                                    )}
                                                                                    {spacingSuffix(
                                                                                      gradedSingleBetLowerLevelData?.position
                                                                                    )}
                                                                                    {lineSuffix(
                                                                                      gradedSingleBetLowerLevelData?.line
                                                                                    )}
                                                                                    {propDetailsMetricSpecialShare(
                                                                                      gradedSingleBetLowerLevelData
                                                                                    )}
                                                                                    {oddsAmericanSyntax(
                                                                                      allBetsListXYZData?.oddsAmerican
                                                                                    )}
                                                                                    {segmentExists(
                                                                                      gradedSingleBetLowerLevelData?.segment
                                                                                    )}
                                                                                    {propDetailsFuture(
                                                                                      gradedSingleBetLowerLevelData
                                                                                    )}
                                                                                    {liveBetExists(
                                                                                      gradedSingleBetLowerLevelData?.live
                                                                                    )}
                                                                                  </Text>
                                                                                )}
                                                                              </>
                                                                              {/* propositionTotal */}
                                                                              <>
                                                                                {!propositionTotal(
                                                                                  gradedSingleBetLowerLevelData?.proposition
                                                                                ) ? null : (
                                                                                  <Text
                                                                                    style={StyleSheet.applyWidth(
                                                                                      {
                                                                                        color:
                                                                                          theme
                                                                                            .colors
                                                                                            .backgroundInverseMainFont,
                                                                                        fontFamily:
                                                                                          'System',
                                                                                        fontSize: 12,
                                                                                        fontWeight:
                                                                                          '700',
                                                                                      },
                                                                                      dimensions.width
                                                                                    )}
                                                                                    ellipsizeMode={
                                                                                      'tail'
                                                                                    }
                                                                                    numberOfLines={
                                                                                      2
                                                                                    }
                                                                                  >
                                                                                    {propDetailsPlayer(
                                                                                      gradedSingleBetLowerLevelData
                                                                                    )}
                                                                                    {propDetailsTeam(
                                                                                      gradedSingleBetLowerLevelData
                                                                                    )}
                                                                                    {spacingSuffix(
                                                                                      gradedSingleBetLowerLevelData?.position
                                                                                    )}
                                                                                    {spacingSuffix(
                                                                                      gradedSingleBetLowerLevelData?.line
                                                                                    )}
                                                                                    {propDetailsMetricSpecialShare(
                                                                                      gradedSingleBetLowerLevelData
                                                                                    )}
                                                                                    {oddsAmericanSyntax(
                                                                                      allBetsListXYZData?.oddsAmerican
                                                                                    )}
                                                                                    {segmentExists(
                                                                                      gradedSingleBetLowerLevelData?.segment
                                                                                    )}
                                                                                    {propDetailsFuture(
                                                                                      gradedSingleBetLowerLevelData
                                                                                    )}
                                                                                    {liveBetExists(
                                                                                      gradedSingleBetLowerLevelData?.live
                                                                                    )}
                                                                                  </Text>
                                                                                )}
                                                                              </>
                                                                              {/* Event League_Name */}
                                                                              <>
                                                                                {eventNotExist(
                                                                                  gradedSingleBetLowerLevelData?.event
                                                                                ) ? null : (
                                                                                  <Text
                                                                                    style={StyleSheet.applyWidth(
                                                                                      {
                                                                                        color:
                                                                                          theme
                                                                                            .colors
                                                                                            .lightLowImportanceText,
                                                                                        fontSize: 10,
                                                                                      },
                                                                                      dimensions.width
                                                                                    )}
                                                                                    ellipsizeMode={
                                                                                      'tail'
                                                                                    }
                                                                                    numberOfLines={
                                                                                      2
                                                                                    }
                                                                                  >
                                                                                    {eventLeagueSuffix(
                                                                                      gradedSingleBetLowerLevelData
                                                                                        ?.event
                                                                                        ?.league
                                                                                    )}
                                                                                    {
                                                                                      gradedSingleBetLowerLevelData
                                                                                        ?.event
                                                                                        ?.name
                                                                                    }
                                                                                  </Text>
                                                                                )}
                                                                              </>
                                                                            </>
                                                                          );
                                                                        }}
                                                                        contentContainerStyle={StyleSheet.applyWidth(
                                                                          {
                                                                            flex: 1,
                                                                          },
                                                                          dimensions.width
                                                                        )}
                                                                        numColumns={
                                                                          1
                                                                        }
                                                                      />
                                                                    )}
                                                                  </>
                                                                  {/* Parlay */}
                                                                  <>
                                                                    {!typeParlayCompare(
                                                                      allBetsListXYZData?.type
                                                                    ) ? null : (
                                                                      <Text
                                                                        style={StyleSheet.applyWidth(
                                                                          {
                                                                            color:
                                                                              theme
                                                                                .colors
                                                                                .backgroundInverseMainFont,
                                                                            fontFamily:
                                                                              'System',
                                                                            fontSize: 12,
                                                                            fontWeight:
                                                                              '700',
                                                                          },
                                                                          dimensions.width
                                                                        )}
                                                                      >
                                                                        {parlayLegCount(
                                                                          allBetsListXYZData?.bets
                                                                        )}
                                                                        {
                                                                          'X Parlay '
                                                                        }
                                                                        {oddsAmericanSyntax(
                                                                          allBetsListXYZData?.oddsAmerican
                                                                        )}
                                                                      </Text>
                                                                    )}
                                                                  </>
                                                                  {/* Teaser */}
                                                                  <>
                                                                    {!typeTeaserCompare(
                                                                      allBetsListXYZData?.type
                                                                    ) ? null : (
                                                                      <Text
                                                                        style={StyleSheet.applyWidth(
                                                                          {
                                                                            color:
                                                                              theme
                                                                                .colors
                                                                                .backgroundInverseMainFont,
                                                                            fontFamily:
                                                                              'System',
                                                                            fontSize: 12,
                                                                            fontWeight:
                                                                              '700',
                                                                          },
                                                                          dimensions.width
                                                                        )}
                                                                      >
                                                                        {
                                                                          'Teaser '
                                                                        }
                                                                        {oddsAmericanSyntax(
                                                                          allBetsListXYZData?.oddsAmerican
                                                                        )}
                                                                      </Text>
                                                                    )}
                                                                  </>
                                                                  {/* Graded Multileg Bet */}
                                                                  <>
                                                                    {!typeMultilegCompare(
                                                                      allBetsListXYZData?.type
                                                                    ) ? null : (
                                                                      <FlatList
                                                                        data={
                                                                          allBetsListXYZData?.bets
                                                                        }
                                                                        listKey={JSON.stringify(
                                                                          allBetsListXYZData?.bets
                                                                        )}
                                                                        keyExtractor={gradedMultilegBetData =>
                                                                          gradedMultilegBetData?.id ||
                                                                          gradedMultilegBetData?.uuid ||
                                                                          JSON.stringify(
                                                                            gradedMultilegBetData
                                                                          )
                                                                        }
                                                                        renderItem={({
                                                                          item,
                                                                        }) => {
                                                                          const gradedMultilegBetData =
                                                                            item;
                                                                          return (
                                                                            <>
                                                                              {/* Is Multileg */}
                                                                              <View
                                                                                style={StyleSheet.applyWidth(
                                                                                  {
                                                                                    alignItems:
                                                                                      'center',
                                                                                    flexDirection:
                                                                                      'row',
                                                                                  },
                                                                                  dimensions.width
                                                                                )}
                                                                              >
                                                                                {/* Icon */}
                                                                                <View
                                                                                  style={StyleSheet.applyWidth(
                                                                                    {
                                                                                      alignContent:
                                                                                        'center',
                                                                                      alignItems:
                                                                                        'center',
                                                                                      justifyContent:
                                                                                        'center',
                                                                                      marginRight: 1,
                                                                                    },
                                                                                    dimensions.width
                                                                                  )}
                                                                                >
                                                                                  {/* Pending_Null */}
                                                                                  <>
                                                                                    {!pendingOutcomeCompare(
                                                                                      gradedMultilegBetData?.outcome
                                                                                    ) ? null : (
                                                                                      <Icon
                                                                                        size={
                                                                                          12
                                                                                        }
                                                                                        color={
                                                                                          theme
                                                                                            .colors
                                                                                            .lightLowImportanceText
                                                                                        }
                                                                                        name={
                                                                                          'Ionicons/ios-radio-button-off'
                                                                                        }
                                                                                      />
                                                                                    )}
                                                                                  </>
                                                                                  {/* Loss */}
                                                                                  <>
                                                                                    {!lossOutcomeCompare(
                                                                                      gradedMultilegBetData?.outcome
                                                                                    ) ? null : (
                                                                                      <Icon
                                                                                        name={
                                                                                          'Ionicons/ios-close-circle'
                                                                                        }
                                                                                        size={
                                                                                          12
                                                                                        }
                                                                                        color={
                                                                                          theme
                                                                                            .colors
                                                                                            .badErrorCancel
                                                                                        }
                                                                                      />
                                                                                    )}
                                                                                  </>
                                                                                  {/* Win */}
                                                                                  <>
                                                                                    {!winOutcomeCompare(
                                                                                      gradedMultilegBetData?.outcome
                                                                                    ) ? null : (
                                                                                      <Icon
                                                                                        name={
                                                                                          'Ionicons/ios-checkmark-circle'
                                                                                        }
                                                                                        size={
                                                                                          12
                                                                                        }
                                                                                        color={
                                                                                          theme
                                                                                            .colors
                                                                                            .good
                                                                                        }
                                                                                      />
                                                                                    )}
                                                                                  </>
                                                                                  {/* Push */}
                                                                                  <>
                                                                                    {!pushOutcomeCompare(
                                                                                      gradedMultilegBetData?.outcome
                                                                                    ) ? null : (
                                                                                      <Icon
                                                                                        name={
                                                                                          'Ionicons/ios-remove-circle'
                                                                                        }
                                                                                        size={
                                                                                          12
                                                                                        }
                                                                                        color={
                                                                                          theme
                                                                                            .colors[
                                                                                            'Background Inverse (Main Font)'
                                                                                          ]
                                                                                        }
                                                                                      />
                                                                                    )}
                                                                                  </>
                                                                                  {/* Void */}
                                                                                  <>
                                                                                    {!voidOutcomeCompare(
                                                                                      gradedMultilegBetData?.outcome
                                                                                    ) ? null : (
                                                                                      <Icon
                                                                                        name={
                                                                                          'Ionicons/ios-remove-circle'
                                                                                        }
                                                                                        size={
                                                                                          12
                                                                                        }
                                                                                        color={
                                                                                          theme
                                                                                            .colors
                                                                                            .lightLowImportanceText
                                                                                        }
                                                                                      />
                                                                                    )}
                                                                                  </>
                                                                                  {/* Cashout */}
                                                                                  <>
                                                                                    {!cashoutOutcomeCompare(
                                                                                      gradedMultilegBetData?.outcome
                                                                                    ) ? null : (
                                                                                      <Icon
                                                                                        name={
                                                                                          'Ionicons/ios-arrow-undo-circle'
                                                                                        }
                                                                                        size={
                                                                                          12
                                                                                        }
                                                                                        color={
                                                                                          theme
                                                                                            .colors
                                                                                            .fair
                                                                                        }
                                                                                      />
                                                                                    )}
                                                                                  </>
                                                                                </View>

                                                                                <View
                                                                                  style={StyleSheet.applyWidth(
                                                                                    {
                                                                                      flex: 1,
                                                                                      justifyContent:
                                                                                        'center',
                                                                                    },
                                                                                    dimensions.width
                                                                                  )}
                                                                                >
                                                                                  <>
                                                                                    {propositionTotal(
                                                                                      gradedMultilegBetData?.proposition
                                                                                    ) ? null : (
                                                                                      <Text
                                                                                        style={StyleSheet.applyWidth(
                                                                                          {
                                                                                            color:
                                                                                              theme
                                                                                                .colors
                                                                                                .lightLowImportanceText,
                                                                                            fontSize: 10,
                                                                                          },
                                                                                          dimensions.width
                                                                                        )}
                                                                                        numberOfLines={
                                                                                          2
                                                                                        }
                                                                                        ellipsizeMode={
                                                                                          'tail'
                                                                                        }
                                                                                      >
                                                                                        {propDetailsPlayer(
                                                                                          gradedMultilegBetData
                                                                                        )}
                                                                                        {propDetailsTeam(
                                                                                          gradedMultilegBetData
                                                                                        )}
                                                                                        {propositionUncommonDisplay(
                                                                                          gradedMultilegBetData?.proposition
                                                                                        )}
                                                                                        {spacingSuffix(
                                                                                          gradedMultilegBetData?.position
                                                                                        )}
                                                                                        {lineSuffix(
                                                                                          gradedMultilegBetData?.line
                                                                                        )}
                                                                                        {propDetailsMetricSpecialShare(
                                                                                          gradedMultilegBetData
                                                                                        )}
                                                                                        {oddsAmericanSyntax(
                                                                                          gradedMultilegBetData?.oddsAmerican
                                                                                        )}
                                                                                        {segmentExists(
                                                                                          gradedMultilegBetData?.segment
                                                                                        )}
                                                                                        {propDetailsFuture(
                                                                                          gradedMultilegBetData
                                                                                        )}
                                                                                        {liveBetExists(
                                                                                          gradedMultilegBetData?.live
                                                                                        )}
                                                                                      </Text>
                                                                                    )}
                                                                                  </>
                                                                                  {/* propositionTotal */}
                                                                                  <>
                                                                                    {!propositionTotal(
                                                                                      gradedMultilegBetData?.proposition
                                                                                    ) ? null : (
                                                                                      <Text
                                                                                        style={StyleSheet.applyWidth(
                                                                                          {
                                                                                            color:
                                                                                              theme
                                                                                                .colors
                                                                                                .lightLowImportanceText,
                                                                                            fontSize: 10,
                                                                                          },
                                                                                          dimensions.width
                                                                                        )}
                                                                                        ellipsizeMode={
                                                                                          'tail'
                                                                                        }
                                                                                        numberOfLines={
                                                                                          2
                                                                                        }
                                                                                      >
                                                                                        {propDetailsPlayer(
                                                                                          gradedMultilegBetData
                                                                                        )}
                                                                                        {propDetailsTeam(
                                                                                          gradedMultilegBetData
                                                                                        )}
                                                                                        {spacingSuffix(
                                                                                          gradedMultilegBetData?.position
                                                                                        )}
                                                                                        {spacingSuffix(
                                                                                          gradedMultilegBetData?.line
                                                                                        )}
                                                                                        {propDetailsMetricSpecialShare(
                                                                                          gradedMultilegBetData
                                                                                        )}
                                                                                        {oddsAmericanSyntax(
                                                                                          gradedMultilegBetData?.oddsAmerican
                                                                                        )}
                                                                                        {segmentExists(
                                                                                          gradedMultilegBetData?.segment
                                                                                        )}
                                                                                        {propDetailsFuture(
                                                                                          gradedMultilegBetData
                                                                                        )}
                                                                                        {liveBetExists(
                                                                                          gradedMultilegBetData?.live
                                                                                        )}
                                                                                      </Text>
                                                                                    )}
                                                                                  </>
                                                                                </View>
                                                                              </View>
                                                                            </>
                                                                          );
                                                                        }}
                                                                        contentContainerStyle={StyleSheet.applyWidth(
                                                                          {
                                                                            flex: 1,
                                                                          },
                                                                          dimensions.width
                                                                        )}
                                                                        numColumns={
                                                                          1
                                                                        }
                                                                      />
                                                                    )}
                                                                  </>
                                                                </View>
                                                              </View>
                                                              {/* Right Align */}
                                                              <View
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    alignItems:
                                                                      'flex-end',
                                                                    justifyContent:
                                                                      'center',
                                                                    width:
                                                                      '25%',
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                              >
                                                                <View
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      alignItems:
                                                                        'flex-end',
                                                                      flex: 1,
                                                                      justifyContent:
                                                                        'center',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  <>
                                                                    {!lossOutcomeCompare(
                                                                      allBetsListXYZData?.outcome
                                                                    ) ? null : (
                                                                      <Text
                                                                        style={StyleSheet.applyWidth(
                                                                          {
                                                                            color:
                                                                              theme
                                                                                .colors
                                                                                .badErrorCancel,
                                                                            fontFamily:
                                                                              'System',
                                                                            fontSize: 12,
                                                                            fontWeight:
                                                                              '700',
                                                                          },
                                                                          dimensions.width
                                                                        )}
                                                                        ellipsizeMode={
                                                                          'tail'
                                                                        }
                                                                        numberOfLines={
                                                                          1
                                                                        }
                                                                      >
                                                                        {netProfitSuffix(
                                                                          allBetsListXYZData?.netProfit
                                                                        )}
                                                                      </Text>
                                                                    )}
                                                                  </>
                                                                  <>
                                                                    {!winOutcomeCompare(
                                                                      allBetsListXYZData?.outcome
                                                                    ) ? null : (
                                                                      <Text
                                                                        style={StyleSheet.applyWidth(
                                                                          {
                                                                            color:
                                                                              theme
                                                                                .colors
                                                                                .good,
                                                                            fontFamily:
                                                                              'System',
                                                                            fontSize: 12,
                                                                            fontWeight:
                                                                              '700',
                                                                          },
                                                                          dimensions.width
                                                                        )}
                                                                        ellipsizeMode={
                                                                          'tail'
                                                                        }
                                                                        numberOfLines={
                                                                          1
                                                                        }
                                                                      >
                                                                        {netProfitSuffix(
                                                                          allBetsListXYZData?.netProfit
                                                                        )}
                                                                      </Text>
                                                                    )}
                                                                  </>
                                                                  <>
                                                                    {!pushOutcomeCompare(
                                                                      allBetsListXYZData?.outcome
                                                                    ) ? null : (
                                                                      <Text
                                                                        style={StyleSheet.applyWidth(
                                                                          {
                                                                            color:
                                                                              theme
                                                                                .colors
                                                                                .backgroundInverseMainFont,
                                                                            fontFamily:
                                                                              'System',
                                                                            fontSize: 12,
                                                                            fontWeight:
                                                                              '700',
                                                                          },
                                                                          dimensions.width
                                                                        )}
                                                                        ellipsizeMode={
                                                                          'tail'
                                                                        }
                                                                        numberOfLines={
                                                                          1
                                                                        }
                                                                      >
                                                                        {netProfitSuffix(
                                                                          allBetsListXYZData?.netProfit
                                                                        )}
                                                                      </Text>
                                                                    )}
                                                                  </>
                                                                  <>
                                                                    {!voidOutcomeCompare(
                                                                      allBetsListXYZData?.outcome
                                                                    ) ? null : (
                                                                      <Text
                                                                        style={StyleSheet.applyWidth(
                                                                          {
                                                                            color:
                                                                              theme
                                                                                .colors
                                                                                .backgroundInverseMainFont,
                                                                            fontFamily:
                                                                              'System',
                                                                            fontSize: 12,
                                                                            fontWeight:
                                                                              '700',
                                                                          },
                                                                          dimensions.width
                                                                        )}
                                                                        ellipsizeMode={
                                                                          'tail'
                                                                        }
                                                                        numberOfLines={
                                                                          1
                                                                        }
                                                                      >
                                                                        {netProfitSuffix(
                                                                          allBetsListXYZData?.netProfit
                                                                        )}
                                                                      </Text>
                                                                    )}
                                                                  </>
                                                                  <>
                                                                    {!cashoutOutcomeCompare(
                                                                      allBetsListXYZData?.outcome
                                                                    ) ? null : (
                                                                      <Text
                                                                        style={StyleSheet.applyWidth(
                                                                          {
                                                                            color:
                                                                              theme
                                                                                .colors
                                                                                .fair,
                                                                            fontFamily:
                                                                              'System',
                                                                            fontSize: 12,
                                                                            fontWeight:
                                                                              '700',
                                                                          },
                                                                          dimensions.width
                                                                        )}
                                                                        ellipsizeMode={
                                                                          'tail'
                                                                        }
                                                                        numberOfLines={
                                                                          1
                                                                        }
                                                                      >
                                                                        {netProfitSuffix(
                                                                          allBetsListXYZData?.netProfit
                                                                        )}
                                                                      </Text>
                                                                    )}
                                                                  </>
                                                                </View>
                                                              </View>
                                                            </View>
                                                          </Surface>
                                                        )}
                                                      </>
                                                      {/* Pending Bets */}
                                                      <>
                                                        {betStatusHistorical(
                                                          Constants[
                                                            'filterBetStatusApply'
                                                          ]
                                                        ) ? null : (
                                                          <Surface
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                backgroundColor:
                                                                  theme.colors
                                                                    .divider,
                                                                borderRadius: 6,
                                                                marginTop: 3,
                                                              },
                                                              dimensions.width
                                                            )}
                                                            elevation={1}
                                                          >
                                                            {/* Bet Block */}
                                                            <View
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  backgroundColor:
                                                                    theme.colors
                                                                      .divider,
                                                                  borderRadius: 6,
                                                                  flexDirection:
                                                                    'row',
                                                                  justifyContent:
                                                                    'space-between',
                                                                  paddingBottom: 2,
                                                                  paddingLeft: 2,
                                                                  paddingRight: 2,
                                                                  paddingTop: 2,
                                                                },
                                                                dimensions.width
                                                              )}
                                                            >
                                                              {/* Left Align */}
                                                              <View
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    flexDirection:
                                                                      'row',
                                                                    width:
                                                                      '75%',
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                              >
                                                                {/* Bet/Odds/Teams */}
                                                                <View
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      flex: 1,
                                                                      justifyContent:
                                                                        'center',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {/* Pending Single Bet Lower Level */}
                                                                  <>
                                                                    {!typeSingleCompare(
                                                                      allBetsListXYZData?.type
                                                                    ) ? null : (
                                                                      <FlatList
                                                                        data={
                                                                          allBetsListXYZData?.bets
                                                                        }
                                                                        listKey={JSON.stringify(
                                                                          allBetsListXYZData?.bets
                                                                        )}
                                                                        keyExtractor={pendingSingleBetLowerLevelData =>
                                                                          pendingSingleBetLowerLevelData?.id ||
                                                                          pendingSingleBetLowerLevelData?.uuid ||
                                                                          JSON.stringify(
                                                                            pendingSingleBetLowerLevelData
                                                                          )
                                                                        }
                                                                        renderItem={({
                                                                          item,
                                                                        }) => {
                                                                          const pendingSingleBetLowerLevelData =
                                                                            item;
                                                                          return (
                                                                            <>
                                                                              {/* Single Bet */}
                                                                              <>
                                                                                {propositionTotal(
                                                                                  pendingSingleBetLowerLevelData?.proposition
                                                                                ) ? null : (
                                                                                  <Text
                                                                                    style={StyleSheet.applyWidth(
                                                                                      {
                                                                                        color:
                                                                                          theme
                                                                                            .colors
                                                                                            .backgroundInverseMainFont,
                                                                                        fontFamily:
                                                                                          'System',
                                                                                        fontSize: 12,
                                                                                        fontWeight:
                                                                                          '700',
                                                                                      },
                                                                                      dimensions.width
                                                                                    )}
                                                                                    numberOfLines={
                                                                                      2
                                                                                    }
                                                                                    ellipsizeMode={
                                                                                      'tail'
                                                                                    }
                                                                                  >
                                                                                    {propDetailsPlayer(
                                                                                      pendingSingleBetLowerLevelData
                                                                                    )}
                                                                                    {propDetailsTeam(
                                                                                      pendingSingleBetLowerLevelData
                                                                                    )}
                                                                                    {propositionUncommonDisplay(
                                                                                      pendingSingleBetLowerLevelData?.proposition
                                                                                    )}
                                                                                    {spacingSuffix(
                                                                                      pendingSingleBetLowerLevelData?.position
                                                                                    )}
                                                                                    {lineSuffix(
                                                                                      pendingSingleBetLowerLevelData?.line
                                                                                    )}
                                                                                    {propDetailsMetricSpecialShare(
                                                                                      pendingSingleBetLowerLevelData
                                                                                    )}
                                                                                    {oddsAmericanSyntax(
                                                                                      allBetsListXYZData?.oddsAmerican
                                                                                    )}
                                                                                    {segmentExists(
                                                                                      pendingSingleBetLowerLevelData?.segment
                                                                                    )}
                                                                                    {propDetailsFuture(
                                                                                      pendingSingleBetLowerLevelData
                                                                                    )}
                                                                                    {liveBetExists(
                                                                                      pendingSingleBetLowerLevelData?.live
                                                                                    )}
                                                                                  </Text>
                                                                                )}
                                                                              </>
                                                                              {/* propositionTotal */}
                                                                              <>
                                                                                {!propositionTotal(
                                                                                  pendingSingleBetLowerLevelData?.proposition
                                                                                ) ? null : (
                                                                                  <Text
                                                                                    style={StyleSheet.applyWidth(
                                                                                      {
                                                                                        color:
                                                                                          theme
                                                                                            .colors
                                                                                            .backgroundInverseMainFont,
                                                                                        fontFamily:
                                                                                          'System',
                                                                                        fontSize: 12,
                                                                                        fontWeight:
                                                                                          '700',
                                                                                      },
                                                                                      dimensions.width
                                                                                    )}
                                                                                    ellipsizeMode={
                                                                                      'tail'
                                                                                    }
                                                                                    numberOfLines={
                                                                                      2
                                                                                    }
                                                                                  >
                                                                                    {propDetailsPlayer(
                                                                                      pendingSingleBetLowerLevelData
                                                                                    )}
                                                                                    {propDetailsTeam(
                                                                                      pendingSingleBetLowerLevelData
                                                                                    )}
                                                                                    {spacingSuffix(
                                                                                      pendingSingleBetLowerLevelData?.position
                                                                                    )}
                                                                                    {spacingSuffix(
                                                                                      pendingSingleBetLowerLevelData?.line
                                                                                    )}
                                                                                    {propDetailsMetricSpecialShare(
                                                                                      pendingSingleBetLowerLevelData
                                                                                    )}
                                                                                    {oddsAmericanSyntax(
                                                                                      allBetsListXYZData?.oddsAmerican
                                                                                    )}
                                                                                    {segmentExists(
                                                                                      pendingSingleBetLowerLevelData?.segment
                                                                                    )}
                                                                                    {propDetailsFuture(
                                                                                      pendingSingleBetLowerLevelData
                                                                                    )}
                                                                                    {liveBetExists(
                                                                                      pendingSingleBetLowerLevelData?.live
                                                                                    )}
                                                                                  </Text>
                                                                                )}
                                                                              </>
                                                                              {/* Event League_Name */}
                                                                              <>
                                                                                {eventNotExist(
                                                                                  pendingSingleBetLowerLevelData?.event
                                                                                ) ? null : (
                                                                                  <Text
                                                                                    style={StyleSheet.applyWidth(
                                                                                      {
                                                                                        color:
                                                                                          theme
                                                                                            .colors
                                                                                            .lightLowImportanceText,
                                                                                        fontSize: 10,
                                                                                      },
                                                                                      dimensions.width
                                                                                    )}
                                                                                  >
                                                                                    {eventLeagueSuffix(
                                                                                      pendingSingleBetLowerLevelData
                                                                                        ?.event
                                                                                        ?.league
                                                                                    )}
                                                                                    {
                                                                                      pendingSingleBetLowerLevelData
                                                                                        ?.event
                                                                                        ?.name
                                                                                    }
                                                                                  </Text>
                                                                                )}
                                                                              </>
                                                                            </>
                                                                          );
                                                                        }}
                                                                        contentContainerStyle={StyleSheet.applyWidth(
                                                                          {
                                                                            flex: 1,
                                                                          },
                                                                          dimensions.width
                                                                        )}
                                                                        numColumns={
                                                                          1
                                                                        }
                                                                      />
                                                                    )}
                                                                  </>
                                                                  {/* Parlay */}
                                                                  <>
                                                                    {!typeParlayCompare(
                                                                      allBetsListXYZData?.type
                                                                    ) ? null : (
                                                                      <Text
                                                                        style={StyleSheet.applyWidth(
                                                                          {
                                                                            color:
                                                                              theme
                                                                                .colors[
                                                                                'Background Inverse (Main Font)'
                                                                              ],
                                                                            fontFamily:
                                                                              'System',
                                                                            fontSize: 12,
                                                                            fontWeight:
                                                                              '700',
                                                                          },
                                                                          dimensions.width
                                                                        )}
                                                                      >
                                                                        {parlayLegCount(
                                                                          allBetsListXYZData?.bets
                                                                        )}
                                                                        {
                                                                          'X Parlay '
                                                                        }
                                                                        {oddsAmericanSyntax(
                                                                          allBetsListXYZData?.oddsAmerican
                                                                        )}
                                                                      </Text>
                                                                    )}
                                                                  </>
                                                                  {/* Teaser */}
                                                                  <>
                                                                    {!typeTeaserCompare(
                                                                      allBetsListXYZData?.type
                                                                    ) ? null : (
                                                                      <Text
                                                                        style={StyleSheet.applyWidth(
                                                                          {
                                                                            color:
                                                                              theme
                                                                                .colors[
                                                                                'Background Inverse (Main Font)'
                                                                              ],
                                                                            fontFamily:
                                                                              'System',
                                                                            fontSize: 12,
                                                                            fontWeight:
                                                                              '700',
                                                                          },
                                                                          dimensions.width
                                                                        )}
                                                                      >
                                                                        {
                                                                          'Teaser '
                                                                        }
                                                                        {oddsAmericanSyntax(
                                                                          allBetsListXYZData?.oddsAmerican
                                                                        )}
                                                                      </Text>
                                                                    )}
                                                                  </>
                                                                  {/* Pending Multileg Bet */}
                                                                  <>
                                                                    {!typeMultilegCompare(
                                                                      allBetsListXYZData?.type
                                                                    ) ? null : (
                                                                      <FlatList
                                                                        data={
                                                                          allBetsListXYZData?.bets
                                                                        }
                                                                        listKey={JSON.stringify(
                                                                          allBetsListXYZData?.bets
                                                                        )}
                                                                        keyExtractor={pendingMultilegBetData =>
                                                                          pendingMultilegBetData?.id ||
                                                                          pendingMultilegBetData?.uuid ||
                                                                          JSON.stringify(
                                                                            pendingMultilegBetData
                                                                          )
                                                                        }
                                                                        renderItem={({
                                                                          item,
                                                                        }) => {
                                                                          const pendingMultilegBetData =
                                                                            item;
                                                                          return (
                                                                            <>
                                                                              {/* Is Multileg */}
                                                                              <View
                                                                                style={StyleSheet.applyWidth(
                                                                                  {
                                                                                    alignItems:
                                                                                      'center',
                                                                                    flexDirection:
                                                                                      'row',
                                                                                  },
                                                                                  dimensions.width
                                                                                )}
                                                                              >
                                                                                {/* Icon */}
                                                                                <View
                                                                                  style={StyleSheet.applyWidth(
                                                                                    {
                                                                                      alignContent:
                                                                                        'center',
                                                                                      alignItems:
                                                                                        'center',
                                                                                      justifyContent:
                                                                                        'center',
                                                                                      marginRight: 1,
                                                                                    },
                                                                                    dimensions.width
                                                                                  )}
                                                                                >
                                                                                  {/* Pending_Null */}
                                                                                  <>
                                                                                    {!pendingOutcomeCompare(
                                                                                      pendingMultilegBetData?.outcome
                                                                                    ) ? null : (
                                                                                      <Icon
                                                                                        size={
                                                                                          12
                                                                                        }
                                                                                        color={
                                                                                          theme
                                                                                            .colors
                                                                                            .lightLowImportanceText
                                                                                        }
                                                                                        name={
                                                                                          'Ionicons/ios-radio-button-off'
                                                                                        }
                                                                                      />
                                                                                    )}
                                                                                  </>
                                                                                  {/* Loss */}
                                                                                  <>
                                                                                    {!lossOutcomeCompare(
                                                                                      pendingMultilegBetData?.outcome
                                                                                    ) ? null : (
                                                                                      <Icon
                                                                                        name={
                                                                                          'Ionicons/ios-close-circle'
                                                                                        }
                                                                                        size={
                                                                                          12
                                                                                        }
                                                                                        color={
                                                                                          theme
                                                                                            .colors
                                                                                            .badErrorCancel
                                                                                        }
                                                                                      />
                                                                                    )}
                                                                                  </>
                                                                                  {/* Win */}
                                                                                  <>
                                                                                    {!winOutcomeCompare(
                                                                                      pendingMultilegBetData?.outcome
                                                                                    ) ? null : (
                                                                                      <Icon
                                                                                        name={
                                                                                          'Ionicons/ios-checkmark-circle'
                                                                                        }
                                                                                        size={
                                                                                          12
                                                                                        }
                                                                                        color={
                                                                                          theme
                                                                                            .colors
                                                                                            .good
                                                                                        }
                                                                                      />
                                                                                    )}
                                                                                  </>
                                                                                  {/* Push */}
                                                                                  <>
                                                                                    {!pushOutcomeCompare(
                                                                                      pendingMultilegBetData?.outcome
                                                                                    ) ? null : (
                                                                                      <Icon
                                                                                        name={
                                                                                          'Ionicons/ios-remove-circle'
                                                                                        }
                                                                                        size={
                                                                                          12
                                                                                        }
                                                                                        color={
                                                                                          theme
                                                                                            .colors[
                                                                                            'Background Inverse (Main Font)'
                                                                                          ]
                                                                                        }
                                                                                      />
                                                                                    )}
                                                                                  </>
                                                                                  {/* Void */}
                                                                                  <>
                                                                                    {!voidOutcomeCompare(
                                                                                      pendingMultilegBetData?.outcome
                                                                                    ) ? null : (
                                                                                      <Icon
                                                                                        name={
                                                                                          'Ionicons/ios-remove-circle'
                                                                                        }
                                                                                        size={
                                                                                          12
                                                                                        }
                                                                                        color={
                                                                                          theme
                                                                                            .colors
                                                                                            .lightLowImportanceText
                                                                                        }
                                                                                      />
                                                                                    )}
                                                                                  </>
                                                                                  {/* Cashout */}
                                                                                  <>
                                                                                    {!cashoutOutcomeCompare(
                                                                                      pendingMultilegBetData?.outcome
                                                                                    ) ? null : (
                                                                                      <Icon
                                                                                        name={
                                                                                          'Ionicons/ios-arrow-undo-circle'
                                                                                        }
                                                                                        size={
                                                                                          12
                                                                                        }
                                                                                        color={
                                                                                          theme
                                                                                            .colors
                                                                                            .fair
                                                                                        }
                                                                                      />
                                                                                    )}
                                                                                  </>
                                                                                </View>

                                                                                <View
                                                                                  style={StyleSheet.applyWidth(
                                                                                    {
                                                                                      flex: 1,
                                                                                      justifyContent:
                                                                                        'center',
                                                                                    },
                                                                                    dimensions.width
                                                                                  )}
                                                                                >
                                                                                  <>
                                                                                    {propositionTotal(
                                                                                      pendingMultilegBetData?.proposition
                                                                                    ) ? null : (
                                                                                      <Text
                                                                                        style={StyleSheet.applyWidth(
                                                                                          {
                                                                                            color:
                                                                                              theme
                                                                                                .colors
                                                                                                .lightLowImportanceText,
                                                                                            fontSize: 10,
                                                                                          },
                                                                                          dimensions.width
                                                                                        )}
                                                                                        numberOfLines={
                                                                                          2
                                                                                        }
                                                                                        ellipsizeMode={
                                                                                          'tail'
                                                                                        }
                                                                                      >
                                                                                        {propDetailsPlayer(
                                                                                          pendingMultilegBetData
                                                                                        )}
                                                                                        {propDetailsTeam(
                                                                                          pendingMultilegBetData
                                                                                        )}
                                                                                        {propositionUncommonDisplay(
                                                                                          pendingMultilegBetData?.proposition
                                                                                        )}
                                                                                        {spacingSuffix(
                                                                                          pendingMultilegBetData?.position
                                                                                        )}
                                                                                        {lineSuffix(
                                                                                          pendingMultilegBetData?.line
                                                                                        )}
                                                                                        {propDetailsMetricSpecialShare(
                                                                                          pendingMultilegBetData
                                                                                        )}
                                                                                        {oddsAmericanSyntax(
                                                                                          pendingMultilegBetData?.oddsAmerican
                                                                                        )}
                                                                                        {segmentExists(
                                                                                          pendingMultilegBetData?.segment
                                                                                        )}
                                                                                        {propDetailsFuture(
                                                                                          pendingMultilegBetData
                                                                                        )}
                                                                                        {liveBetExists(
                                                                                          pendingMultilegBetData?.live
                                                                                        )}
                                                                                      </Text>
                                                                                    )}
                                                                                  </>
                                                                                  {/* propositionTotal */}
                                                                                  <>
                                                                                    {!propositionTotal(
                                                                                      pendingMultilegBetData?.proposition
                                                                                    ) ? null : (
                                                                                      <Text
                                                                                        style={StyleSheet.applyWidth(
                                                                                          {
                                                                                            color:
                                                                                              theme
                                                                                                .colors
                                                                                                .lightLowImportanceText,
                                                                                            fontSize: 10,
                                                                                          },
                                                                                          dimensions.width
                                                                                        )}
                                                                                        ellipsizeMode={
                                                                                          'tail'
                                                                                        }
                                                                                        numberOfLines={
                                                                                          2
                                                                                        }
                                                                                      >
                                                                                        {propDetailsPlayer(
                                                                                          pendingMultilegBetData
                                                                                        )}
                                                                                        {propDetailsTeam(
                                                                                          pendingMultilegBetData
                                                                                        )}
                                                                                        {spacingSuffix(
                                                                                          pendingMultilegBetData?.position
                                                                                        )}
                                                                                        {spacingSuffix(
                                                                                          pendingMultilegBetData?.line
                                                                                        )}
                                                                                        {propDetailsMetricSpecialShare(
                                                                                          pendingMultilegBetData
                                                                                        )}
                                                                                        {oddsAmericanSyntax(
                                                                                          pendingMultilegBetData?.oddsAmerican
                                                                                        )}
                                                                                        {segmentExists(
                                                                                          pendingMultilegBetData?.segment
                                                                                        )}
                                                                                        {propDetailsFuture(
                                                                                          pendingMultilegBetData
                                                                                        )}
                                                                                        {liveBetExists(
                                                                                          pendingMultilegBetData?.live
                                                                                        )}
                                                                                      </Text>
                                                                                    )}
                                                                                  </>
                                                                                </View>
                                                                              </View>
                                                                            </>
                                                                          );
                                                                        }}
                                                                        contentContainerStyle={StyleSheet.applyWidth(
                                                                          {
                                                                            flex: 1,
                                                                          },
                                                                          dimensions.width
                                                                        )}
                                                                        numColumns={
                                                                          1
                                                                        }
                                                                      />
                                                                    )}
                                                                  </>
                                                                </View>
                                                              </View>
                                                              {/* Right Align */}
                                                              <View
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    alignItems:
                                                                      'flex-end',
                                                                    justifyContent:
                                                                      'center',
                                                                    width:
                                                                      '25%',
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                              >
                                                                <View
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      flex: 1,
                                                                      flexDirection:
                                                                        'row',
                                                                      justifyContent:
                                                                        'flex-end',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  <View
                                                                    style={StyleSheet.applyWidth(
                                                                      {
                                                                        alignItems:
                                                                          'flex-end',
                                                                        flex: 1,
                                                                        justifyContent:
                                                                          'center',
                                                                      },
                                                                      dimensions.width
                                                                    )}
                                                                  >
                                                                    <Text
                                                                      style={StyleSheet.applyWidth(
                                                                        {
                                                                          color:
                                                                            theme
                                                                              .colors
                                                                              .backgroundInverseMainFont,
                                                                          fontFamily:
                                                                            'System',
                                                                          fontSize: 10,
                                                                          fontWeight:
                                                                            '700',
                                                                        },
                                                                        dimensions.width
                                                                      )}
                                                                      ellipsizeMode={
                                                                        'tail'
                                                                      }
                                                                      numberOfLines={
                                                                        1
                                                                      }
                                                                    >
                                                                      {atRiskSuffix(
                                                                        allBetsListXYZData?.atRisk
                                                                      )}
                                                                    </Text>

                                                                    <Text
                                                                      style={StyleSheet.applyWidth(
                                                                        {
                                                                          color:
                                                                            theme
                                                                              .colors
                                                                              .lightLowImportanceText,
                                                                          fontSize: 8,
                                                                        },
                                                                        dimensions.width
                                                                      )}
                                                                    >
                                                                      {'Risk'}
                                                                    </Text>
                                                                  </View>

                                                                  <View
                                                                    style={StyleSheet.applyWidth(
                                                                      {
                                                                        alignItems:
                                                                          'flex-end',
                                                                        flex: 1,
                                                                        justifyContent:
                                                                          'center',
                                                                        marginLeft: 3,
                                                                      },
                                                                      dimensions.width
                                                                    )}
                                                                  >
                                                                    <Text
                                                                      style={StyleSheet.applyWidth(
                                                                        {
                                                                          color:
                                                                            theme
                                                                              .colors
                                                                              .backgroundInverseMainFont,
                                                                          fontFamily:
                                                                            'System',
                                                                          fontSize: 10,
                                                                          fontWeight:
                                                                            '700',
                                                                        },
                                                                        dimensions.width
                                                                      )}
                                                                      ellipsizeMode={
                                                                        'tail'
                                                                      }
                                                                      numberOfLines={
                                                                        1
                                                                      }
                                                                    >
                                                                      {toWinSuffix(
                                                                        allBetsListXYZData?.toWin
                                                                      )}
                                                                    </Text>

                                                                    <Text
                                                                      style={StyleSheet.applyWidth(
                                                                        {
                                                                          color:
                                                                            theme
                                                                              .colors
                                                                              .lightLowImportanceText,
                                                                          fontSize: 8,
                                                                        },
                                                                        dimensions.width
                                                                      )}
                                                                    >
                                                                      {'To Win'}
                                                                    </Text>
                                                                  </View>
                                                                </View>
                                                              </View>
                                                            </View>
                                                          </Surface>
                                                        )}
                                                      </>
                                                    </>
                                                  );
                                                }}
                                                contentContainerStyle={StyleSheet.applyWidth(
                                                  { flex: 1 },
                                                  dimensions.width
                                                )}
                                                numColumns={1}
                                              />
                                            </View>
                                          </ScrollView>
                                          {/* Share Buttons */}
                                          <View
                                            style={StyleSheet.applyWidth(
                                              { alignItems: 'center' },
                                              dimensions.width
                                            )}
                                          >
                                            <View
                                              style={StyleSheet.applyWidth(
                                                {
                                                  alignItems: 'center',
                                                  flexDirection: 'row',
                                                  paddingBottom: 16,
                                                  paddingTop: 3,
                                                },
                                                dimensions.width
                                              )}
                                            >
                                              <Icon
                                                style={StyleSheet.applyWidth(
                                                  { marginRight: 5 },
                                                  dimensions.width
                                                )}
                                                name={'Ionicons/ios-camera'}
                                                size={16}
                                                color={
                                                  theme.colors
                                                    .lightLowImportanceText
                                                }
                                              />
                                              <Text
                                                style={StyleSheet.applyWidth(
                                                  {
                                                    color:
                                                      theme.colors
                                                        .lightLowImportanceText,
                                                    fontSize: 12,
                                                  },
                                                  dimensions.width
                                                )}
                                              >
                                                {'Take a screenshot and share'}
                                              </Text>
                                            </View>
                                          </View>
                                        </View>
                                      </Modal>
                                    )}
                                  </>
                                </>
                              );
                            }}
                          </SwaggerAPIApi.FetchGetBetslipsByBettorIdNotKate$sGET>
                        </View>
                      )}
                    </>
                    {/* Breakdown View */}
                    <>
                      {!profileTabBreakdown(
                        Constants['profileTabDevice']
                      ) ? null : (
                        <View>
                          {/* Most Profitable Section */}
                          <View
                            style={StyleSheet.applyWidth(
                              { minHeight: 50 },
                              dimensions.width
                            )}
                          >
                            <View>
                              {/* Title */}
                              <View
                                style={StyleSheet.applyWidth(
                                  {
                                    alignItems: 'center',
                                    flexDirection: 'row',
                                    marginLeft: '4%',
                                    marginRight: '4%',
                                    marginTop: 30,
                                    opacity: 1,
                                  },
                                  dimensions.width
                                )}
                              >
                                <Text
                                  style={StyleSheet.applyWidth(
                                    {
                                      color:
                                        theme.colors.backgroundInverseMainFont,
                                      fontFamily: 'System',
                                      fontSize: 20,
                                      fontWeight: '700',
                                    },
                                    dimensions.width
                                  )}
                                >
                                  {'Most Profitable'}
                                </Text>
                              </View>
                            </View>

                            <SwaggerAPIApi.FetchGetMostProfitableGET
                              daysBack={70}
                              dummy={Constants['updatedSportsBook']}
                              internalId={Constants['internalId']}
                            >
                              {({
                                loading,
                                error,
                                data,
                                refetchGetMostProfitable,
                              }) => {
                                const fetchData = data;
                                if (!fetchData || loading) {
                                  return <ActivityIndicator />;
                                }

                                if (error) {
                                  return (
                                    <Text style={{ textAlign: 'center' }}>
                                      There was a problem fetching this data
                                    </Text>
                                  );
                                }

                                return (
                                  <>
                                    <View
                                      style={StyleSheet.applyWidth(
                                        { marginTop: 4 },
                                        dimensions.width
                                      )}
                                    >
                                      <ScrollView
                                        contentContainerStyle={StyleSheet.applyWidth(
                                          {
                                            marginTop: 6,
                                            paddingBottom: 6,
                                            paddingLeft: '4%',
                                          },
                                          dimensions.width
                                        )}
                                        showsVerticalScrollIndicator={false}
                                        bounces={true}
                                        horizontal={true}
                                        showsHorizontalScrollIndicator={false}
                                      >
                                        {/* League View */}
                                        <View
                                          style={StyleSheet.applyWidth(
                                            {
                                              flexDirection: 'row',
                                              marginRight: 12,
                                              maxWidth: 175,
                                              minHeight: 50,
                                            },
                                            dimensions.width
                                          )}
                                        >
                                          <Touchable
                                            onPress={() => {
                                              try {
                                                setToggleMostProfitableItem(
                                                  'Leagues'
                                                );
                                                setToggleMostProfitableModal(
                                                  true
                                                );
                                                segmentLogTrack(
                                                  segment,
                                                  'Most profitable league opened',
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined
                                                );
                                              } catch (err) {
                                                console.error(err);
                                              }
                                            }}
                                            style={StyleSheet.applyWidth(
                                              { maxWidth: 175 },
                                              dimensions.width
                                            )}
                                          >
                                            <Surface
                                              style={StyleSheet.applyWidth(
                                                {
                                                  backgroundColor:
                                                    theme.colors.background,
                                                  borderRadius: 8,
                                                  flex: 1,
                                                },
                                                dimensions.width
                                              )}
                                              elevation={1}
                                            >
                                              {/* Most Profitable Block */}
                                              <View
                                                style={StyleSheet.applyWidth(
                                                  {
                                                    backgroundColor:
                                                      theme.colors.divider,
                                                    borderBottomWidth: 1,
                                                    borderColor:
                                                      theme.colors.divider,
                                                    borderLeftWidth: 1,
                                                    borderRadius: 8,
                                                    borderRightWidth: 1,
                                                    borderTopWidth: 1,
                                                    flexDirection: 'row',
                                                    height: '100%',
                                                    paddingBottom: 12,
                                                    paddingLeft: 12,
                                                    paddingRight: 12,
                                                    paddingTop: 12,
                                                    width: 175,
                                                  },
                                                  dimensions.width
                                                )}
                                                collapsable={false}
                                              >
                                                <View
                                                  style={StyleSheet.applyWidth(
                                                    { flex: 1 },
                                                    dimensions.width
                                                  )}
                                                >
                                                  <Text
                                                    style={StyleSheet.applyWidth(
                                                      {
                                                        color:
                                                          theme.colors
                                                            .backgroundInverseMainFont,
                                                        fontFamily: 'System',
                                                        fontSize: 18,
                                                        fontWeight: '700',
                                                      },
                                                      dimensions.width
                                                    )}
                                                  >
                                                    {'League'}
                                                  </Text>
                                                  {/* League List */}
                                                  <FlatList
                                                    data={returnMostProfitable(
                                                      fetchData?.leagues
                                                    )}
                                                    listKey={'zafKBarG'}
                                                    keyExtractor={leagueListData =>
                                                      leagueListData?.id ||
                                                      leagueListData?.uuid ||
                                                      JSON.stringify(
                                                        leagueListData
                                                      )
                                                    }
                                                    renderItem={({ item }) => {
                                                      const leagueListData =
                                                        item;
                                                      return (
                                                        <>
                                                          {/* Item */}
                                                          <Text
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                color:
                                                                  theme.colors
                                                                    .lightLowImportanceText,
                                                                fontFamily:
                                                                  'System',
                                                                fontSize: 16,
                                                                fontWeight:
                                                                  '400',
                                                                marginTop: 16,
                                                              },
                                                              dimensions.width
                                                            )}
                                                            ellipsizeMode={
                                                              'tail'
                                                            }
                                                            numberOfLines={1}
                                                          >
                                                            {
                                                              leagueListData?.name
                                                            }
                                                          </Text>
                                                          {/* Net + */}
                                                          <>
                                                            {!valuePositive(
                                                              leagueListData?.netProfit
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .good,
                                                                    fontFamily:
                                                                      'System',
                                                                    fontSize: 20,
                                                                    fontWeight:
                                                                      '700',
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                                numberOfLines={
                                                                  1
                                                                }
                                                                ellipsizeMode={
                                                                  'tail'
                                                                }
                                                              >
                                                                {netProfitSuffix(
                                                                  leagueListData?.netProfit
                                                                )}
                                                              </Text>
                                                            )}
                                                          </>
                                                          {/* Net - */}
                                                          <>
                                                            {!valueNegative(
                                                              leagueListData?.netProfit
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .badErrorCancel,
                                                                    fontFamily:
                                                                      'System',
                                                                    fontSize: 20,
                                                                    fontWeight:
                                                                      '700',
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                                numberOfLines={
                                                                  1
                                                                }
                                                                ellipsizeMode={
                                                                  'tail'
                                                                }
                                                              >
                                                                {netProfitSuffix(
                                                                  leagueListData?.netProfit
                                                                )}
                                                              </Text>
                                                            )}
                                                          </>
                                                          {/* Net (Neut) */}
                                                          <>
                                                            {!valueNeutral(
                                                              leagueListData?.netProfit
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .backgroundInverseMainFont,
                                                                    fontFamily:
                                                                      'System',
                                                                    fontSize: 20,
                                                                    fontWeight:
                                                                      '700',
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                                numberOfLines={
                                                                  1
                                                                }
                                                                ellipsizeMode={
                                                                  'tail'
                                                                }
                                                              >
                                                                {netProfitSuffix(
                                                                  leagueListData?.netProfit
                                                                )}
                                                              </Text>
                                                            )}
                                                          </>
                                                          {/* ROI + */}
                                                          <>
                                                            {!valuePositive(
                                                              leagueListData?.roi
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .good,
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                                numberOfLines={
                                                                  1
                                                                }
                                                                ellipsizeMode={
                                                                  'tail'
                                                                }
                                                              >
                                                                {roiSyntax(
                                                                  leagueListData?.roi
                                                                )}
                                                                {' ROI'}
                                                              </Text>
                                                            )}
                                                          </>
                                                          {/* ROI - */}
                                                          <>
                                                            {!valueNegative(
                                                              leagueListData?.roi
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .badErrorCancel,
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                                numberOfLines={
                                                                  1
                                                                }
                                                                ellipsizeMode={
                                                                  'tail'
                                                                }
                                                              >
                                                                {roiSyntax(
                                                                  leagueListData?.roi
                                                                )}
                                                                {' ROI'}
                                                              </Text>
                                                            )}
                                                          </>
                                                          {/* ROI (Neut) */}
                                                          <>
                                                            {!valueNeutral(
                                                              leagueListData?.roi
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .backgroundInverseMainFont,
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                                numberOfLines={
                                                                  1
                                                                }
                                                                ellipsizeMode={
                                                                  'tail'
                                                                }
                                                              >
                                                                {roiSyntax(
                                                                  leagueListData?.roi
                                                                )}
                                                                {' ROI'}
                                                              </Text>
                                                            )}
                                                          </>
                                                        </>
                                                      );
                                                    }}
                                                    contentContainerStyle={StyleSheet.applyWidth(
                                                      { flex: 1 },
                                                      dimensions.width
                                                    )}
                                                    numColumns={1}
                                                  />
                                                </View>
                                              </View>
                                            </Surface>
                                          </Touchable>
                                        </View>
                                        {/* Team View */}
                                        <View
                                          style={StyleSheet.applyWidth(
                                            {
                                              flexDirection: 'row',
                                              marginRight: 12,
                                              maxWidth: 175,
                                              minHeight: 50,
                                            },
                                            dimensions.width
                                          )}
                                        >
                                          <Touchable
                                            onPress={() => {
                                              try {
                                                setToggleMostProfitableItem(
                                                  'Teams'
                                                );
                                                setToggleMostProfitableModal(
                                                  true
                                                );
                                                segmentLogTrack(
                                                  segment,
                                                  'Most profitable team opened',
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined
                                                );
                                              } catch (err) {
                                                console.error(err);
                                              }
                                            }}
                                            style={StyleSheet.applyWidth(
                                              { maxWidth: 175 },
                                              dimensions.width
                                            )}
                                          >
                                            <Surface
                                              style={StyleSheet.applyWidth(
                                                {
                                                  backgroundColor:
                                                    theme.colors.background,
                                                  borderRadius: 8,
                                                  flex: 1,
                                                },
                                                dimensions.width
                                              )}
                                              elevation={1}
                                            >
                                              {/* Most Profitable Block */}
                                              <View
                                                style={StyleSheet.applyWidth(
                                                  {
                                                    backgroundColor:
                                                      theme.colors.divider,
                                                    borderBottomWidth: 1,
                                                    borderColor:
                                                      theme.colors.divider,
                                                    borderLeftWidth: 1,
                                                    borderRadius: 8,
                                                    borderRightWidth: 1,
                                                    borderTopWidth: 1,
                                                    flexDirection: 'row',
                                                    height: '100%',
                                                    paddingBottom: 12,
                                                    paddingLeft: 12,
                                                    paddingRight: 12,
                                                    paddingTop: 12,
                                                    width: 175,
                                                  },
                                                  dimensions.width
                                                )}
                                                collapsable={false}
                                              >
                                                <View
                                                  style={StyleSheet.applyWidth(
                                                    { flex: 1 },
                                                    dimensions.width
                                                  )}
                                                >
                                                  <Text
                                                    style={StyleSheet.applyWidth(
                                                      {
                                                        color:
                                                          theme.colors
                                                            .backgroundInverseMainFont,
                                                        fontFamily: 'System',
                                                        fontSize: 18,
                                                        fontWeight: '700',
                                                      },
                                                      dimensions.width
                                                    )}
                                                  >
                                                    {'Team'}
                                                  </Text>
                                                  {/* Team List */}
                                                  <FlatList
                                                    data={returnMostProfitable(
                                                      fetchData?.teams
                                                    )}
                                                    listKey={'7AGUhBlX'}
                                                    keyExtractor={teamListData =>
                                                      teamListData?.id ||
                                                      teamListData?.uuid ||
                                                      JSON.stringify(
                                                        teamListData
                                                      )
                                                    }
                                                    renderItem={({ item }) => {
                                                      const teamListData = item;
                                                      return (
                                                        <>
                                                          {/* Item */}
                                                          <Text
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                color:
                                                                  theme.colors
                                                                    .lightLowImportanceText,
                                                                fontFamily:
                                                                  'System',
                                                                fontSize: 16,
                                                                fontWeight:
                                                                  '400',
                                                                marginTop: 16,
                                                              },
                                                              dimensions.width
                                                            )}
                                                            ellipsizeMode={
                                                              'tail'
                                                            }
                                                            numberOfLines={1}
                                                          >
                                                            {teamListData?.name}
                                                          </Text>
                                                          {/* Net + */}
                                                          <>
                                                            {!valuePositive(
                                                              teamListData?.netProfit
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .good,
                                                                    fontFamily:
                                                                      'System',
                                                                    fontSize: 20,
                                                                    fontWeight:
                                                                      '700',
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                                numberOfLines={
                                                                  1
                                                                }
                                                                ellipsizeMode={
                                                                  'tail'
                                                                }
                                                              >
                                                                {netProfitSuffix(
                                                                  teamListData?.netProfit
                                                                )}
                                                              </Text>
                                                            )}
                                                          </>
                                                          {/* Net - */}
                                                          <>
                                                            {!valueNegative(
                                                              teamListData?.netProfit
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .badErrorCancel,
                                                                    fontFamily:
                                                                      'System',
                                                                    fontSize: 20,
                                                                    fontWeight:
                                                                      '700',
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                                numberOfLines={
                                                                  1
                                                                }
                                                                ellipsizeMode={
                                                                  'tail'
                                                                }
                                                              >
                                                                {netProfitSuffix(
                                                                  teamListData?.netProfit
                                                                )}
                                                              </Text>
                                                            )}
                                                          </>
                                                          {/* Net (Neut) */}
                                                          <>
                                                            {!valueNeutral(
                                                              teamListData?.netProfit
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .backgroundInverseMainFont,
                                                                    fontFamily:
                                                                      'System',
                                                                    fontSize: 20,
                                                                    fontWeight:
                                                                      '700',
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                              >
                                                                {netProfitSuffix(
                                                                  teamListData?.netProfit
                                                                )}
                                                              </Text>
                                                            )}
                                                          </>
                                                          {/* ROI + */}
                                                          <>
                                                            {!valuePositive(
                                                              teamListData?.roi
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .good,
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                                numberOfLines={
                                                                  1
                                                                }
                                                                ellipsizeMode={
                                                                  'tail'
                                                                }
                                                              >
                                                                {roiSyntax(
                                                                  teamListData?.roi
                                                                )}
                                                                {' ROI'}
                                                              </Text>
                                                            )}
                                                          </>
                                                          {/* ROI - */}
                                                          <>
                                                            {!valueNegative(
                                                              teamListData?.roi
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .badErrorCancel,
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                                numberOfLines={
                                                                  1
                                                                }
                                                                ellipsizeMode={
                                                                  'tail'
                                                                }
                                                              >
                                                                {roiSyntax(
                                                                  teamListData?.roi
                                                                )}
                                                                {' ROI'}
                                                              </Text>
                                                            )}
                                                          </>
                                                          {/* ROI (Neut) */}
                                                          <>
                                                            {!valueNeutral(
                                                              teamListData?.roi
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .backgroundInverseMainFont,
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                                numberOfLines={
                                                                  1
                                                                }
                                                                ellipsizeMode={
                                                                  'tail'
                                                                }
                                                              >
                                                                {roiSyntax(
                                                                  teamListData?.roi
                                                                )}
                                                                {' ROI'}
                                                              </Text>
                                                            )}
                                                          </>
                                                        </>
                                                      );
                                                    }}
                                                    contentContainerStyle={StyleSheet.applyWidth(
                                                      { flex: 1 },
                                                      dimensions.width
                                                    )}
                                                    numColumns={1}
                                                  />
                                                </View>
                                              </View>
                                            </Surface>
                                          </Touchable>
                                        </View>
                                        {/* Bet Type View */}
                                        <View
                                          style={StyleSheet.applyWidth(
                                            {
                                              flexDirection: 'row',
                                              marginRight: 12,
                                              maxWidth: 175,
                                              minHeight: 50,
                                            },
                                            dimensions.width
                                          )}
                                        >
                                          <Touchable
                                            onPress={() => {
                                              try {
                                                setToggleMostProfitableItem(
                                                  'Bet Types'
                                                );
                                                setToggleMostProfitableModal(
                                                  true
                                                );
                                                segmentLogTrack(
                                                  segment,
                                                  'Most profitable bet type opened',
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined,
                                                  undefined
                                                );
                                              } catch (err) {
                                                console.error(err);
                                              }
                                            }}
                                            style={StyleSheet.applyWidth(
                                              { maxWidth: 175 },
                                              dimensions.width
                                            )}
                                          >
                                            <Surface
                                              style={StyleSheet.applyWidth(
                                                {
                                                  backgroundColor:
                                                    theme.colors.background,
                                                  borderRadius: 8,
                                                  flex: 1,
                                                },
                                                dimensions.width
                                              )}
                                              elevation={1}
                                            >
                                              {/* Most Profitable Block */}
                                              <View
                                                style={StyleSheet.applyWidth(
                                                  {
                                                    backgroundColor:
                                                      theme.colors.divider,
                                                    borderBottomWidth: 1,
                                                    borderColor:
                                                      theme.colors.divider,
                                                    borderLeftWidth: 1,
                                                    borderRadius: 8,
                                                    borderRightWidth: 1,
                                                    borderTopWidth: 1,
                                                    flexDirection: 'row',
                                                    height: '100%',
                                                    paddingBottom: 12,
                                                    paddingLeft: 12,
                                                    paddingRight: 12,
                                                    paddingTop: 12,
                                                    width: 175,
                                                  },
                                                  dimensions.width
                                                )}
                                                collapsable={false}
                                              >
                                                <View
                                                  style={StyleSheet.applyWidth(
                                                    { flex: 1 },
                                                    dimensions.width
                                                  )}
                                                >
                                                  <Text
                                                    style={StyleSheet.applyWidth(
                                                      {
                                                        color:
                                                          theme.colors
                                                            .backgroundInverseMainFont,
                                                        fontFamily: 'System',
                                                        fontSize: 18,
                                                        fontWeight: '700',
                                                      },
                                                      dimensions.width
                                                    )}
                                                    ellipsizeMode={'tail'}
                                                    numberOfLines={1}
                                                  >
                                                    {'Bet Type'}
                                                  </Text>
                                                  {/* Bet Type List */}
                                                  <FlatList
                                                    data={returnMostProfitable(
                                                      fetchData?.betTypes
                                                    )}
                                                    listKey={'l4bmdptr'}
                                                    keyExtractor={betTypeListData =>
                                                      betTypeListData?.id ||
                                                      betTypeListData?.uuid ||
                                                      JSON.stringify(
                                                        betTypeListData
                                                      )
                                                    }
                                                    renderItem={({ item }) => {
                                                      const betTypeListData =
                                                        item;
                                                      return (
                                                        <>
                                                          {/* Item */}
                                                          <Text
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                color:
                                                                  theme.colors
                                                                    .lightLowImportanceText,
                                                                fontFamily:
                                                                  'System',
                                                                fontSize: 16,
                                                                fontWeight:
                                                                  '400',
                                                                marginTop: 16,
                                                              },
                                                              dimensions.width
                                                            )}
                                                            ellipsizeMode={
                                                              'tail'
                                                            }
                                                            numberOfLines={1}
                                                          >
                                                            {capitalizeAllWords(
                                                              betTypeListData?.name
                                                            )}
                                                          </Text>
                                                          {/* Net + */}
                                                          <>
                                                            {!valuePositive(
                                                              betTypeListData?.netProfit
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .good,
                                                                    fontFamily:
                                                                      'System',
                                                                    fontSize: 20,
                                                                    fontWeight:
                                                                      '700',
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                                numberOfLines={
                                                                  1
                                                                }
                                                                ellipsizeMode={
                                                                  'tail'
                                                                }
                                                              >
                                                                {netProfitSuffix(
                                                                  betTypeListData?.netProfit
                                                                )}
                                                              </Text>
                                                            )}
                                                          </>
                                                          {/* Net - */}
                                                          <>
                                                            {!valueNegative(
                                                              betTypeListData?.netProfit
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .badErrorCancel,
                                                                    fontFamily:
                                                                      'System',
                                                                    fontSize: 20,
                                                                    fontWeight:
                                                                      '700',
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                                numberOfLines={
                                                                  1
                                                                }
                                                                ellipsizeMode={
                                                                  'tail'
                                                                }
                                                              >
                                                                {netProfitSuffix(
                                                                  betTypeListData?.netProfit
                                                                )}
                                                              </Text>
                                                            )}
                                                          </>
                                                          {/* Net (Neut) */}
                                                          <>
                                                            {!valueNeutral(
                                                              betTypeListData?.netProfit
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .strongTextOnGoldButtons,
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                              >
                                                                {netProfitSuffix(
                                                                  betTypeListData?.netProfit
                                                                )}
                                                              </Text>
                                                            )}
                                                          </>
                                                          {/* ROI + */}
                                                          <>
                                                            {!valuePositive(
                                                              betTypeListData?.roi
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .good,
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                                numberOfLines={
                                                                  1
                                                                }
                                                                ellipsizeMode={
                                                                  'tail'
                                                                }
                                                              >
                                                                {roiSyntax(
                                                                  betTypeListData?.roi
                                                                )}
                                                                {' ROI'}
                                                              </Text>
                                                            )}
                                                          </>
                                                          {/* ROI - */}
                                                          <>
                                                            {!valueNegative(
                                                              betTypeListData?.roi
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .badErrorCancel,
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                                numberOfLines={
                                                                  1
                                                                }
                                                                ellipsizeMode={
                                                                  'tail'
                                                                }
                                                              >
                                                                {roiSyntax(
                                                                  betTypeListData?.roi
                                                                )}
                                                                {' ROI'}
                                                              </Text>
                                                            )}
                                                          </>
                                                          {/* ROI (Neut) */}
                                                          <>
                                                            {!valueNeutral(
                                                              betTypeListData?.roi
                                                            ) ? null : (
                                                              <Text
                                                                style={StyleSheet.applyWidth(
                                                                  {
                                                                    color:
                                                                      theme
                                                                        .colors
                                                                        .backgroundInverseMainFont,
                                                                  },
                                                                  dimensions.width
                                                                )}
                                                                numberOfLines={
                                                                  1
                                                                }
                                                                ellipsizeMode={
                                                                  'tail'
                                                                }
                                                              >
                                                                {roiSyntax(
                                                                  betTypeListData?.roi
                                                                )}
                                                                {' ROI'}
                                                              </Text>
                                                            )}
                                                          </>
                                                        </>
                                                      );
                                                    }}
                                                    contentContainerStyle={StyleSheet.applyWidth(
                                                      { flex: 1 },
                                                      dimensions.width
                                                    )}
                                                    numColumns={1}
                                                  />
                                                </View>
                                              </View>
                                            </Surface>
                                          </Touchable>
                                        </View>
                                      </ScrollView>
                                    </View>
                                    {/* Most Profitable Modal */}
                                    <Modal
                                      style={StyleSheet.applyWidth(
                                        {
                                          backgroundColor:
                                            theme.colors.background,
                                        },
                                        dimensions.width
                                      )}
                                      visible={toggleMostProfitableModal}
                                      animationType={'slide'}
                                      presentationStyle={'pageSheet'}
                                    >
                                      <View
                                        style={StyleSheet.applyWidth(
                                          {
                                            backgroundColor:
                                              theme.colors.background,
                                            height: '100%',
                                          },
                                          dimensions.width
                                        )}
                                      >
                                        {/* Top Bar */}
                                        <Surface
                                          style={StyleSheet.applyWidth(
                                            {
                                              backgroundColor:
                                                theme.colors.background,
                                              minHeight: 40,
                                            },
                                            dimensions.width
                                          )}
                                          elevation={2}
                                        >
                                          <View
                                            style={StyleSheet.applyWidth(
                                              {
                                                flexDirection: 'row',
                                                justifyContent: 'space-between',
                                              },
                                              dimensions.width
                                            )}
                                          >
                                            {/* Left Button */}
                                            <View
                                              style={StyleSheet.applyWidth(
                                                {
                                                  alignItems: 'flex-start',
                                                  justifyContent: 'center',
                                                  width: '25%',
                                                },
                                                dimensions.width
                                              )}
                                            >
                                              <Touchable
                                                onPress={() => {
                                                  try {
                                                    setToggleMostProfitableModal(
                                                      false
                                                    );
                                                    setToggleMostProfitableItem(
                                                      ''
                                                    );
                                                  } catch (err) {
                                                    console.error(err);
                                                  }
                                                }}
                                              >
                                                <View
                                                  style={StyleSheet.applyWidth(
                                                    {
                                                      alignItems: 'center',
                                                      flexDirection: 'row',
                                                      height: 65,
                                                      paddingRight: 16,
                                                    },
                                                    dimensions.width
                                                  )}
                                                >
                                                  {/* Back */}
                                                  <Icon
                                                    name={
                                                      'Ionicons/ios-chevron-back'
                                                    }
                                                    size={32}
                                                    color={
                                                      theme.colors
                                                        .backgroundInverseMainFont
                                                    }
                                                  />
                                                  <Text
                                                    style={StyleSheet.applyWidth(
                                                      {
                                                        color:
                                                          theme.colors
                                                            .backgroundInverseMainFont,
                                                        fontSize: 18,
                                                      },
                                                      dimensions.width
                                                    )}
                                                  >
                                                    {'Back'}
                                                  </Text>
                                                </View>
                                              </Touchable>
                                            </View>

                                            <View
                                              style={StyleSheet.applyWidth(
                                                {
                                                  alignContent: 'center',
                                                  alignItems: 'center',
                                                  height: 65,
                                                  justifyContent: 'center',
                                                },
                                                dimensions.width
                                              )}
                                            >
                                              <Text
                                                style={StyleSheet.applyWidth(
                                                  {
                                                    color:
                                                      theme.colors
                                                        .backgroundInverseMainFont,
                                                    fontFamily: 'System',
                                                    fontSize: 18,
                                                    fontWeight: '700',
                                                    textAlign: 'center',
                                                  },
                                                  dimensions.width
                                                )}
                                              >
                                                {'Most Profitable'}
                                              </Text>

                                              <Text
                                                style={StyleSheet.applyWidth(
                                                  {
                                                    color:
                                                      theme.colors
                                                        .backgroundInverseMainFont,
                                                    fontFamily: 'System',
                                                    fontSize: 12,
                                                    fontWeight: '700',
                                                    textAlign: 'center',
                                                  },
                                                  dimensions.width
                                                )}
                                              >
                                                {toggleMostProfitableItem}
                                              </Text>
                                            </View>
                                            {/* Right Button */}
                                            <View
                                              style={StyleSheet.applyWidth(
                                                {
                                                  alignItems: 'flex-end',
                                                  borderRadius: 0,
                                                  justifyContent: 'center',
                                                  width: '25%',
                                                },
                                                dimensions.width
                                              )}
                                            />
                                          </View>
                                        </Surface>

                                        <ScrollView
                                          contentContainerStyle={StyleSheet.applyWidth(
                                            {
                                              paddingBottom: 22,
                                              paddingTop: 12,
                                            },
                                            dimensions.width
                                          )}
                                          showsVerticalScrollIndicator={false}
                                          bounces={true}
                                        >
                                          <View
                                            style={StyleSheet.applyWidth(
                                              {
                                                marginLeft: '4%',
                                                marginRight: '4%',
                                                marginTop: 6,
                                              },
                                              dimensions.width
                                            )}
                                          >
                                            {/* Leagues List */}
                                            <>
                                              {!mostProfitableLeaguesCompare(
                                                toggleMostProfitableItem
                                              ) ? null : (
                                                <FlatList
                                                  data={fetchData?.leagues}
                                                  listKey={'lOBG5rzW'}
                                                  keyExtractor={leaguesListData =>
                                                    leaguesListData?.id ||
                                                    leaguesListData?.uuid ||
                                                    JSON.stringify(
                                                      leaguesListData
                                                    )
                                                  }
                                                  renderItem={({ item }) => {
                                                    const leaguesListData =
                                                      item;
                                                    return (
                                                      <Surface
                                                        style={StyleSheet.applyWidth(
                                                          {
                                                            backgroundColor:
                                                              theme.colors
                                                                .divider,
                                                            borderRadius: 8,
                                                            marginBottom: 6,
                                                            paddingBottom: 12,
                                                            paddingLeft: 12,
                                                            paddingRight: 12,
                                                            paddingTop: 12,
                                                          },
                                                          dimensions.width
                                                        )}
                                                        elevation={1}
                                                      >
                                                        <View>
                                                          {/* Item */}
                                                          <Text
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                color:
                                                                  theme.colors
                                                                    .backgroundInverseMainFont,
                                                                fontFamily:
                                                                  'System',
                                                                fontSize: 16,
                                                                fontWeight:
                                                                  '700',
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            {
                                                              leaguesListData?.name
                                                            }
                                                          </Text>
                                                        </View>

                                                        <View
                                                          style={StyleSheet.applyWidth(
                                                            {
                                                              alignItems:
                                                                'flex-end',
                                                              backgroundColor:
                                                                theme.colors
                                                                  .divider,
                                                              borderRadius: 6,
                                                              flexDirection:
                                                                'row',
                                                              justifyContent:
                                                                'space-between',
                                                            },
                                                            dimensions.width
                                                          )}
                                                        >
                                                          <View
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                alignItems:
                                                                  'flex-start',
                                                                width: '60%',
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            {/* + Net Profit and Units */}
                                                            <>
                                                              {!valuePositive(
                                                                leaguesListData?.netProfit
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .good,
                                                                      fontFamily:
                                                                        'System',
                                                                      fontSize: 20,
                                                                      fontWeight:
                                                                        '700',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {netProfitSuffix(
                                                                    leaguesListData?.netProfit
                                                                  )}{' '}
                                                                  {unitSyntax(
                                                                    leaguesListData?.netProfit
                                                                  )}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* - Net Profit and Units */}
                                                            <>
                                                              {!valueNegative(
                                                                leaguesListData?.netProfit
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .badErrorCancel,
                                                                      fontFamily:
                                                                        'System',
                                                                      fontSize: 20,
                                                                      fontWeight:
                                                                        '700',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {netProfitSuffix(
                                                                    leaguesListData?.netProfit
                                                                  )}{' '}
                                                                  {unitSyntax(
                                                                    leaguesListData?.netProfit
                                                                  )}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* (Neut) Net Profit and Units */}
                                                            <>
                                                              {!valueNeutral(
                                                                leaguesListData?.netProfit
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .backgroundInverseMainFont,
                                                                      fontFamily:
                                                                        'System',
                                                                      fontSize: 20,
                                                                      fontWeight:
                                                                        '700',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {netProfitSuffix(
                                                                    leaguesListData?.netProfit
                                                                  )}{' '}
                                                                  {unitSyntax(
                                                                    leaguesListData?.netProfit
                                                                  )}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* Amount Won + */}
                                                            <>
                                                              {!valuePositive(
                                                                leaguesListData?.winnings
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .good,
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {'+'}
                                                                  {netProfitSuffix(
                                                                    leaguesListData?.winnings
                                                                  )}
                                                                  {' Won'}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* Amount Won - */}
                                                            <>
                                                              {!valueNegative(
                                                                leaguesListData?.winnings
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .badErrorCancel,
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {netProfitSuffix(
                                                                    leaguesListData?.winnings
                                                                  )}
                                                                  {' Won'}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* Amount Won (Neut) */}
                                                            <>
                                                              {!valueNeutral(
                                                                leaguesListData?.winnings
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .backgroundInverseMainFont,
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {netProfitSuffix(
                                                                    leaguesListData?.winnings
                                                                  )}
                                                                  {' Won'}
                                                                </Text>
                                                              )}
                                                            </>
                                                          </View>

                                                          <View
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                alignItems:
                                                                  'flex-end',
                                                                justifyContent:
                                                                  'flex-end',
                                                                width: '37%',
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            {/* ROI + */}
                                                            <>
                                                              {!valuePositive(
                                                                leaguesListData?.roi
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .good,
                                                                      fontFamily:
                                                                        'System',
                                                                      fontSize: 14,
                                                                      fontWeight:
                                                                        '400',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {roiSyntax(
                                                                    leaguesListData?.roi
                                                                  )}
                                                                  {' ROI'}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* ROI - */}
                                                            <>
                                                              {!valueNegative(
                                                                leaguesListData?.roi
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .badErrorCancel,
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {roiSyntax(
                                                                    leaguesListData?.roi
                                                                  )}
                                                                  {' ROI'}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* ROI (Neut) */}
                                                            <>
                                                              {!valueNeutral(
                                                                leaguesListData?.roi
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .backgroundInverseMainFont,
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {roiSyntax(
                                                                    leaguesListData?.roi
                                                                  )}
                                                                  {' ROI'}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* Record and Percentage */}
                                                            <Text
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  color:
                                                                    theme.colors
                                                                      .lightLowImportanceText,
                                                                },
                                                                dimensions.width
                                                              )}
                                                            >
                                                              {
                                                                leaguesListData?.wins
                                                              }
                                                              {'-'}
                                                              {
                                                                leaguesListData?.losses
                                                              }
                                                              {'-'}
                                                              {
                                                                leaguesListData?.pushes
                                                              }{' '}
                                                              {winPercentageSyntax(
                                                                leaguesListData?.recordPercentage
                                                              )}
                                                            </Text>
                                                          </View>
                                                        </View>
                                                      </Surface>
                                                    );
                                                  }}
                                                  contentContainerStyle={StyleSheet.applyWidth(
                                                    { flex: 1 },
                                                    dimensions.width
                                                  )}
                                                  numColumns={1}
                                                />
                                              )}
                                            </>
                                            {/* Teams List */}
                                            <>
                                              {!mostProfitableTeamsCompare(
                                                toggleMostProfitableItem
                                              ) ? null : (
                                                <FlatList
                                                  data={fetchData?.teams}
                                                  listKey={'JiZv2JOu'}
                                                  keyExtractor={teamsListData =>
                                                    teamsListData?.id ||
                                                    teamsListData?.uuid ||
                                                    JSON.stringify(
                                                      teamsListData
                                                    )
                                                  }
                                                  renderItem={({ item }) => {
                                                    const teamsListData = item;
                                                    return (
                                                      <Surface
                                                        style={StyleSheet.applyWidth(
                                                          {
                                                            backgroundColor:
                                                              theme.colors
                                                                .divider,
                                                            borderRadius: 8,
                                                            marginBottom: 6,
                                                            paddingBottom: 12,
                                                            paddingLeft: 12,
                                                            paddingRight: 12,
                                                            paddingTop: 12,
                                                          },
                                                          dimensions.width
                                                        )}
                                                        elevation={1}
                                                      >
                                                        <View>
                                                          <Text
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                color:
                                                                  theme.colors
                                                                    .backgroundInverseMainFont,
                                                                fontFamily:
                                                                  'System',
                                                                fontSize: 16,
                                                                fontWeight:
                                                                  '700',
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            {
                                                              teamsListData?.name
                                                            }
                                                          </Text>
                                                        </View>

                                                        <View
                                                          style={StyleSheet.applyWidth(
                                                            {
                                                              alignItems:
                                                                'flex-end',
                                                              flexDirection:
                                                                'row',
                                                              justifyContent:
                                                                'space-between',
                                                            },
                                                            dimensions.width
                                                          )}
                                                        >
                                                          <View
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                alignItems:
                                                                  'flex-start',
                                                                width: '60%',
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            {/* + Net Profit and Units */}
                                                            <>
                                                              {!valuePositive(
                                                                teamsListData?.netProfit
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .good,
                                                                      fontFamily:
                                                                        'System',
                                                                      fontSize: 20,
                                                                      fontWeight:
                                                                        '700',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {netProfitSuffix(
                                                                    teamsListData?.netProfit
                                                                  )}{' '}
                                                                  {unitSyntax(
                                                                    teamsListData?.netProfit
                                                                  )}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* - Net Profit and Units */}
                                                            <>
                                                              {!valueNegative(
                                                                teamsListData?.netProfit
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .badErrorCancel,
                                                                      fontFamily:
                                                                        'System',
                                                                      fontSize: 20,
                                                                      fontWeight:
                                                                        '700',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {netProfitSuffix(
                                                                    teamsListData?.netProfit
                                                                  )}{' '}
                                                                  {unitSyntax(
                                                                    teamsListData?.netProfit
                                                                  )}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* (Neut) Net Profit and Units */}
                                                            <>
                                                              {!valueNeutral(
                                                                teamsListData?.netProfit
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .backgroundInverseMainFont,
                                                                      fontFamily:
                                                                        'System',
                                                                      fontSize: 20,
                                                                      fontWeight:
                                                                        '700',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {netProfitSuffix(
                                                                    teamsListData?.netProfit
                                                                  )}{' '}
                                                                  {unitSyntax(
                                                                    teamsListData?.netProfit
                                                                  )}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* Amount Won + */}
                                                            <>
                                                              {!valuePositive(
                                                                teamsListData?.winnings
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .good,
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {'+'}
                                                                  {netProfitSuffix(
                                                                    teamsListData?.winnings
                                                                  )}
                                                                  {' Won'}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* Amount Won - */}
                                                            <>
                                                              {!valueNegative(
                                                                teamsListData?.winnings
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .badErrorCancel,
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {netProfitSuffix(
                                                                    teamsListData?.winnings
                                                                  )}
                                                                  {' Won'}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* Amount Won (Neut) */}
                                                            <>
                                                              {!valueNeutral(
                                                                teamsListData?.winnings
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .backgroundInverseMainFont,
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {netProfitSuffix(
                                                                    teamsListData?.winnings
                                                                  )}
                                                                  {' Won'}
                                                                </Text>
                                                              )}
                                                            </>
                                                          </View>

                                                          <View
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                alignItems:
                                                                  'flex-end',
                                                                justifyContent:
                                                                  'flex-end',
                                                                width: '37%',
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            {/* ROI + */}
                                                            <>
                                                              {!valuePositive(
                                                                teamsListData?.roi
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .good,
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {roiSyntax(
                                                                    teamsListData?.roi
                                                                  )}
                                                                  {' ROI'}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* ROI - */}
                                                            <>
                                                              {!valueNegative(
                                                                teamsListData?.roi
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .badErrorCancel,
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {roiSyntax(
                                                                    teamsListData?.roi
                                                                  )}
                                                                  {' ROI'}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* ROI (Neut) */}
                                                            <>
                                                              {!valueNeutral(
                                                                teamsListData?.roi
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .backgroundInverseMainFont,
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {roiSyntax(
                                                                    teamsListData?.roi
                                                                  )}
                                                                  {' ROI'}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* Record and Percentage */}
                                                            <Text
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  color:
                                                                    theme.colors
                                                                      .lightLowImportanceText,
                                                                },
                                                                dimensions.width
                                                              )}
                                                            >
                                                              {
                                                                teamsListData?.wins
                                                              }
                                                              {'-'}
                                                              {
                                                                teamsListData?.losses
                                                              }
                                                              {'-'}
                                                              {
                                                                teamsListData?.pushes
                                                              }{' '}
                                                              {winPercentageSyntax(
                                                                teamsListData?.recordPercentage
                                                              )}
                                                            </Text>
                                                          </View>
                                                        </View>
                                                      </Surface>
                                                    );
                                                  }}
                                                  contentContainerStyle={StyleSheet.applyWidth(
                                                    { flex: 1 },
                                                    dimensions.width
                                                  )}
                                                  numColumns={1}
                                                />
                                              )}
                                            </>
                                            {/* Bet Types List */}
                                            <>
                                              {!mostProfitableBetTypesCompare(
                                                toggleMostProfitableItem
                                              ) ? null : (
                                                <FlatList
                                                  data={fetchData?.betTypes}
                                                  listKey={'eCdrS334'}
                                                  keyExtractor={betTypesListData =>
                                                    betTypesListData?.id ||
                                                    betTypesListData?.uuid ||
                                                    JSON.stringify(
                                                      betTypesListData
                                                    )
                                                  }
                                                  renderItem={({ item }) => {
                                                    const betTypesListData =
                                                      item;
                                                    return (
                                                      <Surface
                                                        style={StyleSheet.applyWidth(
                                                          {
                                                            backgroundColor:
                                                              theme.colors
                                                                .divider,
                                                            borderRadius: 8,
                                                            marginBottom: 6,
                                                            paddingBottom: 12,
                                                            paddingLeft: 12,
                                                            paddingRight: 12,
                                                            paddingTop: 12,
                                                          },
                                                          dimensions.width
                                                        )}
                                                        elevation={1}
                                                      >
                                                        <View>
                                                          <Text
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                color:
                                                                  theme.colors
                                                                    .backgroundInverseMainFont,
                                                                fontFamily:
                                                                  'System',
                                                                fontSize: 16,
                                                                fontWeight:
                                                                  '700',
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            {capitalizeAllWords(
                                                              betTypesListData?.name
                                                            )}
                                                          </Text>
                                                        </View>

                                                        <View
                                                          style={StyleSheet.applyWidth(
                                                            {
                                                              alignItems:
                                                                'flex-end',
                                                              flexDirection:
                                                                'row',
                                                              justifyContent:
                                                                'space-between',
                                                            },
                                                            dimensions.width
                                                          )}
                                                        >
                                                          <View
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                alignItems:
                                                                  'flex-start',
                                                                width: '60%',
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            {/* + Net Profit and Units */}
                                                            <>
                                                              {!valuePositive(
                                                                betTypesListData?.netProfit
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .good,
                                                                      fontFamily:
                                                                        'System',
                                                                      fontSize: 20,
                                                                      fontWeight:
                                                                        '700',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {netProfitSuffix(
                                                                    betTypesListData?.netProfit
                                                                  )}{' '}
                                                                  {unitSyntax(
                                                                    betTypesListData?.netProfit
                                                                  )}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* - Net Profit and Units */}
                                                            <>
                                                              {!valueNegative(
                                                                betTypesListData?.netProfit
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .badErrorCancel,
                                                                      fontFamily:
                                                                        'System',
                                                                      fontSize: 20,
                                                                      fontWeight:
                                                                        '700',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {netProfitSuffix(
                                                                    betTypesListData?.netProfit
                                                                  )}{' '}
                                                                  {unitSyntax(
                                                                    betTypesListData?.netProfit
                                                                  )}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* (Neut) Net Profit and Units */}
                                                            <>
                                                              {!valueNeutral(
                                                                betTypesListData?.netProfit
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .backgroundInverseMainFont,
                                                                      fontFamily:
                                                                        'System',
                                                                      fontSize: 20,
                                                                      fontWeight:
                                                                        '700',
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {netProfitSuffix(
                                                                    betTypesListData?.netProfit
                                                                  )}{' '}
                                                                  {unitSyntax(
                                                                    betTypesListData?.netProfit
                                                                  )}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* Amount Won + */}
                                                            <>
                                                              {!valuePositive(
                                                                betTypesListData?.winnings
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .good,
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {'+'}
                                                                  {netProfitSuffix(
                                                                    betTypesListData?.winnings
                                                                  )}
                                                                  {' Won'}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* Amount Won - */}
                                                            <>
                                                              {!valueNegative(
                                                                betTypesListData?.winnings
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .badErrorCancel,
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {netProfitSuffix(
                                                                    betTypesListData?.winnings
                                                                  )}
                                                                  {' Won'}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* Amount Won (Neut) */}
                                                            <>
                                                              {!valueNeutral(
                                                                betTypesListData?.winnings
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .backgroundInverseMainFont,
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {netProfitSuffix(
                                                                    betTypesListData?.winnings
                                                                  )}
                                                                  {' Won'}
                                                                </Text>
                                                              )}
                                                            </>
                                                          </View>

                                                          <View
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                alignItems:
                                                                  'flex-end',
                                                                justifyContent:
                                                                  'flex-end',
                                                                width: '37%',
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            {/* ROI + */}
                                                            <>
                                                              {!valuePositive(
                                                                betTypesListData?.roi
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .good,
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {roiSyntax(
                                                                    betTypesListData?.roi
                                                                  )}
                                                                  {' ROI'}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* ROI - */}
                                                            <>
                                                              {!valueNegative(
                                                                betTypesListData?.roi
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .badErrorCancel,
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {roiSyntax(
                                                                    betTypesListData?.roi
                                                                  )}
                                                                  {' ROI'}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* ROI (Neut) */}
                                                            <>
                                                              {!valueNeutral(
                                                                betTypesListData?.roi
                                                              ) ? null : (
                                                                <Text
                                                                  style={StyleSheet.applyWidth(
                                                                    {
                                                                      color:
                                                                        theme
                                                                          .colors
                                                                          .backgroundInverseMainFont,
                                                                    },
                                                                    dimensions.width
                                                                  )}
                                                                >
                                                                  {roiSyntax(
                                                                    betTypesListData?.roi
                                                                  )}
                                                                  {' ROI'}
                                                                </Text>
                                                              )}
                                                            </>
                                                            {/* Record and Percentage */}
                                                            <Text
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  color:
                                                                    theme.colors
                                                                      .lightLowImportanceText,
                                                                },
                                                                dimensions.width
                                                              )}
                                                            >
                                                              {
                                                                betTypesListData?.wins
                                                              }
                                                              {'-'}
                                                              {
                                                                betTypesListData?.losses
                                                              }
                                                              {'-'}
                                                              {
                                                                betTypesListData?.pushes
                                                              }{' '}
                                                              {winPercentageSyntax(
                                                                betTypesListData?.recordPercentage
                                                              )}
                                                            </Text>
                                                          </View>
                                                        </View>
                                                      </Surface>
                                                    );
                                                  }}
                                                  contentContainerStyle={StyleSheet.applyWidth(
                                                    { flex: 1 },
                                                    dimensions.width
                                                  )}
                                                  numColumns={1}
                                                />
                                              )}
                                            </>
                                          </View>
                                        </ScrollView>
                                      </View>
                                    </Modal>
                                  </>
                                );
                              }}
                            </SwaggerAPIApi.FetchGetMostProfitableGET>
                          </View>
                          {/* Trends Section */}
                          <View>
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  marginLeft: '4%',
                                  marginRight: '4%',
                                  marginTop: 22,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color:
                                      theme.colors.backgroundInverseMainFont,
                                    fontFamily: 'System',
                                    fontSize: 20,
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Trends'}
                              </Text>
                            </View>

                            <SwaggerAPIApi.FetchSharpsports$GetTrendsGET
                              dummy={Constants['updatedSportsBook']}
                              internalId={Constants['internalId']}
                            >
                              {({
                                loading,
                                error,
                                data,
                                refetchSharpsports$GetTrends,
                              }) => {
                                const fetchData = data;
                                if (!fetchData || loading) {
                                  return <ActivityIndicator />;
                                }

                                if (error) {
                                  return (
                                    <Text style={{ textAlign: 'center' }}>
                                      There was a problem fetching this data
                                    </Text>
                                  );
                                }

                                return (
                                  <View
                                    style={StyleSheet.applyWidth(
                                      { marginTop: 4 },
                                      dimensions.width
                                    )}
                                  >
                                    <ScrollView
                                      contentContainerStyle={StyleSheet.applyWidth(
                                        {
                                          marginTop: 6,
                                          paddingBottom: 6,
                                          paddingLeft: '4%',
                                        },
                                        dimensions.width
                                      )}
                                      showsVerticalScrollIndicator={false}
                                      bounces={true}
                                      horizontal={true}
                                      showsHorizontalScrollIndicator={false}
                                    >
                                      <FlatList
                                        data={fetchData}
                                        listKey={'GgAPTmtb'}
                                        keyExtractor={listData =>
                                          listData?.id ||
                                          listData?.uuid ||
                                          JSON.stringify(listData)
                                        }
                                        renderItem={({ item }) => {
                                          const listData = item;
                                          return (
                                            <>
                                              {/* Trend Block */}
                                              <View
                                                style={StyleSheet.applyWidth(
                                                  {
                                                    marginRight: 12,
                                                    maxWidth: 250,
                                                    minHeight: 50,
                                                  },
                                                  dimensions.width
                                                )}
                                              >
                                                <Surface
                                                  style={StyleSheet.applyWidth(
                                                    {
                                                      backgroundColor:
                                                        theme.colors.background,
                                                      borderRadius: 8,
                                                      flex: 1,
                                                      maxWidth: 250,
                                                    },
                                                    dimensions.width
                                                  )}
                                                  elevation={1}
                                                >
                                                  {/* Notice Trends Block */}
                                                  <>
                                                    {trendPositive(
                                                      listData?.winPerc
                                                    ) ? null : (
                                                      <View
                                                        style={StyleSheet.applyWidth(
                                                          {
                                                            backgroundColor:
                                                              theme.colors
                                                                .divider,
                                                            borderBottomWidth: 2,
                                                            borderColor:
                                                              theme.colors.fair,
                                                            borderLeftWidth: 2,
                                                            borderRadius: 8,
                                                            borderRightWidth: 2,
                                                            borderTopWidth: 2,
                                                            flexDirection:
                                                              'row',
                                                            height: '100%',
                                                            paddingBottom: 12,
                                                            paddingLeft: 12,
                                                            paddingRight: 12,
                                                            paddingTop: 12,
                                                            width: 250,
                                                          },
                                                          dimensions.width
                                                        )}
                                                      >
                                                        <View
                                                          style={StyleSheet.applyWidth(
                                                            {
                                                              alignItems:
                                                                'flex-start',
                                                              justifyContent:
                                                                'center',
                                                            },
                                                            dimensions.width
                                                          )}
                                                        >
                                                          <View
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                alignContent:
                                                                  'center',
                                                                alignItems:
                                                                  'center',
                                                                flexDirection:
                                                                  'row',
                                                                marginBottom: 10,
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            {/* Notice */}
                                                            <Icon
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  marginRight: 6,
                                                                },
                                                                dimensions.width
                                                              )}
                                                              name={
                                                                'Ionicons/ios-warning'
                                                              }
                                                              size={24}
                                                              color={
                                                                theme.colors
                                                                  .fair
                                                              }
                                                            />
                                                            <Text
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  color:
                                                                    theme.colors
                                                                      .fair,
                                                                  fontFamily:
                                                                    'System',
                                                                  fontSize: 16,
                                                                  fontWeight:
                                                                    '700',
                                                                },
                                                                dimensions.width
                                                              )}
                                                            >
                                                              {'Notice'}
                                                            </Text>
                                                          </View>

                                                          <View
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                alignItems:
                                                                  'flex-start',
                                                                flex: 1,
                                                                marginBottom: 10,
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            <Text
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  color:
                                                                    theme.colors
                                                                      .backgroundInverseMainFont,
                                                                  fontFamily:
                                                                    'System',
                                                                  fontSize: 12,
                                                                  fontWeight:
                                                                    '600',
                                                                  textAlign:
                                                                    'left',
                                                                },
                                                                dimensions.width
                                                              )}
                                                              ellipsizeMode={
                                                                'tail'
                                                              }
                                                              numberOfLines={3}
                                                            >
                                                              {'You are '}
                                                              {listData?.wins}
                                                              {'-'}
                                                              {listData?.losses}
                                                              {'-'}
                                                              {
                                                                listData?.pushes
                                                              }{' '}
                                                              {winPercentageSyntax(
                                                                listData?.winPerc
                                                              )}
                                                              {
                                                                ' when betting on the '
                                                              }
                                                              {listData?.proposition?.toLowerCase()}
                                                              {' when the '}
                                                              {listData?.team}
                                                              {' are the '}
                                                              {listData?.side?.toLowerCase()}
                                                              {'.'}
                                                            </Text>
                                                          </View>

                                                          <View
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                flexDirection:
                                                                  'row',
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            <Text
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  color:
                                                                    theme.colors
                                                                      .fair,
                                                                  fontSize: 12,
                                                                },
                                                                dimensions.width
                                                              )}
                                                            >
                                                              {listData?.wins}
                                                              {'-'}
                                                              {listData?.losses}
                                                              {'-'}
                                                              {
                                                                listData?.pushes
                                                              }{' '}
                                                              {winPercentageSyntax(
                                                                listData?.winPerc
                                                              )}
                                                            </Text>
                                                          </View>
                                                        </View>
                                                      </View>
                                                    )}
                                                  </>
                                                  {/* Opportunity Trends Block */}
                                                  <>
                                                    {!trendPositive(
                                                      listData?.winPerc
                                                    ) ? null : (
                                                      <View
                                                        style={StyleSheet.applyWidth(
                                                          {
                                                            backgroundColor:
                                                              theme.colors
                                                                .divider,
                                                            borderBottomWidth: 2,
                                                            borderColor:
                                                              theme.colors.good,
                                                            borderLeftWidth: 2,
                                                            borderRadius: 8,
                                                            borderRightWidth: 2,
                                                            borderTopWidth: 2,
                                                            flexDirection:
                                                              'row',
                                                            height: '100%',
                                                            paddingBottom: 12,
                                                            paddingLeft: 12,
                                                            paddingRight: 12,
                                                            paddingTop: 12,
                                                            width: 250,
                                                          },
                                                          dimensions.width
                                                        )}
                                                      >
                                                        <View
                                                          style={StyleSheet.applyWidth(
                                                            {
                                                              alignItems:
                                                                'flex-start',
                                                              justifyContent:
                                                                'center',
                                                            },
                                                            dimensions.width
                                                          )}
                                                        >
                                                          <View
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                alignContent:
                                                                  'center',
                                                                alignItems:
                                                                  'center',
                                                                flexDirection:
                                                                  'row',
                                                                marginBottom: 10,
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            {/* Opportunity */}
                                                            <Icon
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  marginRight: 6,
                                                                },
                                                                dimensions.width
                                                              )}
                                                              name={
                                                                'MaterialCommunityIcons/thumb-up'
                                                              }
                                                              size={24}
                                                              color={
                                                                theme.colors
                                                                  .good
                                                              }
                                                            />
                                                            <Text
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  color:
                                                                    theme.colors
                                                                      .good,
                                                                  fontFamily:
                                                                    'System',
                                                                  fontSize: 16,
                                                                  fontWeight:
                                                                    '700',
                                                                },
                                                                dimensions.width
                                                              )}
                                                            >
                                                              {'Opportunity'}
                                                            </Text>
                                                          </View>

                                                          <View
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                alignItems:
                                                                  'flex-start',
                                                                flex: 1,
                                                                marginBottom: 10,
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            <Text
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  color:
                                                                    theme.colors
                                                                      .backgroundInverseMainFont,
                                                                  fontFamily:
                                                                    'System',
                                                                  fontSize: 12,
                                                                  fontWeight:
                                                                    '600',
                                                                  textAlign:
                                                                    'left',
                                                                },
                                                                dimensions.width
                                                              )}
                                                              ellipsizeMode={
                                                                'tail'
                                                              }
                                                              numberOfLines={3}
                                                            >
                                                              {'You are '}
                                                              {listData?.wins}
                                                              {'-'}
                                                              {listData?.losses}
                                                              {'-'}
                                                              {
                                                                listData?.pushes
                                                              }{' '}
                                                              {winPercentageSyntax(
                                                                listData?.winPerc
                                                              )}
                                                              {
                                                                ' when betting on the '
                                                              }
                                                              {listData?.proposition?.toLowerCase()}
                                                              {' when the '}
                                                              {listData?.team}
                                                              {' are the '}
                                                              {listData?.side?.toLowerCase()}
                                                              {'.'}
                                                            </Text>
                                                          </View>

                                                          <View
                                                            style={StyleSheet.applyWidth(
                                                              {
                                                                flexDirection:
                                                                  'row',
                                                              },
                                                              dimensions.width
                                                            )}
                                                          >
                                                            <Text
                                                              style={StyleSheet.applyWidth(
                                                                {
                                                                  color:
                                                                    theme.colors
                                                                      .good,
                                                                  fontSize: 12,
                                                                },
                                                                dimensions.width
                                                              )}
                                                            >
                                                              {listData?.wins}
                                                              {'-'}
                                                              {listData?.losses}
                                                              {'-'}
                                                              {
                                                                listData?.pushes
                                                              }{' '}
                                                              {winPercentageSyntax(
                                                                listData?.winPerc
                                                              )}
                                                            </Text>
                                                          </View>
                                                        </View>
                                                      </View>
                                                    )}
                                                  </>
                                                </Surface>
                                              </View>
                                            </>
                                          );
                                        }}
                                        contentContainerStyle={StyleSheet.applyWidth(
                                          { flex: 1 },
                                          dimensions.width
                                        )}
                                        numColumns={1}
                                        horizontal={true}
                                      />
                                    </ScrollView>
                                  </View>
                                );
                              }}
                            </SwaggerAPIApi.FetchSharpsports$GetTrendsGET>
                          </View>
                          {/* Grades Section */}
                          <View>
                            <View>
                              {/* Title */}
                              <View
                                style={StyleSheet.applyWidth(
                                  {
                                    alignItems: 'center',
                                    flexDirection: 'row',
                                    marginLeft: '4%',
                                    marginRight: 4,
                                    marginTop: 22,
                                  },
                                  dimensions.width
                                )}
                              >
                                <Text
                                  style={StyleSheet.applyWidth(
                                    {
                                      color:
                                        theme.colors.backgroundInverseMainFont,
                                      fontFamily: 'System',
                                      fontSize: 20,
                                      fontWeight: '700',
                                    },
                                    dimensions.width
                                  )}
                                >
                                  {'Grades'}
                                </Text>
                              </View>
                            </View>

                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  marginLeft: '4%',
                                  marginRight: '4%',
                                  marginTop: 10,
                                },
                                dimensions.width
                              )}
                            >
                              <Surface
                                style={StyleSheet.applyWidth(
                                  {
                                    backgroundColor: theme.colors.divider,
                                    borderRadius: 8,
                                  },
                                  dimensions.width
                                )}
                                elevation={1}
                              >
                                {/* Grades Block */}
                                <View
                                  style={StyleSheet.applyWidth(
                                    {
                                      backgroundColor: theme.colors.divider,
                                      borderBottomWidth: 1,
                                      borderColor: theme.colors.divider,
                                      borderLeftWidth: 1,
                                      borderRadius: 8,
                                      borderRightWidth: 1,
                                      borderTopWidth: 1,
                                      paddingBottom: 12,
                                      paddingLeft: 24,
                                      paddingRight: 24,
                                      paddingTop: 12,
                                    },
                                    dimensions.width
                                  )}
                                >
                                  <View>
                                    {/* Fetch Below */}
                                    <View
                                      style={StyleSheet.applyWidth(
                                        {
                                          alignItems: 'center',
                                          flexDirection: 'row',
                                          height: 52,
                                          justifyContent: 'center',
                                        },
                                        dimensions.width
                                      )}
                                    >
                                      <SwaggerAPIApi.FetchGradesGET
                                        dummy={Constants['updatedSportsBook']}
                                        id={Constants['internalId']}
                                      >
                                        {({
                                          loading,
                                          error,
                                          data,
                                          refetchGrades,
                                        }) => {
                                          const fetchData = data;
                                          if (!fetchData || loading) {
                                            return <ActivityIndicator />;
                                          }

                                          if (error) {
                                            return (
                                              <Text
                                                style={{ textAlign: 'center' }}
                                              >
                                                There was a problem fetching
                                                this data
                                              </Text>
                                            );
                                          }

                                          return (
                                            <View
                                              style={StyleSheet.applyWidth(
                                                {
                                                  flexDirection: 'row',
                                                  justifyContent:
                                                    'space-around',
                                                  width: '100%',
                                                },
                                                dimensions.width
                                              )}
                                            >
                                              <Touchable
                                                onPress={() => {
                                                  try {
                                                    setSendGrade(
                                                      fetchData?.unitSizeConsistency
                                                    );
                                                    setSendGradeType(
                                                      'unitSizeConsistency'
                                                    );
                                                    setGlobalVariableValue({
                                                      key: 'toggleGradesModal',
                                                      value: true,
                                                    });
                                                    segmentLogTrack(
                                                      segment,
                                                      'Unit Size Consistency grade opened',
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined
                                                    );
                                                  } catch (err) {
                                                    console.error(err);
                                                  }
                                                }}
                                              >
                                                <View
                                                  style={StyleSheet.applyWidth(
                                                    {
                                                      alignItems: 'center',
                                                      height: 52,
                                                      justifyContent: 'center',
                                                      width: 75,
                                                    },
                                                    dimensions.width
                                                  )}
                                                >
                                                  <>
                                                    {!gradeColorGood(
                                                      fetchData?.unitSizeConsistency
                                                    ) ? null : (
                                                      <Text
                                                        style={StyleSheet.applyWidth(
                                                          {
                                                            color:
                                                              theme.colors.good,
                                                            fontSize: 40,
                                                            textAlign: 'center',
                                                          },
                                                          dimensions.width
                                                        )}
                                                      >
                                                        {gradeSyntax(
                                                          fetchData?.unitSizeConsistency
                                                        )}
                                                      </Text>
                                                    )}
                                                  </>
                                                  <>
                                                    {!gradeColorFair(
                                                      fetchData?.unitSizeConsistency
                                                    ) ? null : (
                                                      <Text
                                                        style={StyleSheet.applyWidth(
                                                          {
                                                            color:
                                                              theme.colors.fair,
                                                            fontSize: 40,
                                                            textAlign: 'center',
                                                          },
                                                          dimensions.width
                                                        )}
                                                      >
                                                        {gradeSyntax(
                                                          fetchData?.unitSizeConsistency
                                                        )}
                                                      </Text>
                                                    )}
                                                  </>
                                                  <>
                                                    {!gradeColorPoor(
                                                      fetchData?.unitSizeConsistency
                                                    ) ? null : (
                                                      <Text
                                                        style={StyleSheet.applyWidth(
                                                          {
                                                            color:
                                                              theme.colors
                                                                .notUsed,
                                                            fontSize: 40,
                                                            textAlign: 'center',
                                                          },
                                                          dimensions.width
                                                        )}
                                                      >
                                                        {gradeSyntax(
                                                          fetchData?.unitSizeConsistency
                                                        )}
                                                      </Text>
                                                    )}
                                                  </>
                                                  <>
                                                    {!gradeColorBad(
                                                      fetchData?.unitSizeConsistency
                                                    ) ? null : (
                                                      <Text
                                                        style={StyleSheet.applyWidth(
                                                          {
                                                            color:
                                                              theme.colors
                                                                .badErrorCancel,
                                                            fontSize: 40,
                                                            textAlign: 'center',
                                                          },
                                                          dimensions.width
                                                        )}
                                                      >
                                                        {gradeSyntax(
                                                          fetchData?.unitSizeConsistency
                                                        )}
                                                      </Text>
                                                    )}
                                                  </>
                                                </View>
                                              </Touchable>

                                              <Touchable
                                                onPress={() => {
                                                  try {
                                                    setSendGrade(
                                                      fetchData?.trapAvoidance
                                                    );
                                                    setSendGradeType(
                                                      'trapAvoidance'
                                                    );
                                                    setGlobalVariableValue({
                                                      key: 'toggleGradesModal',
                                                      value: true,
                                                    });
                                                    segmentLogTrack(
                                                      segment,
                                                      'Trap avoidance grade opened',
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined,
                                                      undefined
                                                    );
                                                  } catch (err) {
                                                    console.error(err);
                                                  }
                                                }}
                                              >
                                                <View
                                                  style={StyleSheet.applyWidth(
                                                    {
                                                      alignItems: 'center',
                                                      height: 52,
                                                      justifyContent: 'center',
                                                      width: 75,
                                                    },
                                                    dimensions.width
                                                  )}
                                                >
                                                  <>
                                                    {!gradeColorGood(
                                                      fetchData?.trapAvoidance
                                                    ) ? null : (
                                                      <Text
                                                        style={StyleSheet.applyWidth(
                                                          {
                                                            color:
                                                              theme.colors.good,
                                                            fontSize: 40,
                                                            textAlign: 'center',
                                                          },
                                                          dimensions.width
                                                        )}
                                                      >
                                                        {gradeSyntax(
                                                          fetchData?.trapAvoidance
                                                        )}
                                                      </Text>
                                                    )}
                                                  </>
                                                  <>
                                                    {!gradeColorFair(
                                                      fetchData?.trapAvoidance
                                                    ) ? null : (
                                                      <Text
                                                        style={StyleSheet.applyWidth(
                                                          {
                                                            color:
                                                              theme.colors.fair,
                                                            fontSize: 40,
                                                            textAlign: 'center',
                                                          },
                                                          dimensions.width
                                                        )}
                                                      >
                                                        {gradeSyntax(
                                                          fetchData?.trapAvoidance
                                                        )}
                                                      </Text>
                                                    )}
                                                  </>
                                                  <>
                                                    {!gradeColorPoor(
                                                      fetchData?.trapAvoidance
                                                    ) ? null : (
                                                      <Text
                                                        style={StyleSheet.applyWidth(
                                                          {
                                                            color:
                                                              theme.colors
                                                                .notUsed,
                                                            fontSize: 40,
                                                            textAlign: 'center',
                                                          },
                                                          dimensions.width
                                                        )}
                                                      >
                                                        {gradeSyntax(
                                                          fetchData?.trapAvoidance
                                                        )}
                                                      </Text>
                                                    )}
                                                  </>
                                                  <>
                                                    {!gradeColorBad(
                                                      fetchData?.trapAvoidance
                                                    ) ? null : (
                                                      <Text
                                                        style={StyleSheet.applyWidth(
                                                          {
                                                            color:
                                                              theme.colors
                                                                .badErrorCancel,
                                                            fontSize: 40,
                                                            textAlign: 'center',
                                                          },
                                                          dimensions.width
                                                        )}
                                                      >
                                                        {gradeSyntax(
                                                          fetchData?.trapAvoidance
                                                        )}
                                                      </Text>
                                                    )}
                                                  </>
                                                </View>
                                              </Touchable>
                                            </View>
                                          );
                                        }}
                                      </SwaggerAPIApi.FetchGradesGET>
                                    </View>

                                    <View
                                      style={StyleSheet.applyWidth(
                                        {
                                          alignItems: 'center',
                                          flexDirection: 'row',
                                          justifyContent: 'space-around',
                                          marginTop: 8,
                                        },
                                        dimensions.width
                                      )}
                                    >
                                      <View
                                        style={StyleSheet.applyWidth(
                                          {
                                            alignItems: 'center',
                                            justifyContent: 'center',
                                            width: 80,
                                          },
                                          dimensions.width
                                        )}
                                      >
                                        <Text
                                          style={StyleSheet.applyWidth(
                                            {
                                              color:
                                                theme.colors
                                                  .lightLowImportanceText,
                                              fontSize: 11,
                                              textAlign: 'center',
                                            },
                                            dimensions.width
                                          )}
                                        >
                                          {'Unit Size Consistency'}
                                        </Text>
                                      </View>

                                      <View
                                        style={StyleSheet.applyWidth(
                                          {
                                            alignItems: 'center',
                                            justifyContent: 'center',
                                            width: 80,
                                          },
                                          dimensions.width
                                        )}
                                      >
                                        <Text
                                          style={StyleSheet.applyWidth(
                                            {
                                              color:
                                                theme.colors
                                                  .lightLowImportanceText,
                                              fontSize: 11,
                                              textAlign: 'center',
                                            },
                                            dimensions.width
                                          )}
                                        >
                                          {'Trap Avoidance'}
                                        </Text>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                              </Surface>
                            </View>
                          </View>
                          {/* Promotions Section */}
                          <View>
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  paddingLeft: '4%',
                                  paddingRight: '4%',
                                  paddingTop: 28,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color:
                                      theme.colors.backgroundInverseMainFont,
                                    fontFamily: 'System',
                                    fontSize: 20,
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Promotions'}
                              </Text>
                            </View>

                            <View
                              style={StyleSheet.applyWidth(
                                { marginBottom: 28, marginTop: 4 },
                                dimensions.width
                              )}
                            >
                              <ScrollView
                                contentContainerStyle={StyleSheet.applyWidth(
                                  {
                                    marginTop: 6,
                                    paddingBottom: 6,
                                    paddingLeft: '4%',
                                  },
                                  dimensions.width
                                )}
                                showsVerticalScrollIndicator={false}
                                bounces={true}
                                horizontal={true}
                                showsHorizontalScrollIndicator={false}
                              >
                                {/* PrizePicks */}
                                <View
                                  style={StyleSheet.applyWidth(
                                    {
                                      borderRadius: 8,
                                      flexDirection: 'row',
                                      marginRight: 12,
                                    },
                                    dimensions.width
                                  )}
                                >
                                  <Touchable
                                    onPress={() => {
                                      const handler = async () => {
                                        try {
                                          await WebBrowser.openBrowserAsync(
                                            'https://app.prizepicks.com/sign-up?invite_code=VAULT'
                                          );
                                          segmentLogTrack(
                                            segment,
                                            'PrizePicks promo clicked',
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined
                                          );
                                        } catch (err) {
                                          console.error(err);
                                        }
                                      };
                                      handler();
                                    }}
                                    style={StyleSheet.applyWidth(
                                      {
                                        borderRadius: 8,
                                        height: 300,
                                        width: 300,
                                      },
                                      dimensions.width
                                    )}
                                  >
                                    <Surface
                                      style={StyleSheet.applyWidth(
                                        {
                                          backgroundColor: theme.colors.divider,
                                          borderRadius: 8,
                                          flex: 1,
                                          height: 300,
                                          width: 300,
                                        },
                                        dimensions.width
                                      )}
                                    >
                                      <View
                                        style={StyleSheet.applyWidth(
                                          {
                                            borderRadius: 8,
                                            height: 300,
                                            overflow: 'hidden',
                                            width: 300,
                                          },
                                          dimensions.width
                                        )}
                                      >
                                        <Image
                                          style={StyleSheet.applyWidth(
                                            { height: 300, width: 300 },
                                            dimensions.width
                                          )}
                                          resizeMode={'cover'}
                                          source={Images.PrizePicksSquare}
                                        />
                                      </View>
                                    </Surface>
                                  </Touchable>
                                </View>
                                {/* BetMGM */}
                                <View
                                  style={StyleSheet.applyWidth(
                                    {
                                      borderRadius: 8,
                                      flexDirection: 'row',
                                      marginRight: 12,
                                    },
                                    dimensions.width
                                  )}
                                >
                                  <Touchable
                                    onPress={() => {
                                      const handler = async () => {
                                        try {
                                          await WebBrowser.openBrowserAsync(
                                            'https://mediaserver.betmgmpartners.com/renderBanner.do?zoneId=1666694'
                                          );
                                          segmentLogTrack(
                                            segment,
                                            'BetMGM promo clicked',
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined
                                          );
                                        } catch (err) {
                                          console.error(err);
                                        }
                                      };
                                      handler();
                                    }}
                                    style={StyleSheet.applyWidth(
                                      {
                                        borderRadius: 8,
                                        height: 300,
                                        width: 300,
                                      },
                                      dimensions.width
                                    )}
                                  >
                                    <Surface
                                      style={StyleSheet.applyWidth(
                                        {
                                          backgroundColor: theme.colors.divider,
                                          borderRadius: 8,
                                          flex: 1,
                                          height: 300,
                                          width: 300,
                                        },
                                        dimensions.width
                                      )}
                                    >
                                      <View
                                        style={StyleSheet.applyWidth(
                                          {
                                            borderRadius: 8,
                                            height: 300,
                                            overflow: 'hidden',
                                            width: 300,
                                          },
                                          dimensions.width
                                        )}
                                      >
                                        <Image
                                          style={StyleSheet.applyWidth(
                                            { height: 300, width: 300 },
                                            dimensions.width
                                          )}
                                          source={Images.BetMGMSquare}
                                          resizeMode={'cover'}
                                        />
                                      </View>
                                    </Surface>
                                  </Touchable>
                                </View>
                                {/* Unibet */}
                                <View
                                  style={StyleSheet.applyWidth(
                                    {
                                      borderRadius: 8,
                                      flexDirection: 'row',
                                      marginRight: 12,
                                    },
                                    dimensions.width
                                  )}
                                >
                                  <Touchable
                                    onPress={() => {
                                      const handler = async () => {
                                        try {
                                          await WebBrowser.openBrowserAsync(
                                            'https://wlkindred.adsrv.eacdn.com/C.ashx?btag=a_2165b_334c_&affid=76&siteid=2165&adid=334&c=[acid]'
                                          );
                                          segmentLogTrack(
                                            segment,
                                            'Unibet promo clicked',
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined
                                          );
                                        } catch (err) {
                                          console.error(err);
                                        }
                                      };
                                      handler();
                                    }}
                                    style={StyleSheet.applyWidth(
                                      {
                                        borderRadius: 8,
                                        height: 300,
                                        width: 300,
                                      },
                                      dimensions.width
                                    )}
                                  >
                                    <Surface
                                      style={StyleSheet.applyWidth(
                                        {
                                          backgroundColor: theme.colors.divider,
                                          borderRadius: 8,
                                          flex: 1,
                                          height: 300,
                                          width: 300,
                                        },
                                        dimensions.width
                                      )}
                                    >
                                      <View
                                        style={StyleSheet.applyWidth(
                                          {
                                            borderRadius: 8,
                                            height: 300,
                                            overflow: 'hidden',
                                            width: 300,
                                          },
                                          dimensions.width
                                        )}
                                      >
                                        <Image
                                          style={StyleSheet.applyWidth(
                                            { height: 300, width: 300 },
                                            dimensions.width
                                          )}
                                          source={Images.UnibetSquare}
                                          resizeMode={'cover'}
                                        />
                                      </View>
                                    </Surface>
                                  </Touchable>
                                </View>
                                {/* Underdog */}
                                <View
                                  style={StyleSheet.applyWidth(
                                    {
                                      borderRadius: 8,
                                      flexDirection: 'row',
                                      marginRight: 12,
                                    },
                                    dimensions.width
                                  )}
                                >
                                  <Touchable
                                    onPress={() => {
                                      const handler = async () => {
                                        try {
                                          await WebBrowser.openBrowserAsync(
                                            'https://play.underdogfantasy.com/p-vault'
                                          );
                                          segmentLogTrack(
                                            segment,
                                            'Underdog Fantasy promo clicked',
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined
                                          );
                                        } catch (err) {
                                          console.error(err);
                                        }
                                      };
                                      handler();
                                    }}
                                    style={StyleSheet.applyWidth(
                                      {
                                        borderRadius: 8,
                                        height: 300,
                                        width: 300,
                                      },
                                      dimensions.width
                                    )}
                                  >
                                    <Surface
                                      style={StyleSheet.applyWidth(
                                        {
                                          backgroundColor: theme.colors.divider,
                                          borderRadius: 8,
                                          flex: 1,
                                          height: 300,
                                          width: 300,
                                        },
                                        dimensions.width
                                      )}
                                    >
                                      <View
                                        style={StyleSheet.applyWidth(
                                          {
                                            borderRadius: 8,
                                            height: 300,
                                            overflow: 'hidden',
                                            width: 300,
                                          },
                                          dimensions.width
                                        )}
                                      >
                                        <Image
                                          style={StyleSheet.applyWidth(
                                            { height: 300, width: 300 },
                                            dimensions.width
                                          )}
                                          resizeMode={'cover'}
                                          source={Images.UnderdogSquare}
                                        />
                                      </View>
                                    </Surface>
                                  </Touchable>
                                </View>
                                {/* BetRivers */}
                                <View
                                  style={StyleSheet.applyWidth(
                                    {
                                      borderRadius: 8,
                                      flexDirection: 'row',
                                      marginRight: 12,
                                    },
                                    dimensions.width
                                  )}
                                >
                                  <Touchable
                                    onPress={() => {
                                      const handler = async () => {
                                        try {
                                          await WebBrowser.openBrowserAsync(
                                            'https://www.vaultsportshq.com/betrivers'
                                          );
                                          segmentLogTrack(
                                            segment,
                                            'BetRivers promo clicked',
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined
                                          );
                                        } catch (err) {
                                          console.error(err);
                                        }
                                      };
                                      handler();
                                    }}
                                    style={StyleSheet.applyWidth(
                                      {
                                        borderRadius: 8,
                                        height: 300,
                                        width: 300,
                                      },
                                      dimensions.width
                                    )}
                                  >
                                    <Surface
                                      style={StyleSheet.applyWidth(
                                        {
                                          backgroundColor: theme.colors.divider,
                                          borderRadius: 8,
                                          flex: 1,
                                          height: 300,
                                          width: 300,
                                        },
                                        dimensions.width
                                      )}
                                    >
                                      <View
                                        style={StyleSheet.applyWidth(
                                          {
                                            borderRadius: 8,
                                            height: 300,
                                            overflow: 'hidden',
                                            width: 300,
                                          },
                                          dimensions.width
                                        )}
                                      >
                                        <Image
                                          style={StyleSheet.applyWidth(
                                            { height: 300, width: 300 },
                                            dimensions.width
                                          )}
                                          source={Images.BetRiversSquare}
                                          resizeMode={'cover'}
                                        />
                                      </View>
                                    </Surface>
                                  </Touchable>
                                </View>
                              </ScrollView>
                            </View>
                          </View>
                          {/* Grades Modal */}
                          <Modal
                            visible={Constants['toggleGradesModal']}
                            animationType={'slide'}
                            presentationStyle={'pageSheet'}
                            transparent={true}
                          >
                            <Touchable
                              onPress={() => {
                                try {
                                  setGlobalVariableValue({
                                    key: 'toggleGradesModal',
                                    value: false,
                                  });
                                  segmentLogTrack(
                                    segment,
                                    'Close Grades Modal',
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined
                                  );
                                } catch (err) {
                                  console.error(err);
                                }
                              }}
                              style={StyleSheet.applyWidth(
                                { height: '65%' },
                                dimensions.width
                              )}
                            />
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.background,
                                  borderRadius: 10,
                                  borderTopLeftRadius: 10,
                                  borderTopRightRadius: 10,
                                  height: '35%',
                                  justifyContent: 'space-between',
                                },
                                dimensions.width
                              )}
                            >
                              <View>
                                {/* Menu Bar */}
                                <View
                                  style={StyleSheet.applyWidth(
                                    {
                                      flexDirection: 'row',
                                      justifyContent: 'space-between',
                                    },
                                    dimensions.width
                                  )}
                                >
                                  {/* Left Button */}
                                  <View
                                    style={StyleSheet.applyWidth(
                                      { width: '25%' },
                                      dimensions.width
                                    )}
                                  >
                                    <Touchable
                                      onPress={() => {
                                        try {
                                          setGlobalVariableValue({
                                            key: 'toggleGradesModal',
                                            value: false,
                                          });
                                          segmentLogTrack(
                                            segment,
                                            'Close Grades Modal',
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined,
                                            undefined
                                          );
                                        } catch (err) {
                                          console.error(err);
                                        }
                                      }}
                                    >
                                      <View
                                        style={StyleSheet.applyWidth(
                                          {
                                            alignItems: 'center',
                                            flexDirection: 'row',
                                            height: 50,
                                            paddingRight: 16,
                                          },
                                          dimensions.width
                                        )}
                                      >
                                        {/* Back */}
                                        <Icon
                                          name={'Ionicons/ios-chevron-back'}
                                          size={32}
                                          color={
                                            theme.colors
                                              .backgroundInverseMainFont
                                          }
                                        />
                                        <Text
                                          style={StyleSheet.applyWidth(
                                            {
                                              color:
                                                theme.colors
                                                  .backgroundInverseMainFont,
                                              fontSize: 18,
                                            },
                                            dimensions.width
                                          )}
                                        >
                                          {'Back'}
                                        </Text>
                                      </View>
                                    </Touchable>
                                  </View>
                                  <View
                                    style={StyleSheet.applyWidth(
                                      {
                                        alignItems: 'center',
                                        height: 50,
                                        justifyContent: 'center',
                                        width: '50%',
                                      },
                                      dimensions.width
                                    )}
                                  />
                                  <View
                                    style={StyleSheet.applyWidth(
                                      { width: 25 },
                                      dimensions.width
                                    )}
                                  />
                                </View>

                                <View
                                  style={StyleSheet.applyWidth(
                                    { paddingLeft: '4%', paddingRight: '4%' },
                                    dimensions.width
                                  )}
                                >
                                  <View
                                    style={StyleSheet.applyWidth(
                                      { flexDirection: 'row' },
                                      dimensions.width
                                    )}
                                  >
                                    <View
                                      style={StyleSheet.applyWidth(
                                        {
                                          alignItems: 'center',
                                          justifyContent: 'center',
                                          marginRight: 8,
                                          paddingBottom: 12,
                                          paddingRight: 12,
                                          paddingTop: 12,
                                        },
                                        dimensions.width
                                      )}
                                    >
                                      <View
                                        style={StyleSheet.applyWidth(
                                          {
                                            alignItems: 'center',
                                            borderBottomWidth: 1,
                                            borderColor:
                                              theme.colors
                                                .lightLowImportanceText,
                                            borderLeftWidth: 1,
                                            borderRadius: 8,
                                            borderRightWidth: 1,
                                            borderTopWidth: 1,
                                            justifyContent: 'center',
                                            minWidth: 70,
                                            paddingBottom: 6,
                                            paddingLeft: 6,
                                            paddingRight: 6,
                                            paddingTop: 6,
                                          },
                                          dimensions.width
                                        )}
                                      >
                                        <>
                                          {!gradeColorGood(sendGrade) ? null : (
                                            <Text
                                              style={StyleSheet.applyWidth(
                                                {
                                                  color: theme.colors.good,
                                                  fontSize: 50,
                                                },
                                                dimensions.width
                                              )}
                                            >
                                              {gradeSyntax(sendGrade)}
                                            </Text>
                                          )}
                                        </>
                                        <>
                                          {!gradeColorFair(sendGrade) ? null : (
                                            <Text
                                              style={StyleSheet.applyWidth(
                                                {
                                                  color: theme.colors.fair,
                                                  fontSize: 50,
                                                },
                                                dimensions.width
                                              )}
                                            >
                                              {gradeSyntax(sendGrade)}
                                            </Text>
                                          )}
                                        </>
                                        <>
                                          {!gradeColorPoor(sendGrade) ? null : (
                                            <Text
                                              style={StyleSheet.applyWidth(
                                                {
                                                  color: theme.colors.notUsed,
                                                  fontSize: 50,
                                                },
                                                dimensions.width
                                              )}
                                            >
                                              {gradeSyntax(sendGrade)}
                                            </Text>
                                          )}
                                        </>
                                        <>
                                          {!gradeColorBad(sendGrade) ? null : (
                                            <Text
                                              style={StyleSheet.applyWidth(
                                                {
                                                  color:
                                                    theme.colors.badErrorCancel,
                                                  fontSize: 50,
                                                },
                                                dimensions.width
                                              )}
                                            >
                                              {gradeSyntax(sendGrade)}
                                            </Text>
                                          )}
                                        </>
                                        <>
                                          {!gradeColorNull(sendGrade) ? null : (
                                            <Text
                                              style={StyleSheet.applyWidth(
                                                {
                                                  color:
                                                    theme.colors
                                                      .backgroundInverseMainFont,
                                                  fontSize: 50,
                                                },
                                                dimensions.width
                                              )}
                                            >
                                              {gradeSyntax(sendGrade)}
                                            </Text>
                                          )}
                                        </>
                                      </View>
                                    </View>
                                    {/* Unit Size Consistency */}
                                    <>
                                      {!compareGradeUnitSizeConsistency(
                                        sendGradeType
                                      ) ? null : (
                                        <View
                                          style={StyleSheet.applyWidth(
                                            { flex: 1 },
                                            dimensions.width
                                          )}
                                        >
                                          <Text
                                            style={StyleSheet.applyWidth(
                                              {
                                                color:
                                                  theme.colors
                                                    .backgroundInverseMainFont,
                                                fontFamily: 'System',
                                                fontSize: 18,
                                                fontWeight: '700',
                                              },
                                              dimensions.width
                                            )}
                                          >
                                            {'Unit Size Consistency'}
                                          </Text>

                                          <Text
                                            style={StyleSheet.applyWidth(
                                              {
                                                color:
                                                  theme.colors
                                                    .backgroundInverseMainFont,
                                                marginTop: 3,
                                              },
                                              dimensions.width
                                            )}
                                          >
                                            {
                                              'This grade is based on your average wager amount and how much you deviate from it. Consistent wager sizes play a large part in your overall performance.'
                                            }
                                          </Text>
                                        </View>
                                      )}
                                    </>
                                    {/* League Consistency */}
                                    <>
                                      {!compareGradeLeagueConsistency(
                                        sendGradeType
                                      ) ? null : (
                                        <View
                                          style={StyleSheet.applyWidth(
                                            { flex: 1 },
                                            dimensions.width
                                          )}
                                        >
                                          <Text
                                            style={StyleSheet.applyWidth(
                                              {
                                                color:
                                                  theme.colors
                                                    .backgroundInverseMainFont,
                                                fontFamily: 'System',
                                                fontSize: 18,
                                                fontWeight: '700',
                                              },
                                              dimensions.width
                                            )}
                                          >
                                            {'League Consistency'}
                                          </Text>

                                          <Text
                                            style={StyleSheet.applyWidth(
                                              {
                                                color:
                                                  theme.colors
                                                    .backgroundInverseMainFont,
                                                marginTop: 3,
                                              },
                                              dimensions.width
                                            )}
                                          >
                                            {'This grade is coming soon!'}
                                          </Text>
                                        </View>
                                      )}
                                    </>
                                    {/* Trap Avoidance */}
                                    <>
                                      {!compareGradeTrapAvoidance(
                                        sendGradeType
                                      ) ? null : (
                                        <View
                                          style={StyleSheet.applyWidth(
                                            { flex: 1 },
                                            dimensions.width
                                          )}
                                        >
                                          <Text
                                            style={StyleSheet.applyWidth(
                                              {
                                                color:
                                                  theme.colors
                                                    .backgroundInverseMainFont,
                                                fontFamily: 'System',
                                                fontSize: 18,
                                                fontWeight: '700',
                                              },
                                              dimensions.width
                                            )}
                                          >
                                            {'Trap Avoidance'}
                                          </Text>

                                          <Text
                                            style={StyleSheet.applyWidth(
                                              {
                                                color:
                                                  theme.colors
                                                    .backgroundInverseMainFont,
                                                marginTop: 3,
                                              },
                                              dimensions.width
                                            )}
                                          >
                                            {
                                              'This grade is based on your tendency to avoid the trap of chasing your losses. It factors in abnormally large bets you place after a losing period.'
                                            }
                                          </Text>
                                        </View>
                                      )}
                                    </>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </Modal>
                        </View>
                      )}
                    </>
                  </View>
                )}
              </>
            </View>
          )}
        </>
        {/* Demo Mode View */}
        <>
          {sportsbooksSynced ? null : (
            <View>
              {/* Historical Bets Demo View */}
              <>
                {!profileTabHistorical(Constants['profileTabDevice']) ? null : (
                  <View
                    style={StyleSheet.applyWidth(
                      { alignItems: 'center', height: 1000, width: 375 },
                      dimensions.width
                    )}
                  >
                    <Image
                      style={StyleSheet.applyWidth(
                        { height: '100%', opacity: 0.5, width: '100%' },
                        dimensions.width
                      )}
                      resizeMode={'contain'}
                      source={Images.HistoricalBetsDemo}
                    />
                  </View>
                )}
              </>
              {/* Pending Bets Demo View */}
              <>
                {!profileTabPending(Constants['profileTabDevice']) ? null : (
                  <View
                    style={StyleSheet.applyWidth(
                      { alignItems: 'center', height: 1000, width: 375 },
                      dimensions.width
                    )}
                  >
                    <Image
                      style={StyleSheet.applyWidth(
                        { height: '100%', opacity: 0.5, width: '100%' },
                        dimensions.width
                      )}
                      resizeMode={'contain'}
                      source={Images.PendingBetsDemo}
                    />
                  </View>
                )}
              </>
              {/* Breakdown Demo View */}
              <>
                {!profileTabBreakdown(Constants['profileTabDevice']) ? null : (
                  <View
                    style={StyleSheet.applyWidth(
                      { height: 1000, width: 375 },
                      dimensions.width
                    )}
                  >
                    <Image
                      style={StyleSheet.applyWidth(
                        { height: '100%', opacity: 0.5, width: '100%' },
                        dimensions.width
                      )}
                      resizeMode={'contain'}
                      source={Images.BreakdownDemo}
                    />
                  </View>
                )}
              </>
            </View>
          )}
        </>
      </ScrollView>
      {/* Refresh View */}
      <View
        style={StyleSheet.applyWidth(
          {
            alignItems: 'flex-end',
            bottom: 30,
            position: 'absolute',
            right: 20,
          },
          dimensions.width
        )}
      >
        {/* Waitlisted False View */}
        <>
          {Constants['waitlisted'] ? null : (
            <View>
              {/* Demo Mode False View */}
              <>
                {!sportsbooksSynced ? null : (
                  <View>
                    <Surface
                      style={StyleSheet.applyWidth(
                        {
                          backgroundColor: theme.colors.background,
                          borderRadius: 28,
                          minHeight: 40,
                        },
                        dimensions.width
                      )}
                      elevation={2}
                    >
                      <>
                        {Constants['loadingRefresh'] ? null : (
                          <Touchable
                            onPress={() => {
                              const handler = async () => {
                                try {
                                  setGlobalVariableValue({
                                    key: 'loadingRefresh',
                                    value: true,
                                  });
                                  await SwaggerAPIApi.cacheUserBetsGET(
                                    Constants,
                                    { internalId: Constants['internalId'] }
                                  );
                                  setGlobalVariableValue({
                                    key: 'loadingRefresh',
                                    value: false,
                                  });
                                  setGlobalVariableValue({
                                    key: 'refreshPressCount',
                                    value: Constants['refreshPressCount'] + 1,
                                  });
                                  setGlobalVariableValue({
                                    key: 'updatedSportsBook',
                                    value: Constants['updatedSportsBook'] + 1,
                                  });
                                  segmentLogTrack(
                                    segment,
                                    'Bets refreshed',
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined,
                                    undefined
                                  );
                                  if (
                                    refreshPressCounter(
                                      Constants['refreshPressCount']
                                    )
                                  ) {
                                    return;
                                  }
                                  Utils.showAlert({
                                    title: 'Notice',
                                    message:
                                      'Bets may sometimes take up to an hour to refresh. If you still aren’t seeing them, you may need to resend your sportsbook 😮‍💨',
                                    buttonText: 'OK',
                                  });
                                } catch (err) {
                                  console.error(err);
                                }
                              };
                              handler();
                            }}
                          >
                            <Circle bgColor={theme.colors.primary} size={56}>
                              <Icon
                                name={'FontAwesome/refresh'}
                                size={24}
                                color={theme.colors.background}
                              />
                            </Circle>
                          </Touchable>
                        )}
                      </>
                      <>
                        {!Constants['loadingRefresh'] ? null : (
                          <Circle bgColor={theme.colors.primary} size={56}>
                            <ActivityIndicator
                              style={StyleSheet.applyWidth(
                                { height: 36, width: 36 },
                                dimensions.width
                              )}
                              size={'small'}
                              color={theme.colors.background}
                            />
                          </Circle>
                        )}
                      </>
                    </Surface>
                  </View>
                )}
              </>
            </View>
          )}
        </>
      </View>
      {/* My Bets Filter Modal */}
      <Modal
        style={StyleSheet.applyWidth(
          { backgroundColor: theme.colors.background },
          dimensions.width
        )}
        visible={Constants['toggleFiltersModal']}
        animationType={'slide'}
        presentationStyle={'pageSheet'}
      >
        <View
          style={StyleSheet.applyWidth(
            { backgroundColor: theme.colors.background, height: '100%' },
            dimensions.width
          )}
        >
          {/* Top Bar */}
          <Surface
            style={StyleSheet.applyWidth(
              { backgroundColor: theme.colors.background, minHeight: 40 },
              dimensions.width
            )}
            elevation={2}
          >
            <View
              style={StyleSheet.applyWidth(
                { flexDirection: 'row', justifyContent: 'space-between' },
                dimensions.width
              )}
            >
              {/* Left Button */}
              <View
                style={StyleSheet.applyWidth(
                  {
                    alignItems: 'flex-start',
                    borderRadius: 0,
                    justifyContent: 'center',
                    width: '33%',
                  },
                  dimensions.width
                )}
              >
                <>
                  {loadingCancel ? null : (
                    <Touchable
                      onPress={() => {
                        try {
                          setLoadingCancel(true);
                          setGlobalVariableValue({
                            key: 'filterLeague',
                            value: arrayChange(Constants['filterLeagueApply']),
                          });
                          setGlobalVariableValue({
                            key: 'filterSportsbook',
                            value: arrayChange(
                              Constants['filterSportsbookApply']
                            ),
                          });
                          setGlobalVariableValue({
                            key: 'filterBetType',
                            value: arrayChange(Constants['filterBetTypeApply']),
                          });
                          setGlobalVariableValue({
                            key: 'filterDate',
                            value: arrayChange(Constants['filterDateApply']),
                          });
                          setGlobalVariableValue({
                            key: 'filterUnderdog',
                            value: arrayChange(
                              Constants['filterUnderdogApply']
                            ),
                          });
                          setGlobalVariableValue({
                            key: 'filterUnder',
                            value: arrayChange(Constants['filterUnderApply']),
                          });
                          setGlobalVariableValue({
                            key: 'filterLiveBet',
                            value: arrayChange(Constants['filterLiveBetApply']),
                          });
                          setGlobalVariableValue({
                            key: 'filterOutcome',
                            value: arrayChange(Constants['filterOutcomeApply']),
                          });
                          setGlobalVariableValue({
                            key: 'toggleFiltersModal',
                            value: false,
                          });
                          setLoadingCancel(false);
                        } catch (err) {
                          console.error(err);
                        }
                      }}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            alignItems: 'center',
                            flexDirection: 'row',
                            height: 50,
                            paddingLeft: 16,
                            paddingRight: 16,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontSize: 18,
                            },
                            dimensions.width
                          )}
                        >
                          {'Cancel'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                <>
                  {!loadingCancel ? null : (
                    <ActivityIndicator
                      style={StyleSheet.applyWidth(
                        { height: 36, marginLeft: 16, width: 36 },
                        dimensions.width
                      )}
                      size={'small'}
                      animating={true}
                      hidesWhenStopped={true}
                      color={theme.colors.backgroundInverseMainFont}
                    />
                  )}
                </>
              </View>

              <View
                style={StyleSheet.applyWidth(
                  {
                    alignContent: 'center',
                    alignItems: 'center',
                    height: 50,
                    justifyContent: 'center',
                  },
                  dimensions.width
                )}
              >
                <Text
                  style={StyleSheet.applyWidth(
                    {
                      color: theme.colors.backgroundInverseMainFont,
                      fontFamily: 'System',
                      fontSize: 18,
                      fontWeight: '700',
                      textAlign: 'center',
                    },
                    dimensions.width
                  )}
                >
                  {'Filters'}
                </Text>
              </View>
              {/* Right Button */}
              <View
                style={StyleSheet.applyWidth(
                  {
                    alignItems: 'flex-end',
                    borderRadius: 0,
                    justifyContent: 'center',
                    width: '33%',
                  },
                  dimensions.width
                )}
              >
                {/* Clear Touchable_No Filters */}
                <>
                  {countFilters() ? null : (
                    <Touchable
                      onPress={() => {
                        try {
                          setGlobalVariableValue({
                            key: 'filterLeague',
                            value: [],
                          });
                          setGlobalVariableValue({
                            key: 'filterSportsbook',
                            value: [],
                          });
                          setGlobalVariableValue({
                            key: 'filterBetType',
                            value: [],
                          });
                          setGlobalVariableValue({
                            key: 'filterDate',
                            value: [],
                          });
                          setGlobalVariableValue({
                            key: 'filterUnderdog',
                            value: [],
                          });
                          setGlobalVariableValue({
                            key: 'filterUnder',
                            value: [],
                          });
                          setGlobalVariableValue({
                            key: 'filterLiveBet',
                            value: [],
                          });
                          setGlobalVariableValue({
                            key: 'filterOutcome',
                            value: [],
                          });
                        } catch (err) {
                          console.error(err);
                        }
                      }}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            alignItems: 'flex-end',
                            height: 50,
                            justifyContent: 'center',
                            paddingLeft: 16,
                            paddingRight: 16,
                          },
                          dimensions.width
                        )}
                      >
                        <>
                          {loadingReset ? null : (
                            <Text
                              style={StyleSheet.applyWidth(
                                {
                                  color: theme.colors.backgroundInverseMainFont,
                                  fontSize: 18,
                                },
                                dimensions.width
                              )}
                            >
                              {'Clear'}
                            </Text>
                          )}
                        </>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* Clear Touchable_Filters */}
                <>
                  {!countFilters() ? null : (
                    <Touchable
                      onPress={() => {
                        try {
                          setGlobalVariableValue({
                            key: 'filterLeague',
                            value: [],
                          });
                          setGlobalVariableValue({
                            key: 'filterSportsbook',
                            value: [],
                          });
                          setGlobalVariableValue({
                            key: 'filterBetType',
                            value: [],
                          });
                          setGlobalVariableValue({
                            key: 'filterDate',
                            value: [],
                          });
                          setGlobalVariableValue({
                            key: 'filterUnderdog',
                            value: [],
                          });
                          setGlobalVariableValue({
                            key: 'filterUnder',
                            value: [],
                          });
                          setGlobalVariableValue({
                            key: 'filterLiveBet',
                            value: [],
                          });
                          setGlobalVariableValue({
                            key: 'filterOutcome',
                            value: [],
                          });
                        } catch (err) {
                          console.error(err);
                        }
                      }}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            alignItems: 'flex-end',
                            height: 50,
                            justifyContent: 'center',
                            paddingLeft: 16,
                            paddingRight: 16,
                          },
                          dimensions.width
                        )}
                      >
                        <>
                          {loadingReset ? null : (
                            <Text
                              style={StyleSheet.applyWidth(
                                {
                                  color: theme.colors.primary,
                                  fontFamily: 'System',
                                  fontSize: 18,
                                  fontWeight: '600',
                                },
                                dimensions.width
                              )}
                            >
                              {'Clear'}
                            </Text>
                          )}
                        </>
                      </View>
                    </Touchable>
                  )}
                </>
                <>
                  {!loadingReset ? null : (
                    <ActivityIndicator
                      style={StyleSheet.applyWidth(
                        { height: 36, marginRight: 16, width: 36 },
                        dimensions.width
                      )}
                      size={'small'}
                      animating={true}
                      hidesWhenStopped={true}
                      color={theme.colors.primary}
                    />
                  )}
                </>
              </View>
            </View>
          </Surface>

          <ScrollView
            contentContainerStyle={StyleSheet.applyWidth(
              { paddingBottom: 100 },
              dimensions.width
            )}
            showsVerticalScrollIndicator={false}
            bounces={true}
            showsHorizontalScrollIndicator={false}
          >
            {/* Filter By Sportsbook */}
            <View
              style={StyleSheet.applyWidth(
                { paddingLeft: '4%', paddingRight: '4%', paddingTop: 28 },
                dimensions.width
              )}
            >
              <Text
                style={StyleSheet.applyWidth(
                  {
                    color: theme.colors.backgroundInverseMainFont,
                    fontFamily: 'System',
                    fontSize: 20,
                    fontWeight: '700',
                  },
                  dimensions.width
                )}
              >
                {'Sportsbooks'}
              </Text>

              <View
                style={StyleSheet.applyWidth(
                  { marginTop: 6 },
                  dimensions.width
                )}
              >
                <SwaggerAPIApi.FetchGetBankrollPageByIdGET
                  dummy={Constants['updatedSportsBook']}
                  internalId={Constants['internalId']}
                >
                  {({ loading, error, data, refetchGetBankrollPageById }) => {
                    const fetchData = data;
                    if (!fetchData || loading) {
                      return <ActivityIndicator />;
                    }

                    if (error) {
                      return (
                        <Text style={{ textAlign: 'center' }}>
                          There was a problem fetching this data
                        </Text>
                      );
                    }

                    return (
                      <FlatList
                        data={fetchData}
                        listKey={'vq2uDKxS'}
                        keyExtractor={listData =>
                          listData?.id ||
                          listData?.uuid ||
                          JSON.stringify(listData)
                        }
                        renderItem={({ item }) => {
                          const listData = item;
                          return (
                            <>
                              {/* Sportsbook_On */}
                              <>
                                {!filterSportsbookButton(
                                  listData?.account?.book?.name
                                ) ? null : (
                                  <Touchable
                                    onPress={() => {
                                      const handler = async () => {
                                        try {
                                          await removeSportsbookFilter(
                                            listData?.account?.book?.name
                                          );
                                          setDummyTwo(dummyTwo + 1);
                                        } catch (err) {
                                          console.error(err);
                                        }
                                      };
                                      handler();
                                    }}
                                    style={StyleSheet.applyWidth(
                                      { marginTop: 8 },
                                      dimensions.width
                                    )}
                                  >
                                    <View
                                      style={StyleSheet.applyWidth(
                                        {
                                          backgroundColor: theme.colors.primary,
                                          borderRadius: 6,
                                          marginRight: 8,
                                          paddingBottom: 8,
                                          paddingLeft: 16,
                                          paddingRight: 16,
                                          paddingTop: 8,
                                        },
                                        dimensions.width
                                      )}
                                    >
                                      <Text
                                        style={StyleSheet.applyWidth(
                                          {
                                            color:
                                              theme.colors
                                                .strongTextOnGoldButtons,
                                            fontFamily: 'System',
                                            fontWeight: '700',
                                          },
                                          dimensions.width
                                        )}
                                      >
                                        {modifySportsbookName(
                                          listData?.account?.book?.name
                                        )}
                                      </Text>
                                    </View>
                                  </Touchable>
                                )}
                              </>
                              {/* Sportsbook_Off */}
                              <>
                                {filterSportsbookButton(
                                  listData?.account?.book?.name
                                ) ? null : (
                                  <Touchable
                                    onPress={() => {
                                      const handler = async () => {
                                        try {
                                          setDummyTwo(dummyTwo + 1);
                                          await addSportsbookFilter(
                                            listData?.account?.book?.name
                                          );
                                        } catch (err) {
                                          console.error(err);
                                        }
                                      };
                                      handler();
                                    }}
                                    style={StyleSheet.applyWidth(
                                      { marginTop: 8 },
                                      dimensions.width
                                    )}
                                  >
                                    <View
                                      style={StyleSheet.applyWidth(
                                        {
                                          backgroundColor: theme.colors.divider,
                                          borderRadius: 6,
                                          marginRight: 8,
                                          paddingBottom: 8,
                                          paddingLeft: 16,
                                          paddingRight: 16,
                                          paddingTop: 8,
                                        },
                                        dimensions.width
                                      )}
                                    >
                                      <Text
                                        style={StyleSheet.applyWidth(
                                          {
                                            color:
                                              theme.colors
                                                .backgroundInverseMainFont,
                                            fontFamily: 'System',
                                            fontWeight: '700',
                                          },
                                          dimensions.width
                                        )}
                                      >
                                        {modifySportsbookName(
                                          listData?.account?.book?.name
                                        )}
                                      </Text>
                                    </View>
                                  </Touchable>
                                )}
                              </>
                            </>
                          );
                        }}
                        contentContainerStyle={StyleSheet.applyWidth(
                          { flexDirection: 'row', flexWrap: 'wrap' },
                          dimensions.width
                        )}
                        numColumns={1}
                      />
                    );
                  }}
                </SwaggerAPIApi.FetchGetBankrollPageByIdGET>
              </View>
              <Divider
                style={StyleSheet.applyWidth(
                  { height: 1, marginTop: 18 },
                  dimensions.width
                )}
                color={theme.colors.divider}
              />
            </View>
            {/* Filter By Date */}
            <View
              style={StyleSheet.applyWidth(
                { paddingLeft: '4%', paddingRight: '4%', paddingTop: 28 },
                dimensions.width
              )}
            >
              <Text
                style={StyleSheet.applyWidth(
                  {
                    color: theme.colors.backgroundInverseMainFont,
                    fontFamily: 'System',
                    fontSize: 20,
                    fontWeight: '700',
                  },
                  dimensions.width
                )}
              >
                {'Dates'}
              </Text>

              <View
                style={StyleSheet.applyWidth(
                  { marginTop: 6, minHeight: 50 },
                  dimensions.width
                )}
              >
                <View
                  style={StyleSheet.applyWidth(
                    {
                      flexDirection: 'row',
                      flexWrap: 'wrap',
                      marginBottom: 18,
                    },
                    dimensions.width
                  )}
                >
                  {/* All Time_On */}
                  <>
                    {!filterAllLeagues(Constants['filterDate']) ? null : (
                      <Touchable
                        style={StyleSheet.applyWidth(
                          { marginTop: 8 },
                          dimensions.width
                        )}
                      >
                        <View
                          style={StyleSheet.applyWidth(
                            {
                              backgroundColor: theme.colors.primary,
                              borderRadius: 6,
                              marginRight: 8,
                              paddingBottom: 8,
                              paddingLeft: 16,
                              paddingRight: 16,
                              paddingTop: 8,
                            },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.strongTextOnGoldButtons,
                                fontFamily: 'System',
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'All Time'}
                          </Text>
                        </View>
                      </Touchable>
                    )}
                  </>
                  {/* All Time_Off */}
                  <>
                    {filterAllLeagues(Constants['filterDate']) ? null : (
                      <Touchable
                        onPress={() => {
                          try {
                            setGlobalVariableValue({
                              key: 'filterDate',
                              value: [],
                            });
                          } catch (err) {
                            console.error(err);
                          }
                        }}
                        style={StyleSheet.applyWidth(
                          { marginTop: 8 },
                          dimensions.width
                        )}
                      >
                        <View
                          style={StyleSheet.applyWidth(
                            {
                              backgroundColor: theme.colors.divider,
                              borderRadius: 6,
                              marginRight: 8,
                              paddingBottom: 8,
                              paddingLeft: 16,
                              paddingRight: 16,
                              paddingTop: 8,
                            },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.backgroundInverseMainFont,
                                fontFamily: 'System',
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'All Time'}
                          </Text>
                        </View>
                      </Touchable>
                    )}
                  </>
                  {/* Today_On */}
                  <>
                    {!filterDateButton('today') ? null : (
                      <Touchable
                        onPress={() => {
                          try {
                            setGlobalVariableValue({
                              key: 'filterDate',
                              value: [],
                            });
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        }}
                        style={StyleSheet.applyWidth(
                          { marginTop: 8 },
                          dimensions.width
                        )}
                      >
                        <View
                          style={StyleSheet.applyWidth(
                            {
                              backgroundColor: theme.colors.primary,
                              borderRadius: 6,
                              marginRight: 8,
                              paddingBottom: 8,
                              paddingLeft: 16,
                              paddingRight: 16,
                              paddingTop: 8,
                            },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.strongTextOnGoldButtons,
                                fontFamily: 'System',
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'Today'}
                          </Text>
                        </View>
                      </Touchable>
                    )}
                  </>
                  {/* Today_Off */}
                  <>
                    {filterDateButton('today') ? null : (
                      <Touchable
                        onPress={() => {
                          const handler = async () => {
                            try {
                              await addDateFilter('today');
                              setDummyTwo(dummyTwo + 1);
                            } catch (err) {
                              console.error(err);
                            }
                          };
                          handler();
                        }}
                        style={StyleSheet.applyWidth(
                          { marginTop: 8 },
                          dimensions.width
                        )}
                      >
                        <View
                          style={StyleSheet.applyWidth(
                            {
                              backgroundColor: theme.colors.divider,
                              borderRadius: 6,
                              marginRight: 8,
                              paddingBottom: 8,
                              paddingLeft: 16,
                              paddingRight: 16,
                              paddingTop: 8,
                            },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.backgroundInverseMainFont,
                                fontFamily: 'System',
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'Today'}
                          </Text>
                        </View>
                      </Touchable>
                    )}
                  </>
                  {/* Yesterday_On */}
                  <>
                    {!filterDateButton('yesterday') ? null : (
                      <Touchable
                        onPress={() => {
                          try {
                            setGlobalVariableValue({
                              key: 'filterDate',
                              value: [],
                            });
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        }}
                        style={StyleSheet.applyWidth(
                          { marginTop: 8 },
                          dimensions.width
                        )}
                      >
                        <View
                          style={StyleSheet.applyWidth(
                            {
                              backgroundColor: theme.colors.primary,
                              borderRadius: 6,
                              marginRight: 8,
                              paddingBottom: 8,
                              paddingLeft: 16,
                              paddingRight: 16,
                              paddingTop: 8,
                            },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.strongTextOnGoldButtons,
                                fontFamily: 'System',
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'Yesterday'}
                          </Text>
                        </View>
                      </Touchable>
                    )}
                  </>
                  {/* Yesterday_Off */}
                  <>
                    {filterDateButton('yesterday') ? null : (
                      <Touchable
                        onPress={() => {
                          const handler = async () => {
                            try {
                              await addDateFilter('yesterday');
                              setDummyTwo(dummyTwo + 1);
                            } catch (err) {
                              console.error(err);
                            }
                          };
                          handler();
                        }}
                        style={StyleSheet.applyWidth(
                          { marginTop: 8 },
                          dimensions.width
                        )}
                      >
                        <View
                          style={StyleSheet.applyWidth(
                            {
                              backgroundColor: theme.colors.divider,
                              borderRadius: 6,
                              marginRight: 8,
                              paddingBottom: 8,
                              paddingLeft: 16,
                              paddingRight: 16,
                              paddingTop: 8,
                            },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.backgroundInverseMainFont,
                                fontFamily: 'System',
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'Yesterday'}
                          </Text>
                        </View>
                      </Touchable>
                    )}
                  </>
                  {/* Seven Days_On */}
                  <>
                    {!filterDateButton('sevenDays') ? null : (
                      <Touchable
                        onPress={() => {
                          try {
                            setGlobalVariableValue({
                              key: 'filterDate',
                              value: [],
                            });
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        }}
                        style={StyleSheet.applyWidth(
                          { marginTop: 8 },
                          dimensions.width
                        )}
                      >
                        <View
                          style={StyleSheet.applyWidth(
                            {
                              backgroundColor: theme.colors.primary,
                              borderRadius: 6,
                              marginRight: 8,
                              paddingBottom: 8,
                              paddingLeft: 16,
                              paddingRight: 16,
                              paddingTop: 8,
                            },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.strongTextOnGoldButtons,
                                fontFamily: 'System',
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'Last 7 Days'}
                          </Text>
                        </View>
                      </Touchable>
                    )}
                  </>
                  {/* Seven Days_Off */}
                  <>
                    {filterDateButton('sevenDays') ? null : (
                      <Touchable
                        onPress={() => {
                          const handler = async () => {
                            try {
                              await addDateFilter('sevenDays');
                              setDummyTwo(dummyTwo + 1);
                            } catch (err) {
                              console.error(err);
                            }
                          };
                          handler();
                        }}
                        style={StyleSheet.applyWidth(
                          { marginTop: 8 },
                          dimensions.width
                        )}
                      >
                        <View
                          style={StyleSheet.applyWidth(
                            {
                              backgroundColor: theme.colors.divider,
                              borderRadius: 6,
                              marginRight: 8,
                              paddingBottom: 8,
                              paddingLeft: 16,
                              paddingRight: 16,
                              paddingTop: 8,
                            },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.backgroundInverseMainFont,
                                fontFamily: 'System',
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'Last 7 Days'}
                          </Text>
                        </View>
                      </Touchable>
                    )}
                  </>
                  {/* Twenty Eight Days_On */}
                  <>
                    {!filterDateButton('twentyEightDays') ? null : (
                      <Touchable
                        onPress={() => {
                          try {
                            setGlobalVariableValue({
                              key: 'filterDate',
                              value: [],
                            });
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        }}
                        style={StyleSheet.applyWidth(
                          { marginTop: 8 },
                          dimensions.width
                        )}
                      >
                        <View
                          style={StyleSheet.applyWidth(
                            {
                              backgroundColor: theme.colors.primary,
                              borderRadius: 6,
                              marginRight: 8,
                              paddingBottom: 8,
                              paddingLeft: 16,
                              paddingRight: 16,
                              paddingTop: 8,
                            },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.strongTextOnGoldButtons,
                                fontFamily: 'System',
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'Last 28 Days'}
                          </Text>
                        </View>
                      </Touchable>
                    )}
                  </>
                  {/* Twenty Eight Days_Off */}
                  <>
                    {filterDateButton('twentyEightDays') ? null : (
                      <Touchable
                        onPress={() => {
                          const handler = async () => {
                            try {
                              await addDateFilter('twentyEightDays');
                              setDummyTwo(dummyTwo + 1);
                            } catch (err) {
                              console.error(err);
                            }
                          };
                          handler();
                        }}
                        style={StyleSheet.applyWidth(
                          { marginTop: 8 },
                          dimensions.width
                        )}
                      >
                        <View
                          style={StyleSheet.applyWidth(
                            {
                              backgroundColor: theme.colors.divider,
                              borderRadius: 6,
                              marginRight: 8,
                              paddingBottom: 8,
                              paddingLeft: 16,
                              paddingRight: 16,
                              paddingTop: 8,
                            },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.backgroundInverseMainFont,
                                fontFamily: 'System',
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'Last 28 Days'}
                          </Text>
                        </View>
                      </Touchable>
                    )}
                  </>
                  {/* Three Months_On */}
                  <>
                    {!filterDateButton('threeMonths') ? null : (
                      <Touchable
                        onPress={() => {
                          try {
                            setGlobalVariableValue({
                              key: 'filterDate',
                              value: [],
                            });
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        }}
                        style={StyleSheet.applyWidth(
                          { marginTop: 8 },
                          dimensions.width
                        )}
                      >
                        <View
                          style={StyleSheet.applyWidth(
                            {
                              backgroundColor: theme.colors.primary,
                              borderRadius: 6,
                              marginRight: 8,
                              paddingBottom: 8,
                              paddingLeft: 16,
                              paddingRight: 16,
                              paddingTop: 8,
                            },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.strongTextOnGoldButtons,
                                fontFamily: 'System',
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'Last 3 Months'}
                          </Text>
                        </View>
                      </Touchable>
                    )}
                  </>
                  {/* Three Months_Off */}
                  <>
                    {filterDateButton('threeMonths') ? null : (
                      <Touchable
                        onPress={() => {
                          const handler = async () => {
                            try {
                              await addDateFilter('threeMonths');
                              setDummyTwo(dummyTwo + 1);
                            } catch (err) {
                              console.error(err);
                            }
                          };
                          handler();
                        }}
                        style={StyleSheet.applyWidth(
                          { marginTop: 8 },
                          dimensions.width
                        )}
                      >
                        <View
                          style={StyleSheet.applyWidth(
                            {
                              backgroundColor: theme.colors.divider,
                              borderRadius: 6,
                              marginRight: 8,
                              paddingBottom: 8,
                              paddingLeft: 16,
                              paddingRight: 16,
                              paddingTop: 8,
                            },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.backgroundInverseMainFont,
                                fontFamily: 'System',
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'Last 3 Months'}
                          </Text>
                        </View>
                      </Touchable>
                    )}
                  </>
                  {/* Six Months_On */}
                  <>
                    {!filterDateButton('sixMonths') ? null : (
                      <Touchable
                        onPress={() => {
                          try {
                            setGlobalVariableValue({
                              key: 'filterDate',
                              value: [],
                            });
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        }}
                        style={StyleSheet.applyWidth(
                          { marginTop: 8 },
                          dimensions.width
                        )}
                      >
                        <View
                          style={StyleSheet.applyWidth(
                            {
                              backgroundColor: theme.colors.primary,
                              borderRadius: 6,
                              marginRight: 8,
                              paddingBottom: 8,
                              paddingLeft: 16,
                              paddingRight: 16,
                              paddingTop: 8,
                            },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.strongTextOnGoldButtons,
                                fontFamily: 'System',
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'Last 6 Months'}
                          </Text>
                        </View>
                      </Touchable>
                    )}
                  </>
                  {/* Six Months_Off */}
                  <>
                    {filterDateButton('sixMonths') ? null : (
                      <Touchable
                        onPress={() => {
                          const handler = async () => {
                            try {
                              await addDateFilter('sixMonths');
                              setDummyTwo(dummyTwo + 1);
                            } catch (err) {
                              console.error(err);
                            }
                          };
                          handler();
                        }}
                        style={StyleSheet.applyWidth(
                          { marginTop: 8 },
                          dimensions.width
                        )}
                      >
                        <View
                          style={StyleSheet.applyWidth(
                            {
                              backgroundColor: theme.colors.divider,
                              borderRadius: 6,
                              marginRight: 8,
                              paddingBottom: 8,
                              paddingLeft: 16,
                              paddingRight: 16,
                              paddingTop: 8,
                            },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.backgroundInverseMainFont,
                                fontFamily: 'System',
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'Last 6 Months'}
                          </Text>
                        </View>
                      </Touchable>
                    )}
                  </>
                  {/* YTD_On */}
                  <>
                    {!filterDateButton('yearToDate') ? null : (
                      <Touchable
                        onPress={() => {
                          try {
                            setGlobalVariableValue({
                              key: 'filterDate',
                              value: [],
                            });
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        }}
                        style={StyleSheet.applyWidth(
                          { marginTop: 8 },
                          dimensions.width
                        )}
                      >
                        <View
                          style={StyleSheet.applyWidth(
                            {
                              backgroundColor: theme.colors.primary,
                              borderRadius: 6,
                              marginRight: 8,
                              paddingBottom: 8,
                              paddingLeft: 16,
                              paddingRight: 16,
                              paddingTop: 8,
                            },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.strongTextOnGoldButtons,
                                fontFamily: 'System',
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'Year To Date'}
                          </Text>
                        </View>
                      </Touchable>
                    )}
                  </>
                  {/* YTD_Off */}
                  <>
                    {filterDateButton('yearToDate') ? null : (
                      <Touchable
                        onPress={() => {
                          const handler = async () => {
                            try {
                              await addDateFilter('yearToDate');
                              setDummyTwo(dummyTwo + 1);
                            } catch (err) {
                              console.error(err);
                            }
                          };
                          handler();
                        }}
                        style={StyleSheet.applyWidth(
                          { marginTop: 8 },
                          dimensions.width
                        )}
                      >
                        <View
                          style={StyleSheet.applyWidth(
                            {
                              backgroundColor: theme.colors.divider,
                              borderRadius: 6,
                              marginRight: 8,
                              paddingBottom: 8,
                              paddingLeft: 16,
                              paddingRight: 16,
                              paddingTop: 8,
                            },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.backgroundInverseMainFont,
                                fontFamily: 'System',
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'Year To Date'}
                          </Text>
                        </View>
                      </Touchable>
                    )}
                  </>
                  {/* Twelve Months_On */}
                  <>
                    {!filterDateButton('twelveMonths') ? null : (
                      <Touchable
                        onPress={() => {
                          try {
                            setGlobalVariableValue({
                              key: 'filterDate',
                              value: [],
                            });
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        }}
                        style={StyleSheet.applyWidth(
                          { marginTop: 8 },
                          dimensions.width
                        )}
                      >
                        <View
                          style={StyleSheet.applyWidth(
                            {
                              backgroundColor: theme.colors.primary,
                              borderRadius: 6,
                              marginRight: 8,
                              paddingBottom: 8,
                              paddingLeft: 16,
                              paddingRight: 16,
                              paddingTop: 8,
                            },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.strongTextOnGoldButtons,
                                fontFamily: 'System',
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'Last 12 Months'}
                          </Text>
                        </View>
                      </Touchable>
                    )}
                  </>
                  {/* Twelve Months_Off */}
                  <>
                    {filterDateButton('twelveMonths') ? null : (
                      <Touchable
                        onPress={() => {
                          const handler = async () => {
                            try {
                              await addDateFilter('twelveMonths');
                              setDummyTwo(dummyTwo + 1);
                            } catch (err) {
                              console.error(err);
                            }
                          };
                          handler();
                        }}
                        style={StyleSheet.applyWidth(
                          { marginTop: 8 },
                          dimensions.width
                        )}
                      >
                        <View
                          style={StyleSheet.applyWidth(
                            {
                              backgroundColor: theme.colors.divider,
                              borderRadius: 6,
                              marginRight: 8,
                              paddingBottom: 8,
                              paddingLeft: 16,
                              paddingRight: 16,
                              paddingTop: 8,
                            },
                            dimensions.width
                          )}
                        >
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.backgroundInverseMainFont,
                                fontFamily: 'System',
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'Last 12 Months'}
                          </Text>
                        </View>
                      </Touchable>
                    )}
                  </>
                </View>
              </View>
              <Divider
                style={StyleSheet.applyWidth(
                  { height: 1, marginTop: 18 },
                  dimensions.width
                )}
                color={theme.colors.divider}
              />
            </View>
            {/* Filter By League */}
            <View
              style={StyleSheet.applyWidth(
                { paddingLeft: '4%', paddingRight: '4%', paddingTop: 28 },
                dimensions.width
              )}
            >
              <Text
                style={StyleSheet.applyWidth(
                  {
                    color: theme.colors.backgroundInverseMainFont,
                    fontFamily: 'System',
                    fontSize: 20,
                    fontWeight: '700',
                  },
                  dimensions.width
                )}
              >
                {'Leagues'}
              </Text>

              <View
                style={StyleSheet.applyWidth(
                  { flexDirection: 'row', flexWrap: 'wrap', marginTop: 6 },
                  dimensions.width
                )}
              >
                {/* All Leagues_On */}
                <>
                  {!filterAllLeagues(Constants['filterLeague']) ? null : (
                    <Touchable
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.primary,
                            borderRadius: theme.roundness,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.strongTextOnGoldButtons,
                              fontFamily: 'System',
                              fontWeight: '700',
                              typography: theme.typography.button,
                            },
                            dimensions.width
                          )}
                        >
                          {'All Leagues'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* All Leagues_Off */}
                <>
                  {filterAllLeagues(Constants['filterLeague']) ? null : (
                    <Touchable
                      onPress={() => {
                        try {
                          setGlobalVariableValue({
                            key: 'filterLeague',
                            value: [],
                          });
                          setDummyTwo(dummyTwo + 1);
                        } catch (err) {
                          console.error(err);
                        }
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.divider,
                            borderRadius: theme.roundness,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontWeight: '700',
                              typography: theme.typography.button,
                            },
                            dimensions.width
                          )}
                        >
                          {'All Leagues'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* NFL_On */}
                <>
                  {!filterLeagueButton('NFL') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await removeFilter('NFL');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.primary,
                            borderRadius: theme.roundness,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.strongTextOnGoldButtons,
                              fontFamily: 'System',
                              fontWeight: '700',
                              typography: theme.typography.button,
                            },
                            dimensions.width
                          )}
                        >
                          {'NFL'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* NFL_Off */}
                <>
                  {filterLeagueButton('NFL') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await addFilter('NFL');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.divider,
                            borderRadius: theme.roundness,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontWeight: '700',
                              typography: theme.typography.button,
                            },
                            dimensions.width
                          )}
                        >
                          {'NFL'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* NCAAF_On */}
                <>
                  {!filterLeagueButton('NCAAF') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await removeFilter('NCAAF');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.primary,
                            borderRadius: theme.roundness,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.strongTextOnGoldButtons,
                              fontFamily: 'System',
                              fontWeight: '700',
                              typography: theme.typography.button,
                            },
                            dimensions.width
                          )}
                        >
                          {'NCAAF'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* NCAAF_Off */}
                <>
                  {filterLeagueButton('NCAAF') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await addFilter('NCAAF');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.divider,
                            borderRadius: theme.roundness,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontWeight: '700',
                              typography: theme.typography.button,
                            },
                            dimensions.width
                          )}
                        >
                          {'NCAAF'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* NBA_On */}
                <>
                  {!filterLeagueButton('NBA') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await removeFilter('NBA');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.primary,
                            borderRadius: theme.roundness,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.strongTextOnGoldButtons,
                              fontFamily: 'System',
                              fontWeight: '700',
                              typography: theme.typography.button,
                            },
                            dimensions.width
                          )}
                        >
                          {'NBA'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* NBA_Off */}
                <>
                  {filterLeagueButton('NBA') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await addFilter('NBA');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.divider,
                            borderRadius: theme.roundness,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontWeight: '700',
                              typography: theme.typography.button,
                            },
                            dimensions.width
                          )}
                        >
                          {'NBA'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* NCAAMB_On */}
                <>
                  {!filterLeagueButton('NCAAMB') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await removeFilter('NCAAMB');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.primary,
                            borderRadius: theme.roundness,
                            color: theme.colors.divider,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.strongTextOnGoldButtons,
                              fontFamily: 'System',
                              fontWeight: '700',
                              typography: theme.typography.button,
                            },
                            dimensions.width
                          )}
                        >
                          {'NCAAMB'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* NCAAMB_Off */}
                <>
                  {filterLeagueButton('NCAAMB') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await addFilter('NCAAMB');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.divider,
                            borderRadius: theme.roundness,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontWeight: '700',
                              typography: theme.typography.button,
                            },
                            dimensions.width
                          )}
                        >
                          {'NCAAMB'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* MLB_On */}
                <>
                  {!filterLeagueButton('MLB') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await removeFilter('MLB');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.primary,
                            borderRadius: theme.roundness,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.strongTextOnGoldButtons,
                              fontFamily: 'System',
                              fontWeight: '700',
                              typography: theme.typography.button,
                            },
                            dimensions.width
                          )}
                        >
                          {'MLB'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* MLB_Off */}
                <>
                  {filterLeagueButton('MLB') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await addFilter('MLB');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.divider,
                            borderRadius: theme.roundness,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontWeight: '700',
                              typography: theme.typography.button,
                            },
                            dimensions.width
                          )}
                        >
                          {'MLB'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* NHL_On */}
                <>
                  {!filterLeagueButton('NHL') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await removeFilter('NHL');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.primary,
                            borderRadius: theme.roundness,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.strongTextOnGoldButtons,
                              fontFamily: 'System',
                              fontWeight: '700',
                              typography: theme.typography.button,
                            },
                            dimensions.width
                          )}
                        >
                          {'NHL'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* NHL_Off */}
                <>
                  {filterLeagueButton('NHL') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await addFilter('NHL');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.divider,
                            borderRadius: theme.roundness,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontWeight: '700',
                              typography: theme.typography.button,
                            },
                            dimensions.width
                          )}
                        >
                          {'NHL'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* UFC_On */}
                <>
                  {!filterLeagueButton('UFC') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await removeFilter('UFC');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.primary,
                            borderRadius: theme.roundness,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.strongTextOnGoldButtons,
                              fontFamily: 'System',
                              fontWeight: '700',
                              typography: theme.typography.button,
                            },
                            dimensions.width
                          )}
                        >
                          {'UFC'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* UFC_Off */}
                <>
                  {filterLeagueButton('UFC') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await addFilter('UFC');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.divider,
                            borderRadius: theme.roundness,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontWeight: '700',
                              typography: theme.typography.button,
                            },
                            dimensions.width
                          )}
                        >
                          {'UFC'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* Other Leagues_On */}
                <>
                  {!filterLeagueButton('otherLeagues') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await removeFilter('otherLeagues');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.primary,
                            borderRadius: theme.roundness,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.strongTextOnGoldButtons,
                              fontFamily: 'System',
                              fontWeight: '700',
                              typography: theme.typography.button,
                            },
                            dimensions.width
                          )}
                        >
                          {'Other Leagues'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* Other Leagues_Off */}
                <>
                  {filterLeagueButton('otherLeagues') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await addFilter('otherLeagues');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            alignContent: 'flex-end',
                            backgroundColor: theme.colors.divider,
                            borderRadius: 6,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontWeight: '700',
                              typography: theme.typography.button,
                            },
                            dimensions.width
                          )}
                        >
                          {'Other Leagues'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
              </View>
              <Divider
                style={StyleSheet.applyWidth(
                  { height: 1, marginTop: 18 },
                  dimensions.width
                )}
                color={theme.colors.divider}
              />
            </View>
            {/* Filter By Bet Type */}
            <View
              style={StyleSheet.applyWidth(
                { paddingLeft: '4%', paddingRight: '4%', paddingTop: 28 },
                dimensions.width
              )}
            >
              <Text
                style={StyleSheet.applyWidth(
                  {
                    color: theme.colors.backgroundInverseMainFont,
                    fontFamily: 'System',
                    fontSize: 20,
                    fontWeight: '700',
                  },
                  dimensions.width
                )}
              >
                {'Bet Types'}
              </Text>

              <View
                style={StyleSheet.applyWidth(
                  { flexDirection: 'row', flexWrap: 'wrap', marginTop: 6 },
                  dimensions.width
                )}
              >
                {/* All Bet Types_On */}
                <>
                  {!filterAllLeagues(Constants['filterBetType']) ? null : (
                    <Touchable
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.primary,
                            borderRadius: 6,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.strongTextOnGoldButtons,
                              fontFamily: 'System',
                              fontWeight: '700',
                            },
                            dimensions.width
                          )}
                        >
                          {'All Bet Types'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* All Bet Types_Off */}
                <>
                  {filterAllLeagues(Constants['filterBetType']) ? null : (
                    <Touchable
                      onPress={() => {
                        try {
                          setGlobalVariableValue({
                            key: 'filterBetType',
                            value: [],
                          });
                        } catch (err) {
                          console.error(err);
                        }
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.divider,
                            borderRadius: 6,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontWeight: '700',
                            },
                            dimensions.width
                          )}
                        >
                          {'All Bet Types'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* Spreads_On */}
                <>
                  {!filterBetTypeButton('spread') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await removeBetTypeFilter('spread');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.primary,
                            borderRadius: 6,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.strongTextOnGoldButtons,
                              fontFamily: 'System',
                              fontWeight: '700',
                            },
                            dimensions.width
                          )}
                        >
                          {'Spreads'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* Spreads_Off */}
                <>
                  {filterBetTypeButton('spread') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await addBetTypeFilter('spread');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.divider,
                            borderRadius: 6,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontWeight: '700',
                            },
                            dimensions.width
                          )}
                        >
                          {'Spreads'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* Totals_On */}
                <>
                  {!filterBetTypeButton('total') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await removeBetTypeFilter('total');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.primary,
                            borderRadius: 6,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.strongTextOnGoldButtons,
                              fontFamily: 'System',
                              fontWeight: '700',
                            },
                            dimensions.width
                          )}
                        >
                          {'Totals'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* Totals_Off */}
                <>
                  {filterBetTypeButton('total') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await addBetTypeFilter('total');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.divider,
                            borderRadius: 6,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontWeight: '700',
                            },
                            dimensions.width
                          )}
                        >
                          {'Totals'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* Moneylines_On */}
                <>
                  {!filterBetTypeButton('moneyline') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await removeBetTypeFilter('moneyline');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.primary,
                            borderRadius: 6,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.strongTextOnGoldButtons,
                              fontFamily: 'System',
                              fontWeight: '700',
                            },
                            dimensions.width
                          )}
                        >
                          {'Moneylines'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* Moneylines_Off */}
                <>
                  {filterBetTypeButton('moneyline') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await addBetTypeFilter('moneyline');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.divider,
                            borderRadius: 6,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontWeight: '700',
                            },
                            dimensions.width
                          )}
                        >
                          {'Moneylines'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* 3ways_On */}
                <>
                  {!filterBetTypeButton('3-way') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await removeBetTypeFilter('3-way');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.primary,
                            borderRadius: 6,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.strongTextOnGoldButtons,
                              fontFamily: 'System',
                              fontWeight: '700',
                            },
                            dimensions.width
                          )}
                        >
                          {'3-ways'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* 3ways_Off */}
                <>
                  {filterBetTypeButton('3-way') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await addBetTypeFilter('3-way');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.divider,
                            borderRadius: 6,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontWeight: '700',
                            },
                            dimensions.width
                          )}
                        >
                          {'3-ways'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* Props_On */}
                <>
                  {!filterBetTypeButton('prop') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await removeBetTypeFilter('prop');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.primary,
                            borderRadius: 6,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.strongTextOnGoldButtons,
                              fontFamily: 'System',
                              fontWeight: '700',
                            },
                            dimensions.width
                          )}
                        >
                          {'Props'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* Props_Off */}
                <>
                  {filterBetTypeButton('prop') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await addBetTypeFilter('prop');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.divider,
                            borderRadius: 6,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontWeight: '700',
                            },
                            dimensions.width
                          )}
                        >
                          {'Props'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* Parlays_On */}
                <>
                  {!filterBetTypeButton('parlay') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await removeBetTypeFilter('parlay');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.primary,
                            borderRadius: 6,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.strongTextOnGoldButtons,
                              fontFamily: 'System',
                              fontWeight: '700',
                            },
                            dimensions.width
                          )}
                        >
                          {'Parlays'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* Parlays_Off */}
                <>
                  {filterBetTypeButton('parlay') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await addBetTypeFilter('parlay');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.divider,
                            borderRadius: 6,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontWeight: '700',
                            },
                            dimensions.width
                          )}
                        >
                          {'Parlays'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* Teasers_On */}
                <>
                  {!filterBetTypeButton('teaser') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await removeBetTypeFilter('teaser');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.primary,
                            borderRadius: 6,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.strongTextOnGoldButtons,
                              fontFamily: 'System',
                              fontWeight: '700',
                            },
                            dimensions.width
                          )}
                        >
                          {'Teasers'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
                {/* Teasers_Off */}
                <>
                  {filterBetTypeButton('teaser') ? null : (
                    <Touchable
                      onPress={() => {
                        const handler = async () => {
                          try {
                            await addBetTypeFilter('teaser');
                            setDummyTwo(dummyTwo + 1);
                          } catch (err) {
                            console.error(err);
                          }
                        };
                        handler();
                      }}
                      style={StyleSheet.applyWidth(
                        { marginTop: 8 },
                        dimensions.width
                      )}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            backgroundColor: theme.colors.divider,
                            borderRadius: 6,
                            marginRight: 8,
                            paddingBottom: 8,
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 8,
                          },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontWeight: '700',
                            },
                            dimensions.width
                          )}
                        >
                          {'Teasers'}
                        </Text>
                      </View>
                    </Touchable>
                  )}
                </>
              </View>
              <Divider
                style={StyleSheet.applyWidth(
                  { height: 1, marginTop: 18 },
                  dimensions.width
                )}
                color={theme.colors.divider}
              />
            </View>
            {/* Advanced Filters (Hidden) */}
            <>
              {Constants['toggleAdvancedFilters'] ? null : (
                <View>
                  {/* Advanced Title */}
                  <View
                    style={StyleSheet.applyWidth(
                      { paddingLeft: '4%', paddingRight: '4%', paddingTop: 28 },
                      dimensions.width
                    )}
                  >
                    <Touchable
                      onPress={() => {
                        try {
                          setGlobalVariableValue({
                            key: 'toggleAdvancedFilters',
                            value: true,
                          });
                        } catch (err) {
                          console.error(err);
                        }
                      }}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          { alignItems: 'center', flexDirection: 'row' },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontSize: 20,
                              fontWeight: '700',
                            },
                            dimensions.width
                          )}
                        >
                          {'Advanced Filters'}
                        </Text>
                        <Icon
                          name={'Ionicons/ios-chevron-down'}
                          size={20}
                          color={theme.colors.backgroundInverseMainFont}
                        />
                      </View>
                    </Touchable>
                  </View>
                </View>
              )}
            </>
            {/* Advanced Filters (Shown) */}
            <>
              {!Constants['toggleAdvancedFilters'] ? null : (
                <View>
                  {/* Advanced Title */}
                  <View
                    style={StyleSheet.applyWidth(
                      { paddingLeft: '4%', paddingRight: '4%', paddingTop: 28 },
                      dimensions.width
                    )}
                  >
                    <Touchable
                      onPress={() => {
                        try {
                          setGlobalVariableValue({
                            key: 'toggleAdvancedFilters',
                            value: false,
                          });
                        } catch (err) {
                          console.error(err);
                        }
                      }}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          { alignItems: 'center', flexDirection: 'row' },
                          dimensions.width
                        )}
                      >
                        <Text
                          style={StyleSheet.applyWidth(
                            {
                              color: theme.colors.backgroundInverseMainFont,
                              fontFamily: 'System',
                              fontSize: 20,
                              fontWeight: '700',
                            },
                            dimensions.width
                          )}
                        >
                          {'Advanced Filters'}
                        </Text>
                        <Icon
                          name={'Ionicons/ios-chevron-up'}
                          size={20}
                          color={theme.colors.backgroundInverseMainFont}
                        />
                      </View>
                    </Touchable>
                  </View>
                  {/* Filter By Favorite/Underdog  */}
                  <View
                    style={StyleSheet.applyWidth(
                      { paddingLeft: '4%', paddingRight: '4%', paddingTop: 28 },
                      dimensions.width
                    )}
                  >
                    <Text
                      style={StyleSheet.applyWidth(
                        {
                          color: theme.colors.backgroundInverseMainFont,
                          fontFamily: 'System',
                          fontSize: 20,
                          fontWeight: '700',
                        },
                        dimensions.width
                      )}
                    >
                      {'Favorites/Underdogs'}
                    </Text>

                    <View
                      style={StyleSheet.applyWidth(
                        {
                          flexDirection: 'row',
                          flexWrap: 'wrap',
                          marginTop: 6,
                        },
                        dimensions.width
                      )}
                    >
                      {/* All_On */}
                      <>
                        {!filterAllLeagues(
                          Constants['filterUnderdog']
                        ) ? null : (
                          <Touchable
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.primary,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color: theme.colors.strongTextOnGoldButtons,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'All'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* All_Off */}
                      <>
                        {filterAllLeagues(
                          Constants['filterUnderdog']
                        ) ? null : (
                          <Touchable
                            onPress={() => {
                              try {
                                setGlobalVariableValue({
                                  key: 'filterUnderdog',
                                  value: [],
                                });
                              } catch (err) {
                                console.error(err);
                              }
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.divider,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color:
                                      theme.colors.backgroundInverseMainFont,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'All'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* Favorites_On */}
                      <>
                        {!filterUnderdogButton('favorite') ? null : (
                          <Touchable
                            onPress={() => {
                              try {
                                setGlobalVariableValue({
                                  key: 'filterUnderdog',
                                  value: [],
                                });
                              } catch (err) {
                                console.error(err);
                              }
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.primary,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color: theme.colors.strongTextOnGoldButtons,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Favorites'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* Favorites_Off */}
                      <>
                        {filterUnderdogButton('favorite') ? null : (
                          <Touchable
                            onPress={() => {
                              const handler = async () => {
                                try {
                                  await addUnderdogFilter('favorite');
                                  setDummyTwo(dummyTwo + 1);
                                } catch (err) {
                                  console.error(err);
                                }
                              };
                              handler();
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.divider,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color:
                                      theme.colors.backgroundInverseMainFont,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Favorites'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* Underdogs_On */}
                      <>
                        {!filterUnderdogButton('underdog') ? null : (
                          <Touchable
                            onPress={() => {
                              try {
                                setGlobalVariableValue({
                                  key: 'filterUnderdog',
                                  value: [],
                                });
                              } catch (err) {
                                console.error(err);
                              }
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.primary,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color: theme.colors.strongTextOnGoldButtons,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Underdogs'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* Underdogs_Off */}
                      <>
                        {filterUnderdogButton('underdog') ? null : (
                          <Touchable
                            onPress={() => {
                              const handler = async () => {
                                try {
                                  await addUnderdogFilter('underdog');
                                  setDummyTwo(dummyTwo + 1);
                                } catch (err) {
                                  console.error(err);
                                }
                              };
                              handler();
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.divider,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color:
                                      theme.colors.backgroundInverseMainFont,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Underdogs'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                    </View>
                    <Divider
                      style={StyleSheet.applyWidth(
                        { height: 1, marginTop: 18 },
                        dimensions.width
                      )}
                      color={theme.colors.divider}
                    />
                  </View>
                  {/* Filter By Over/Under */}
                  <View
                    style={StyleSheet.applyWidth(
                      { paddingLeft: '4%', paddingRight: '4%', paddingTop: 28 },
                      dimensions.width
                    )}
                  >
                    <Text
                      style={StyleSheet.applyWidth(
                        {
                          color: theme.colors.backgroundInverseMainFont,
                          fontFamily: 'System',
                          fontSize: 20,
                          fontWeight: '700',
                        },
                        dimensions.width
                      )}
                    >
                      {'Overs/Unders'}
                    </Text>

                    <View
                      style={StyleSheet.applyWidth(
                        {
                          flexDirection: 'row',
                          flexWrap: 'wrap',
                          marginTop: 6,
                        },
                        dimensions.width
                      )}
                    >
                      {/* All_On */}
                      <>
                        {!filterAllLeagues(Constants['filterUnder']) ? null : (
                          <Touchable
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.primary,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color: theme.colors.strongTextOnGoldButtons,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'All'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* All_Off */}
                      <>
                        {filterAllLeagues(Constants['filterUnder']) ? null : (
                          <Touchable
                            onPress={() => {
                              try {
                                setGlobalVariableValue({
                                  key: 'filterUnder',
                                  value: [],
                                });
                              } catch (err) {
                                console.error(err);
                              }
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.divider,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color:
                                      theme.colors.backgroundInverseMainFont,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'All'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* Overs_On */}
                      <>
                        {!filterUnderButton('Over') ? null : (
                          <Touchable
                            onPress={() => {
                              try {
                                setGlobalVariableValue({
                                  key: 'filterUnder',
                                  value: [],
                                });
                              } catch (err) {
                                console.error(err);
                              }
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.primary,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color: theme.colors.strongTextOnGoldButtons,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Overs'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* Overs_Off */}
                      <>
                        {filterUnderButton('Over') ? null : (
                          <Touchable
                            onPress={() => {
                              const handler = async () => {
                                try {
                                  await addUnderFilter('Over');
                                  setDummyTwo(dummyTwo + 1);
                                } catch (err) {
                                  console.error(err);
                                }
                              };
                              handler();
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.divider,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color:
                                      theme.colors.backgroundInverseMainFont,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Overs'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* Unders_On */}
                      <>
                        {!filterUnderButton('Under') ? null : (
                          <Touchable
                            onPress={() => {
                              try {
                                setGlobalVariableValue({
                                  key: 'filterUnder',
                                  value: [],
                                });
                              } catch (err) {
                                console.error(err);
                              }
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.primary,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color: theme.colors.strongTextOnGoldButtons,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Unders'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* Unders_Off */}
                      <>
                        {filterUnderButton('Under') ? null : (
                          <Touchable
                            onPress={() => {
                              const handler = async () => {
                                try {
                                  await addUnderFilter('Under');
                                  setDummyTwo(dummyTwo + 1);
                                } catch (err) {
                                  console.error(err);
                                }
                              };
                              handler();
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.divider,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color:
                                      theme.colors.backgroundInverseMainFont,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Unders'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                    </View>
                    <Divider
                      style={StyleSheet.applyWidth(
                        { height: 1, marginTop: 18 },
                        dimensions.width
                      )}
                      color={theme.colors.divider}
                    />
                  </View>
                  {/* Filter By PreGame/Live/Future */}
                  <View
                    style={StyleSheet.applyWidth(
                      { paddingLeft: '4%', paddingRight: '4%', paddingTop: 28 },
                      dimensions.width
                    )}
                  >
                    <Text
                      style={StyleSheet.applyWidth(
                        {
                          color: theme.colors.backgroundInverseMainFont,
                          fontFamily: 'System',
                          fontSize: 20,
                          fontWeight: '700',
                        },
                        dimensions.width
                      )}
                    >
                      {'Pre-Game/Live/Futures'}
                    </Text>

                    <View
                      style={StyleSheet.applyWidth(
                        {
                          flexDirection: 'row',
                          flexWrap: 'wrap',
                          marginTop: 6,
                        },
                        dimensions.width
                      )}
                    >
                      {/* All_On */}
                      <>
                        {!filterAllLeagues(
                          Constants['filterLiveBet']
                        ) ? null : (
                          <Touchable
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.primary,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color: theme.colors.strongTextOnGoldButtons,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'All'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* All_Off */}
                      <>
                        {filterAllLeagues(Constants['filterLiveBet']) ? null : (
                          <Touchable
                            onPress={() => {
                              try {
                                setGlobalVariableValue({
                                  key: 'filterLiveBet',
                                  value: [],
                                });
                              } catch (err) {
                                console.error(err);
                              }
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.divider,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color:
                                      theme.colors.backgroundInverseMainFont,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'All'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* PreGame_On */}
                      <>
                        {!filterLiveBetButton('preGame') ? null : (
                          <Touchable
                            onPress={() => {
                              const handler = async () => {
                                try {
                                  await removeLiveBetFilter('preGame');
                                  setDummyTwo(dummyTwo + 1);
                                } catch (err) {
                                  console.error(err);
                                }
                              };
                              handler();
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.primary,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color: theme.colors.strongTextOnGoldButtons,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Pre-Game Bets'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* PreGame_Off */}
                      <>
                        {filterLiveBetButton('preGame') ? null : (
                          <Touchable
                            onPress={() => {
                              const handler = async () => {
                                try {
                                  await addLiveBetFilter('preGame');
                                  setDummyTwo(dummyTwo + 1);
                                } catch (err) {
                                  console.error(err);
                                }
                              };
                              handler();
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.divider,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color:
                                      theme.colors.backgroundInverseMainFont,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Pre-Game Bets'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* Live_On */}
                      <>
                        {!filterLiveBetButton('live') ? null : (
                          <Touchable
                            onPress={() => {
                              const handler = async () => {
                                try {
                                  await removeLiveBetFilter('live');
                                  setDummyTwo(dummyTwo + 1);
                                } catch (err) {
                                  console.error(err);
                                }
                              };
                              handler();
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.primary,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color: theme.colors.strongTextOnGoldButtons,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Live Bets'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* Live_Off */}
                      <>
                        {filterLiveBetButton('live') ? null : (
                          <Touchable
                            onPress={() => {
                              const handler = async () => {
                                try {
                                  await addLiveBetFilter('live');
                                  setDummyTwo(dummyTwo + 1);
                                } catch (err) {
                                  console.error(err);
                                }
                              };
                              handler();
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.divider,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color:
                                      theme.colors.backgroundInverseMainFont,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Live Bets'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* Futures_On */}
                      <>
                        {!filterLiveBetButton('future') ? null : (
                          <Touchable
                            onPress={() => {
                              const handler = async () => {
                                try {
                                  await removeLiveBetFilter('future');
                                  setDummyTwo(dummyTwo + 1);
                                } catch (err) {
                                  console.error(err);
                                }
                              };
                              handler();
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.primary,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color: theme.colors.strongTextOnGoldButtons,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Futures'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* Futures_Off */}
                      <>
                        {filterLiveBetButton('future') ? null : (
                          <Touchable
                            onPress={() => {
                              const handler = async () => {
                                try {
                                  await addLiveBetFilter('future');
                                  setDummyTwo(dummyTwo + 1);
                                } catch (err) {
                                  console.error(err);
                                }
                              };
                              handler();
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.divider,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color:
                                      theme.colors.backgroundInverseMainFont,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Futures'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                    </View>
                    <Divider
                      style={StyleSheet.applyWidth(
                        { height: 1, marginTop: 18 },
                        dimensions.width
                      )}
                      color={theme.colors.divider}
                    />
                  </View>
                  {/* Filter By Outcome */}
                  <View
                    style={StyleSheet.applyWidth(
                      { paddingLeft: '4%', paddingRight: '4%', paddingTop: 28 },
                      dimensions.width
                    )}
                  >
                    <Text
                      style={StyleSheet.applyWidth(
                        {
                          color: theme.colors.backgroundInverseMainFont,
                          fontFamily: 'System',
                          fontSize: 20,
                          fontWeight: '700',
                        },
                        dimensions.width
                      )}
                    >
                      {'Outcome'}
                    </Text>

                    <View
                      style={StyleSheet.applyWidth(
                        {
                          flexDirection: 'row',
                          flexWrap: 'wrap',
                          marginTop: 6,
                        },
                        dimensions.width
                      )}
                    >
                      {/* All_On */}
                      <>
                        {!filterAllLeagues(
                          Constants['filterOutcome']
                        ) ? null : (
                          <Touchable
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.primary,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color: theme.colors.strongTextOnGoldButtons,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'All'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* All_Off */}
                      <>
                        {filterAllLeagues(Constants['filterOutcome']) ? null : (
                          <Touchable
                            onPress={() => {
                              try {
                                setGlobalVariableValue({
                                  key: 'filterOutcome',
                                  value: [],
                                });
                              } catch (err) {
                                console.error(err);
                              }
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.divider,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color:
                                      theme.colors.backgroundInverseMainFont,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'All'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* Wins_On */}
                      <>
                        {!filterOutcomeButton('win') ? null : (
                          <Touchable
                            onPress={() => {
                              const handler = async () => {
                                try {
                                  await removeOutcomeFilter('win');
                                  setDummyTwo(dummyTwo + 1);
                                } catch (err) {
                                  console.error(err);
                                }
                              };
                              handler();
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.primary,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color: theme.colors.strongTextOnGoldButtons,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Wins'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* Wins_Off */}
                      <>
                        {filterOutcomeButton('win') ? null : (
                          <Touchable
                            onPress={() => {
                              const handler = async () => {
                                try {
                                  await addOutcomeFilter('win');
                                  setDummyTwo(dummyTwo + 1);
                                } catch (err) {
                                  console.error(err);
                                }
                              };
                              handler();
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.divider,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color:
                                      theme.colors.backgroundInverseMainFont,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Wins'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* Losses_On */}
                      <>
                        {!filterOutcomeButton('loss') ? null : (
                          <Touchable
                            onPress={() => {
                              const handler = async () => {
                                try {
                                  await removeOutcomeFilter('loss');
                                  setDummyTwo(dummyTwo + 1);
                                } catch (err) {
                                  console.error(err);
                                }
                              };
                              handler();
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.primary,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color: theme.colors.strongTextOnGoldButtons,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Losses'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* Losses_Off */}
                      <>
                        {filterOutcomeButton('loss') ? null : (
                          <Touchable
                            onPress={() => {
                              const handler = async () => {
                                try {
                                  await addOutcomeFilter('loss');
                                  setDummyTwo(dummyTwo + 1);
                                } catch (err) {
                                  console.error(err);
                                }
                              };
                              handler();
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.divider,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color:
                                      theme.colors.backgroundInverseMainFont,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Losses'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* Pushes_On */}
                      <>
                        {!filterOutcomeButton('push') ? null : (
                          <Touchable
                            onPress={() => {
                              const handler = async () => {
                                try {
                                  await removeOutcomeFilter('push');
                                  setDummyTwo(dummyTwo + 1);
                                } catch (err) {
                                  console.error(err);
                                }
                              };
                              handler();
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.primary,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color: theme.colors.strongTextOnGoldButtons,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Pushes'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                      {/* Pushes_Off */}
                      <>
                        {filterOutcomeButton('push') ? null : (
                          <Touchable
                            onPress={() => {
                              const handler = async () => {
                                try {
                                  await addOutcomeFilter('push');
                                  setDummyTwo(dummyTwo + 1);
                                } catch (err) {
                                  console.error(err);
                                }
                              };
                              handler();
                            }}
                            style={StyleSheet.applyWidth(
                              { marginTop: 8 },
                              dimensions.width
                            )}
                          >
                            <View
                              style={StyleSheet.applyWidth(
                                {
                                  backgroundColor: theme.colors.divider,
                                  borderRadius: 6,
                                  marginRight: 8,
                                  paddingBottom: 8,
                                  paddingLeft: 16,
                                  paddingRight: 16,
                                  paddingTop: 8,
                                },
                                dimensions.width
                              )}
                            >
                              <Text
                                style={StyleSheet.applyWidth(
                                  {
                                    color:
                                      theme.colors.backgroundInverseMainFont,
                                    fontFamily: 'System',
                                    fontWeight: '700',
                                  },
                                  dimensions.width
                                )}
                              >
                                {'Pushes'}
                              </Text>
                            </View>
                          </Touchable>
                        )}
                      </>
                    </View>
                    <Divider
                      style={StyleSheet.applyWidth(
                        { height: 1, marginTop: 18 },
                        dimensions.width
                      )}
                      color={theme.colors.divider}
                    />
                  </View>
                </View>
              )}
            </>
          </ScrollView>

          <View
            style={StyleSheet.applyWidth(
              {
                alignItems: 'flex-end',
                bottom: 30,
                position: 'absolute',
                right: '4%',
              },
              dimensions.width
            )}
          >
            <Surface
              style={StyleSheet.applyWidth(
                { backgroundColor: theme.colors.background, borderRadius: 8 },
                dimensions.width
              )}
              elevation={2}
            >
              <Touchable
                onPress={() => {
                  try {
                    setGlobalVariableValue({
                      key: 'filterLeagueApply',
                      value: arrayChange(Constants['filterLeague']),
                    });
                    setGlobalVariableValue({
                      key: 'filterBetTypeApply',
                      value: arrayChange(Constants['filterBetType']),
                    });
                    setGlobalVariableValue({
                      key: 'filterSportsbookApply',
                      value: arrayChange(Constants['filterSportsbook']),
                    });
                    setGlobalVariableValue({
                      key: 'filterDateApply',
                      value: arrayChange(Constants['filterDate']),
                    });
                    setGlobalVariableValue({
                      key: 'filterUnderdogApply',
                      value: arrayChange(Constants['filterUnderdog']),
                    });
                    setGlobalVariableValue({
                      key: 'filterUnderApply',
                      value: arrayChange(Constants['filterUnder']),
                    });
                    setGlobalVariableValue({
                      key: 'filterLiveBetApply',
                      value: arrayChange(Constants['filterLiveBet']),
                    });
                    setGlobalVariableValue({
                      key: 'filterOutcomeApply',
                      value: arrayChange(Constants['filterOutcome']),
                    });
                    setGlobalVariableValue({
                      key: 'toggleFiltersModal',
                      value: false,
                    });
                    segmentLogTrack(
                      segment,
                      'Filters Applied',
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined
                    );
                  } catch (err) {
                    console.error(err);
                  }
                }}
              >
                <View
                  style={StyleSheet.applyWidth(
                    {
                      backgroundColor: theme.colors.good,
                      borderRadius: 8,
                      paddingBottom: 8,
                      paddingLeft: 16,
                      paddingRight: 16,
                      paddingTop: 8,
                    },
                    dimensions.width
                  )}
                >
                  {/* Apply */}
                  <>
                    {loadingApply ? null : (
                      <Text
                        style={StyleSheet.applyWidth(
                          {
                            color: theme.colors.backgroundInverseMainFont,
                            fontFamily: 'System',
                            fontSize: 16,
                            fontWeight: '700',
                          },
                          dimensions.width
                        )}
                      >
                        {'Apply'}
                        {countFilters()}
                      </Text>
                    )}
                  </>
                </View>
              </Touchable>
            </Surface>
          </View>
        </View>
      </Modal>
      {/* Menu Modal */}
      <Modal
        visible={Constants['toggleMenuModal']}
        animationType={'slide'}
        presentationStyle={'pageSheet'}
        transparent={true}
      >
        <Touchable
          onPress={() => {
            try {
              setGlobalVariableValue({
                key: 'toggleMenuModal',
                value: false,
              });
            } catch (err) {
              console.error(err);
            }
          }}
          style={StyleSheet.applyWidth({ height: '30%' }, dimensions.width)}
        />
        <View
          style={StyleSheet.applyWidth(
            {
              backgroundColor: theme.colors.background,
              borderRadius: 10,
              borderTopLeftRadius: 10,
              borderTopRightRadius: 10,
              height: '70%',
              justifyContent: 'space-between',
              paddingBottom: 36,
            },
            dimensions.width
          )}
        >
          <View
            style={StyleSheet.applyWidth(
              { justifyContent: 'space-between' },
              dimensions.width
            )}
          >
            {/* Menu Bar */}
            <View
              style={StyleSheet.applyWidth(
                { flexDirection: 'row', justifyContent: 'space-between' },
                dimensions.width
              )}
            >
              {/* Left Button */}
              <View
                style={StyleSheet.applyWidth(
                  { width: '25%' },
                  dimensions.width
                )}
              />
              <View
                style={StyleSheet.applyWidth(
                  {
                    alignItems: 'center',
                    justifyContent: 'center',
                    width: '50%',
                  },
                  dimensions.width
                )}
              />
              <View
                style={StyleSheet.applyWidth({ width: 25 }, dimensions.width)}
              >
                <Touchable
                  onPress={() => {
                    try {
                      setGlobalVariableValue({
                        key: 'toggleMenuModal',
                        value: false,
                      });
                    } catch (err) {
                      console.error(err);
                    }
                  }}
                >
                  <View
                    style={StyleSheet.applyWidth(
                      {
                        alignItems: 'center',
                        flexDirection: 'row',
                        height: 50,
                        justifyContent: 'flex-end',
                        paddingLeft: 16,
                        paddingRight: 16,
                      },
                      dimensions.width
                    )}
                  >
                    {/* Close */}
                    <Icon
                      name={'Ionicons/ios-close'}
                      size={32}
                      color={theme.colors.lightLowImportanceText}
                    />
                  </View>
                </Touchable>
              </View>
            </View>
            {/* Profile and Buttons */}
            <View
              style={StyleSheet.applyWidth(
                { paddingLeft: '4%', paddingRight: '4%' },
                dimensions.width
              )}
            >
              <View
                style={StyleSheet.applyWidth(
                  { alignItems: 'center', flexDirection: 'row' },
                  dimensions.width
                )}
              >
                {/* Profile Information Fetch */}
                <SwaggerAPIApi.FetchGetUserInfoGET
                  interanlId={Constants['internalId']}
                >
                  {({ loading, error, data, refetchGetUserInfo }) => {
                    const profileInformationFetchData = data;
                    if (!profileInformationFetchData || loading) {
                      return <ActivityIndicator />;
                    }

                    if (error) {
                      return (
                        <Text style={{ textAlign: 'center' }}>
                          There was a problem fetching this data
                        </Text>
                      );
                    }

                    return (
                      <View
                        style={StyleSheet.applyWidth(
                          { alignItems: 'center', flexDirection: 'row' },
                          dimensions.width
                        )}
                      >
                        <Surface
                          style={StyleSheet.applyWidth(
                            { borderRadius: 31 },
                            dimensions.width
                          )}
                          elevation={2}
                        >
                          <Circle
                            size={62}
                            bgColor={theme.colors.backgroundInverseMainFont}
                          >
                            {/* Profile Picture */}
                            <>
                              {!Constants['profilePictureUrl'] ? null : (
                                <CircleImage
                                  source={{
                                    uri: `${Constants['profilePictureUrl']}`,
                                  }}
                                  size={60}
                                />
                              )}
                            </>
                            {/* Default Profile Picture */}
                            <>
                              {Constants['profilePictureUrl'] ? null : (
                                <Circle
                                  size={60}
                                  bgColor={theme.colors.lightLowImportanceText}
                                >
                                  <LinearGradient
                                    style={StyleSheet.applyWidth(
                                      {
                                        alignItems: 'center',
                                        height: '100%',
                                        justifyContent: 'center',
                                        width: '100%',
                                      },
                                      dimensions.width
                                    )}
                                    endY={100}
                                    endX={100}
                                    color2={theme.colors.divider}
                                    color1={theme.colors.lightLowImportanceText}
                                  >
                                    <Text
                                      style={StyleSheet.applyWidth(
                                        {
                                          color:
                                            theme.colors
                                              .backgroundInverseMainFont,
                                          fontFamily: 'System',
                                          fontSize: 30,
                                          fontWeight: '400',
                                          textAlign: 'center',
                                          textTransform: 'uppercase',
                                        },
                                        dimensions.width
                                      )}
                                    >
                                      {firstCharacter(
                                        profileInformationFetchData?.firstName
                                      )}
                                      {firstCharacter(
                                        profileInformationFetchData?.lastName
                                      )}
                                    </Text>
                                  </LinearGradient>
                                </Circle>
                              )}
                            </>
                          </Circle>
                        </Surface>

                        <View
                          style={StyleSheet.applyWidth(
                            {
                              alignItems: 'flex-start',
                              flex: 1,
                              justifyContent: 'center',
                              marginLeft: 16,
                            },
                            dimensions.width
                          )}
                        >
                          {/* Name */}
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.backgroundInverseMainFont,
                                fontFamily: 'System',
                                fontSize: 20,
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {profileInformationFetchData?.firstName}{' '}
                            {profileInformationFetchData?.lastName}
                          </Text>
                          {/* Username */}
                          <Text
                            style={StyleSheet.applyWidth(
                              {
                                color: theme.colors.lightLowImportanceText,
                                fontFamily: 'System',
                                fontSize: 12,
                                fontWeight: '700',
                              },
                              dimensions.width
                            )}
                          >
                            {'@'}
                            {profileInformationFetchData?.userName}
                          </Text>
                        </View>
                      </View>
                    );
                  }}
                </SwaggerAPIApi.FetchGetUserInfoGET>
              </View>

              <View
                style={StyleSheet.applyWidth(
                  { alignItems: 'flex-start', marginTop: 22 },
                  dimensions.width
                )}
              >
                {/* Profile & Settings */}
                <Button
                  onPress={() => {
                    try {
                      setGlobalVariableValue({
                        key: 'toggleMenuModal',
                        value: false,
                      });
                      navigation.navigate('SettingsBetaScreen');
                      segmentLogTrack(
                        segment,
                        'Navigated to Settings',
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined
                      );
                    } catch (err) {
                      console.error(err);
                    }
                  }}
                  style={StyleSheet.applyWidth(
                    {
                      backgroundColor: theme.colors.background,
                      borderRadius: 8,
                      color: theme.colors.backgroundInverseMainFont,
                      fontFamily: 'System',
                      fontSize: 16,
                      fontWeight: '700',
                      marginBottom: 10,
                      textAlign: 'center',
                    },
                    dimensions.width
                  )}
                  title={'Profile & Settings'}
                  icon={'Ionicons/ios-settings-sharp'}
                />
                {/* Sync A Sportsbook */}
                <>
                  {Constants['waitlisted'] ? null : (
                    <Button
                      onPress={() => {
                        try {
                          setGlobalVariableValue({
                            key: 'toggleMenuModal',
                            value: false,
                          });
                          navigation.navigate('SharpSportsFormScreen');
                          segmentLogTrack(
                            segment,
                            'Sync a sportsbook',
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined
                          );
                        } catch (err) {
                          console.error(err);
                        }
                      }}
                      style={StyleSheet.applyWidth(
                        {
                          backgroundColor: theme.colors.background,
                          borderRadius: 8,
                          color: theme.colors.backgroundInverseMainFont,
                          fontFamily: 'System',
                          fontSize: 16,
                          fontWeight: '700',
                          marginBottom: 10,
                          textAlign: 'center',
                        },
                        dimensions.width
                      )}
                      title={'Sync a Sportsbook'}
                      icon={'Ionicons/ios-add-circle'}
                    />
                  )}
                </>
                {/* Adjust Unit Size */}
                <Button
                  onPress={() => {
                    try {
                      setGlobalVariableValue({
                        key: 'toggleMenuModal',
                        value: false,
                      });
                      navigation.navigate('AdjustUnitSizeScreen');
                      segmentLogTrack(
                        segment,
                        'Navigated to Adjust Unit Size',
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined
                      );
                    } catch (err) {
                      console.error(err);
                    }
                  }}
                  style={StyleSheet.applyWidth(
                    {
                      backgroundColor: theme.colors.background,
                      borderRadius: 8,
                      color: theme.colors.backgroundInverseMainFont,
                      fontFamily: 'System',
                      fontSize: 16,
                      fontWeight: '700',
                      marginBottom: 10,
                      textAlign: 'center',
                    },
                    dimensions.width
                  )}
                  title={`Adjust Unit Size ($${Constants['userDefaultUnitSize']})`}
                  icon={'MaterialCommunityIcons/plus-minus-box'}
                />
                {/* Join the Discord */}
                <Button
                  onPress={() => {
                    const handler = async () => {
                      try {
                        await WebBrowser.openBrowserAsync(
                          'https://discord.gg/6bGRD7BpUD'
                        );
                        segmentLogTrack(
                          segment,
                          'Join the Discord',
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined,
                          undefined
                        );
                      } catch (err) {
                        console.error(err);
                      }
                    };
                    handler();
                  }}
                  style={StyleSheet.applyWidth(
                    {
                      backgroundColor: theme.colors.background,
                      borderRadius: 8,
                      color: theme.colors.backgroundInverseMainFont,
                      fontFamily: 'System',
                      fontSize: 16,
                      fontWeight: '700',
                      marginBottom: 10,
                      textAlign: 'center',
                    },
                    dimensions.width
                  )}
                  title={'Join the Discord'}
                  icon={'MaterialCommunityIcons/discord'}
                />
              </View>
            </View>
          </View>

          <View
            style={StyleSheet.applyWidth(
              { alignItems: 'center' },
              dimensions.width
            )}
          >
            {/* Sign Out */}
            <Button
              onPress={() => {
                try {
                  setGlobalVariableValue({
                    key: 'toggleMenuModal',
                    value: false,
                  });
                  setGlobalVariableValue({
                    key: 'toggleSignOutActionSheet',
                    value: true,
                  });
                  segmentLogTrack(
                    segment,
                    'Sign out action sheet opened',
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                    undefined
                  );
                } catch (err) {
                  console.error(err);
                }
              }}
              style={StyleSheet.applyWidth(
                {
                  backgroundColor: theme.colors.divider,
                  borderRadius: 8,
                  color: theme.colors.backgroundInverseMainFont,
                  fontFamily: 'System',
                  fontSize: 16,
                  fontWeight: '700',
                  textAlign: 'center',
                },
                dimensions.width
              )}
              title={'Sign Out'}
            />
          </View>
        </View>
      </Modal>
      {/* Action Sheet - Sign Out */}
      <ActionSheet visible={Constants['toggleSignOutActionSheet']}>
        {/* Action Sheet Item - Sign Out */}
        <ActionSheetItem
          onPress={() => {
            try {
              setGlobalVariableValue({
                key: 'toggleSignOutActionSheet',
                value: false,
              });
              setGlobalVariableValue({
                key: 'authToken',
                value: '',
              });
              navigation.navigate('Welcome_Stack', {
                screen: 'Welcome1Screen',
              });
              segmentLogTrack(
                segment,
                'User sign out',
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined
              );
            } catch (err) {
              console.error(err);
            }
          }}
          style={StyleSheet.applyWidth(
            { fontSize: 18, textAlign: 'center' },
            dimensions.width
          )}
          label={'Sign Out'}
          color={theme.colors.strong}
        />
        <ActionSheetCancel
          onPress={() => {
            try {
              setGlobalVariableValue({
                key: 'toggleSignOutActionSheet',
                value: false,
              });
              setGlobalVariableValue({
                key: 'toggleMenuModal',
                value: true,
              });
              segmentLogTrack(
                segment,
                'Sign out action sheet closed',
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined
              );
            } catch (err) {
              console.error(err);
            }
          }}
          style={StyleSheet.applyWidth(
            { fontFamily: 'System', fontSize: 18, fontWeight: '700' },
            dimensions.width
          )}
          label={'Cancel'}
        />
      </ActionSheet>
      {/* Push Notifications Prompted */}
      <>
        {Constants['userPushNotificationsPrompt'] ? null : (
          <View>
            {/* Allow Push Notifications Popup Modal */}
            <Modal
              style={StyleSheet.applyWidth(
                { backgroundColor: theme.colors.background },
                dimensions.width
              )}
              visible={Constants['userPushNotificationRemind']}
              animationType={'slide'}
              presentationStyle={'pageSheet'}
              transparent={true}
            >
              <View
                style={StyleSheet.applyWidth(
                  {
                    backgroundColor: theme.colors.background,
                    borderTopLeftRadius: 10,
                    borderTopRightRadius: 10,
                    height: '100%',
                    overflow: 'hidden',
                  },
                  dimensions.width
                )}
              >
                {/* Top Bar */}
                <View
                  style={StyleSheet.applyWidth(
                    {
                      flexDirection: 'row',
                      height: 50,
                      justifyContent: 'space-between',
                    },
                    dimensions.width
                  )}
                >
                  {/* Left Button */}
                  <View
                    style={StyleSheet.applyWidth(
                      {
                        alignItems: 'flex-start',
                        borderRadius: 0,
                        justifyContent: 'center',
                        width: '33%',
                      },
                      dimensions.width
                    )}
                  />
                  <View
                    style={StyleSheet.applyWidth(
                      {
                        alignContent: 'center',
                        alignItems: 'center',
                        height: 50,
                        justifyContent: 'center',
                      },
                      dimensions.width
                    )}
                  />
                  {/* Right Button */}
                  <View
                    style={StyleSheet.applyWidth(
                      {
                        alignItems: 'flex-end',
                        borderRadius: 0,
                        justifyContent: 'center',
                        width: '33%',
                      },
                      dimensions.width
                    )}
                  >
                    <Touchable
                      onPress={() => {
                        try {
                          setGlobalVariableValue({
                            key: 'userPushNotificationRemind',
                            value: false,
                          });
                          if (Constants['userPushNotificationsBuffer']) {
                            return;
                          }
                          setGlobalVariableValue({
                            key: 'userPushNotificationsPrompt',
                            value: true,
                          });
                        } catch (err) {
                          console.error(err);
                        }
                      }}
                    >
                      <View
                        style={StyleSheet.applyWidth(
                          {
                            alignItems: 'flex-end',
                            height: 50,
                            justifyContent: 'center',
                            paddingLeft: 16,
                            paddingRight: 16,
                          },
                          dimensions.width
                        )}
                      >
                        {/* Close */}
                        <Icon
                          size={28}
                          color={theme.colors.lightLowImportanceText}
                          name={'Ionicons/ios-close'}
                        />
                      </View>
                    </Touchable>
                  </View>
                </View>

                <View
                  style={StyleSheet.applyWidth(
                    {
                      backgroundColor: theme.colors['Background'],
                      flex: 1,
                      justifyContent: 'space-between',
                    },
                    dimensions.width
                  )}
                >
                  <View>
                    <View
                      style={StyleSheet.applyWidth(
                        { minHeight: 50 },
                        dimensions.width
                      )}
                    >
                      <Text
                        style={StyleSheet.applyWidth(
                          {
                            color: theme.colors.backgroundInverseMainFont,
                            fontFamily: 'System',
                            fontSize: 28,
                            fontWeight: '700',
                            paddingLeft: 16,
                            paddingRight: 16,
                            paddingTop: 28,
                            textAlign: 'left',
                          },
                          dimensions.width
                        )}
                      >
                        {'Wanna know how your bets are doing? 🤑'}
                      </Text>
                    </View>

                    <View
                      style={StyleSheet.applyWidth(
                        {
                          marginTop: 48,
                          paddingLeft: '4%',
                          paddingRight: '4%',
                        },
                        dimensions.width
                      )}
                    >
                      <Text
                        style={StyleSheet.applyWidth(
                          {
                            color:
                              theme.colors['Background Inverse (Main Font)'],
                            fontFamily: 'System',
                            fontSize: 20,
                            fontWeight: '700',
                            marginBottom: 48,
                            textAlign: 'left',
                          },
                          dimensions.width
                        )}
                      >
                        {
                          'Push notifications allow us to give you updates on your bets, weekly recaps & sportsbook offers.'
                        }
                      </Text>

                      <Text
                        style={StyleSheet.applyWidth(
                          {
                            color:
                              theme.colors['Background Inverse (Main Font)'],
                            fontFamily: 'System',
                            fontSize: 16,
                            fontWeight: '700',
                            marginBottom: 20,
                            marginLeft: 6,
                            textAlign: 'left',
                          },
                          dimensions.width
                        )}
                      >
                        {'Tap & Approve'}
                      </Text>

                      <View>
                        {/* Allow Notifications Unselected Touchable */}
                        <>
                          {Constants['pushNotificationsAllowed'] ? null : (
                            <Touchable
                              onPress={() => {
                                const handler = async () => {
                                  try {
                                    setGlobalVariableValue({
                                      key: 'userPushNotificationsBuffer',
                                      value: false,
                                    });
                                    setGlobalVariableValue({
                                      key: 'showAllowNotificationsNextButton',
                                      value: true,
                                    });
                                    const pushToken = await Utils.getPushToken(
                                      {}
                                    );
                                    await swaggerAPIUpdatePushNotificationTokenGET.mutateAsync(
                                      {
                                        internalId: Constants['internalId'],
                                        pushToken: pushToken,
                                      }
                                    );
                                    setGlobalVariableValue({
                                      key: 'pushNotificationsAllowed',
                                      value: pushToken,
                                    });
                                    segmentLogTrack(
                                      segment,
                                      "Allowed/Didn't Allow push notifications popup",
                                      undefined,
                                      undefined,
                                      undefined,
                                      undefined,
                                      undefined,
                                      undefined,
                                      undefined,
                                      undefined,
                                      undefined,
                                      undefined,
                                      undefined,
                                      undefined,
                                      undefined
                                    );
                                  } catch (err) {
                                    console.error(err);
                                  }
                                };
                                handler();
                              }}
                            >
                              <View
                                style={StyleSheet.applyWidth(
                                  {
                                    alignItems: 'center',
                                    backgroundColor: theme.colors.divider,
                                    borderRadius: 8,
                                    flexDirection: 'row',
                                    height: 65,
                                    justifyContent: 'space-between',
                                    paddingBottom: 12,
                                    paddingLeft: 14,
                                    paddingRight: 12,
                                    paddingTop: 12,
                                  },
                                  dimensions.width
                                )}
                              >
                                <View>
                                  <Text
                                    style={StyleSheet.applyWidth(
                                      {
                                        color:
                                          theme.colors[
                                            'Light_low_importance_text'
                                          ],
                                        fontFamily: 'System',
                                        fontSize: 16,
                                        fontWeight: '700',
                                      },
                                      dimensions.width
                                    )}
                                  >
                                    {'Allow push notifications'}
                                  </Text>
                                </View>

                                <View
                                  style={StyleSheet.applyWidth(
                                    { paddingRight: 2 },
                                    dimensions.width
                                  )}
                                >
                                  <Icon
                                    size={28}
                                    color={
                                      theme.colors['Light_low_importance_text']
                                    }
                                    name={'FontAwesome/circle-thin'}
                                  />
                                </View>
                              </View>
                            </Touchable>
                          )}
                        </>
                        {/* Allow Notifications Selected Touchable */}
                        <>
                          {!Constants['pushNotificationsAllowed'] ? null : (
                            <Touchable
                              onPress={() => {
                                try {
                                  setGlobalVariableValue({
                                    key: 'pushNotificationsAllowed',
                                    value: false,
                                  });
                                } catch (err) {
                                  console.error(err);
                                }
                              }}
                            >
                              <View
                                style={StyleSheet.applyWidth(
                                  {
                                    alignItems: 'center',
                                    borderBottomWidth: 2,
                                    borderColor: theme.colors['Primary'],
                                    borderLeftWidth: 2,
                                    borderRadius: 8,
                                    borderRightWidth: 2,
                                    borderTopWidth: 2,
                                    flexDirection: 'row',
                                    height: 65,
                                    justifyContent: 'space-between',
                                    paddingBottom: 12,
                                    paddingLeft: 12,
                                    paddingRight: 12,
                                    paddingTop: 12,
                                  },
                                  dimensions.width
                                )}
                              >
                                <View>
                                  <Text
                                    style={StyleSheet.applyWidth(
                                      {
                                        color: theme.colors['Primary'],
                                        fontFamily: 'System',
                                        fontSize: 16,
                                        fontWeight: '700',
                                      },
                                      dimensions.width
                                    )}
                                  >
                                    {'Allow push notifications'}
                                  </Text>
                                </View>

                                <View>
                                  <Icon
                                    name={'Ionicons/ios-checkmark-circle'}
                                    size={28}
                                    color={theme.colors['Primary']}
                                  />
                                </View>
                              </View>
                            </Touchable>
                          )}
                        </>
                      </View>
                    </View>
                  </View>

                  <View
                    style={StyleSheet.applyWidth(
                      {
                        borderColor: theme.colors.divider,
                        borderTopWidth: 1,
                        justifyContent: 'center',
                        minHeight: 50,
                        paddingBottom: 34,
                        paddingLeft: 34,
                        paddingRight: 34,
                        paddingTop: 32,
                      },
                      dimensions.width
                    )}
                  >
                    <View>
                      {/* Next_Enabled */}
                      <>
                        {!Constants[
                          'showAllowNotificationsNextButton'
                        ] ? null : (
                          <Button
                            onPress={() => {
                              try {
                                setGlobalVariableValue({
                                  key: 'userPushNotificationRemind',
                                  value: false,
                                });
                                setGlobalVariableValue({
                                  key: 'userPushNotificationsPrompt',
                                  value: true,
                                });
                              } catch (err) {
                                console.error(err);
                              }
                            }}
                            style={StyleSheet.applyWidth(
                              {
                                backgroundColor: theme.colors.primary,
                                borderRadius: 8,
                                borderWidth: 1,
                                color: theme.colors.strongTextOnGoldButtons,
                                fontFamily: 'System',
                                fontSize: 16,
                                fontWeight: '700',
                                minHeight: 54,
                                textAlign: 'center',
                              },
                              dimensions.width
                            )}
                            title={'Next'}
                            disabled={false}
                          >
                            {'Log In'}
                          </Button>
                        )}
                      </>
                      {/* Next_Disabled */}
                      <>
                        {Constants[
                          'showAllowNotificationsNextButton'
                        ] ? null : (
                          <Button
                            style={StyleSheet.applyWidth(
                              {
                                backgroundColor:
                                  theme.colors['Light_low_importance_text'],
                                borderRadius: 8,
                                borderWidth: 1,
                                color:
                                  theme.colors[
                                    'Background Inverse (Main Font)'
                                  ],
                                fontFamily: 'System',
                                fontSize: 16,
                                fontWeight: '700',
                                minHeight: 54,
                                textAlign: 'center',
                              },
                              dimensions.width
                            )}
                            title={'Next'}
                            disabled={true}
                          >
                            {'Log In'}
                          </Button>
                        )}
                      </>
                    </View>
                  </View>
                </View>
              </View>
            </Modal>
          </View>
        )}
      </>
      {/* Me Tutorial Modal */}
      <Modal
        visible={Constants['meScreenTutorial']}
        animationType={'slide'}
        transparent={true}
        presentationStyle={'pageSheet'}
      >
        <View
          style={StyleSheet.applyWidth({ height: '50%' }, dimensions.width)}
        />
        <View
          style={StyleSheet.applyWidth(
            {
              backgroundColor: theme.colors.background,
              borderTopLeftRadius: 20,
              borderTopRightRadius: 20,
              height: '50%',
              justifyContent: 'space-between',
              paddingBottom: 50,
              paddingLeft: 28,
              paddingRight: 28,
              paddingTop: 16,
            },
            dimensions.width
          )}
        >
          <View>
            {/* Me Tutorial 1 */}
            <>
              {!tutorialScreenCounter1(Constants['meTutorial']) ? null : (
                <View>
                  {/* Image */}
                  <View
                    style={StyleSheet.applyWidth(
                      { alignItems: 'center' },
                      dimensions.width
                    )}
                  >
                    <Image
                      style={StyleSheet.applyWidth(
                        StyleSheet.compose(
                          GlobalStyles.ImageStyles(theme)['Image'],
                          { width: 325 }
                        ),
                        dimensions.width
                      )}
                      resizeMode={'cover'}
                      source={Images.TutorialPicturesActiveBetsUpdate}
                    />
                  </View>

                  <View
                    style={StyleSheet.applyWidth(
                      { marginTop: 28 },
                      dimensions.width
                    )}
                  >
                    <Text
                      style={StyleSheet.applyWidth(
                        StyleSheet.compose(
                          GlobalStyles.TextStyles(theme)['Text'],
                          {
                            color:
                              theme.colors['Background Inverse (Main Font)'],
                            fontFamily: 'System',
                            fontSize: 20,
                            fontWeight: '700',
                          }
                        ),
                        dimensions.width
                      )}
                    >
                      {'View your Active Bets'}
                    </Text>
                  </View>

                  <View
                    style={StyleSheet.applyWidth(
                      { marginTop: 18 },
                      dimensions.width
                    )}
                  >
                    <Text
                      style={StyleSheet.applyWidth(
                        StyleSheet.compose(
                          GlobalStyles.TextStyles(theme)['Text'],
                          {
                            color:
                              theme.colors['Background Inverse (Main Font)'],
                            fontSize: 18,
                          }
                        ),
                        dimensions.width
                      )}
                    >
                      {
                        'Watch how close all your bets are to cashing in real time!'
                      }
                    </Text>
                  </View>
                </View>
              )}
            </>
            {/* Me Tutorial 2 */}
            <>
              {!tutorialScreenCounter2(Constants['meTutorial']) ? null : (
                <View>
                  {/* Image */}
                  <View
                    style={StyleSheet.applyWidth(
                      { alignItems: 'center' },
                      dimensions.width
                    )}
                  >
                    <Image
                      style={StyleSheet.applyWidth(
                        StyleSheet.compose(
                          GlobalStyles.ImageStyles(theme)['Image'],
                          { width: 325 }
                        ),
                        dimensions.width
                      )}
                      resizeMode={'cover'}
                      source={Images.TutorialPicturesSettledBetsUpdate}
                    />
                  </View>

                  <View
                    style={StyleSheet.applyWidth(
                      { marginTop: 28 },
                      dimensions.width
                    )}
                  >
                    <Text
                      style={StyleSheet.applyWidth(
                        StyleSheet.compose(
                          GlobalStyles.TextStyles(theme)['Text'],
                          {
                            color:
                              theme.colors['Background Inverse (Main Font)'],
                            fontFamily: 'System',
                            fontSize: 20,
                            fontWeight: '700',
                          }
                        ),
                        dimensions.width
                      )}
                    >
                      {'View your Settled Bets'}
                    </Text>
                  </View>

                  <View
                    style={StyleSheet.applyWidth(
                      { marginTop: 18 },
                      dimensions.width
                    )}
                  >
                    <Text
                      style={StyleSheet.applyWidth(
                        StyleSheet.compose(
                          GlobalStyles.TextStyles(theme)['Text'],
                          {
                            color:
                              theme.colors['Background Inverse (Main Font)'],
                            fontSize: 18,
                          }
                        ),
                        dimensions.width
                      )}
                    >
                      {
                        'See all your stats from across your sportsbooks. Filter bets with the filter button to find your strengths!'
                      }
                    </Text>
                  </View>
                </View>
              )}
            </>
            {/* Me Tutorial 3 */}
            <>
              {!tutorialScreenCounter3(Constants['meTutorial']) ? null : (
                <View>
                  {/* Image */}
                  <View
                    style={StyleSheet.applyWidth(
                      { alignItems: 'center' },
                      dimensions.width
                    )}
                  >
                    <Image
                      style={StyleSheet.applyWidth(
                        StyleSheet.compose(
                          GlobalStyles.ImageStyles(theme)['Image'],
                          { width: 325 }
                        ),
                        dimensions.width
                      )}
                      resizeMode={'cover'}
                      source={Images.TutorialPicturesMostProfitableUpdate}
                    />
                  </View>

                  <View
                    style={StyleSheet.applyWidth(
                      { marginTop: 28 },
                      dimensions.width
                    )}
                  >
                    <Text
                      style={StyleSheet.applyWidth(
                        StyleSheet.compose(
                          GlobalStyles.TextStyles(theme)['Text'],
                          {
                            color:
                              theme.colors['Background Inverse (Main Font)'],
                            fontFamily: 'System',
                            fontSize: 20,
                            fontWeight: '700',
                          }
                        ),
                        dimensions.width
                      )}
                    >
                      {'Discover your Most Profitable'}
                    </Text>
                  </View>

                  <View
                    style={StyleSheet.applyWidth(
                      { marginTop: 18 },
                      dimensions.width
                    )}
                  >
                    <Text
                      style={StyleSheet.applyWidth(
                        StyleSheet.compose(
                          GlobalStyles.TextStyles(theme)['Text'],
                          {
                            color:
                              theme.colors['Background Inverse (Main Font)'],
                            fontSize: 18,
                          }
                        ),
                        dimensions.width
                      )}
                    >
                      {
                        "Learn about where you're most profitable and discover your trends and grades!"
                      }
                    </Text>
                  </View>
                </View>
              )}
            </>
            {/* Me Tutorial 4 */}
            <>
              {!tutorialScreenCounter4(Constants['meTutorial']) ? null : (
                <View>
                  {/* Image */}
                  <View
                    style={StyleSheet.applyWidth(
                      { alignItems: 'center' },
                      dimensions.width
                    )}
                  >
                    <Image
                      style={StyleSheet.applyWidth(
                        StyleSheet.compose(
                          GlobalStyles.ImageStyles(theme)['Image'],
                          { width: 325 }
                        ),
                        dimensions.width
                      )}
                      resizeMode={'cover'}
                      source={Images.TutorialPicturesProfilePicture}
                    />
                  </View>

                  <View
                    style={StyleSheet.applyWidth(
                      { marginTop: 28 },
                      dimensions.width
                    )}
                  >
                    <Text
                      style={StyleSheet.applyWidth(
                        StyleSheet.compose(
                          GlobalStyles.TextStyles(theme)['Text'],
                          {
                            color:
                              theme.colors['Background Inverse (Main Font)'],
                            fontFamily: 'System',
                            fontSize: 20,
                            fontWeight: '700',
                          }
                        ),
                        dimensions.width
                      )}
                    >
                      {'Customize your profile'}
                    </Text>
                  </View>

                  <View
                    style={StyleSheet.applyWidth(
                      { marginTop: 18 },
                      dimensions.width
                    )}
                  >
                    <Text
                      style={StyleSheet.applyWidth(
                        StyleSheet.compose(
                          GlobalStyles.TextStyles(theme)['Text'],
                          {
                            color:
                              theme.colors['Background Inverse (Main Font)'],
                            fontSize: 18,
                          }
                        ),
                        dimensions.width
                      )}
                    >
                      {
                        'Click your profile card to add a picture and customize your Vault!'
                      }
                    </Text>
                  </View>
                </View>
              )}
            </>
          </View>

          <View
            style={StyleSheet.applyWidth(
              { paddingLeft: 35, paddingRight: 35 },
              dimensions.width
            )}
          >
            <View
              style={StyleSheet.applyWidth(
                {
                  alignItems: 'center',
                  flexDirection: 'row',
                  justifyContent: 'center',
                },
                dimensions.width
              )}
            >
              {/* Icon_Gold */}
              <>
                {!tutorialScreenCounter1(Constants['meTutorial']) ? null : (
                  <Icon
                    style={StyleSheet.applyWidth(
                      { marginLeft: 2, marginRight: 2 },
                      dimensions.width
                    )}
                    name={'MaterialIcons/circle'}
                    color={theme.colors['Primary']}
                    size={10}
                  />
                )}
              </>
              {/* Icon_Gray */}
              <Icon
                style={StyleSheet.applyWidth(
                  { marginLeft: 2, marginRight: 2 },
                  dimensions.width
                )}
                name={'MaterialIcons/circle'}
                size={10}
                color={theme.colors['Light_low_importance_text']}
              />
              {/* Icon_Gold */}
              <>
                {!tutorialScreenCounter2(Constants['meTutorial']) ? null : (
                  <Icon
                    style={StyleSheet.applyWidth(
                      { marginLeft: 2, marginRight: 2 },
                      dimensions.width
                    )}
                    name={'MaterialIcons/circle'}
                    color={theme.colors['Primary']}
                    size={10}
                  />
                )}
              </>
              {/* Icon_Gray */}
              <Icon
                style={StyleSheet.applyWidth(
                  { marginLeft: 2, marginRight: 2 },
                  dimensions.width
                )}
                name={'MaterialIcons/circle'}
                size={10}
                color={theme.colors['Light_low_importance_text']}
              />
              {/* Icon_Gold */}
              <>
                {!tutorialScreenCounter3(Constants['meTutorial']) ? null : (
                  <Icon
                    style={StyleSheet.applyWidth(
                      { marginLeft: 2, marginRight: 2 },
                      dimensions.width
                    )}
                    name={'MaterialIcons/circle'}
                    color={theme.colors['Primary']}
                    size={10}
                  />
                )}
              </>
              {/* Icon_Gray */}
              <Icon
                style={StyleSheet.applyWidth(
                  { marginLeft: 2, marginRight: 2 },
                  dimensions.width
                )}
                name={'MaterialIcons/circle'}
                size={10}
                color={theme.colors['Light_low_importance_text']}
              />
              {/* Icon_Gold */}
              <>
                {!tutorialScreenCounter4(Constants['meTutorial']) ? null : (
                  <Icon
                    style={StyleSheet.applyWidth(
                      { marginLeft: 2, marginRight: 2 },
                      dimensions.width
                    )}
                    name={'MaterialIcons/circle'}
                    color={theme.colors['Primary']}
                    size={10}
                  />
                )}
              </>
            </View>

            <View
              style={StyleSheet.applyWidth(
                { flexDirection: 'row', justifyContent: 'space-between' },
                dimensions.width
              )}
            >
              <View
                style={StyleSheet.applyWidth(
                  { width: '45%' },
                  dimensions.width
                )}
              >
                {/* Back */}
                <Button
                  onPress={() => {
                    try {
                      if (tutorialScreenCounter1(Constants['meTutorial'])) {
                        return;
                      }
                      setGlobalVariableValue({
                        key: 'meTutorial',
                        value: Constants['meTutorial'] - 1,
                      });
                    } catch (err) {
                      console.error(err);
                    }
                  }}
                  style={StyleSheet.applyWidth(
                    StyleSheet.compose(
                      GlobalStyles.ButtonStyles(theme)['Button'],
                      {
                        backgroundColor: theme.colors['Divider'],
                        color: theme.colors['Light_low_importance_text'],
                        fontSize: 16,
                        marginTop: 24,
                        paddingBottom: 15,
                        paddingTop: 15,
                      }
                    ),
                    dimensions.width
                  )}
                  title={'Back'}
                />
              </View>

              <View
                style={StyleSheet.applyWidth(
                  { width: '45%' },
                  dimensions.width
                )}
              >
                {/* Next */}
                <>
                  {!tutorialScreenCounter123(Constants['meTutorial']) ? null : (
                    <Button
                      onPress={() => {
                        try {
                          setGlobalVariableValue({
                            key: 'meTutorial',
                            value: Constants['meTutorial'] + 1,
                          });
                        } catch (err) {
                          console.error(err);
                        }
                      }}
                      style={StyleSheet.applyWidth(
                        StyleSheet.compose(
                          GlobalStyles.ButtonStyles(theme)['Button'],
                          {
                            color: theme.colors['Strong_Text_on_gold_buttons'],
                            fontSize: 16,
                            marginTop: 24,
                            paddingBottom: 15,
                            paddingTop: 15,
                          }
                        ),
                        dimensions.width
                      )}
                      title={'Next'}
                    />
                  )}
                </>
                {/* Close */}
                <>
                  {!tutorialScreenCounter4(Constants['meTutorial']) ? null : (
                    <Button
                      onPress={() => {
                        try {
                          setGlobalVariableValue({
                            key: 'meScreenTutorial',
                            value: false,
                          });
                          setGlobalVariableValue({
                            key: 'meTutorial',
                            value: 1,
                          });
                          segmentLogTrack(
                            segment,
                            'Me Screen Tutorial Completed',
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined,
                            undefined
                          );
                        } catch (err) {
                          console.error(err);
                        }
                      }}
                      style={StyleSheet.applyWidth(
                        StyleSheet.compose(
                          GlobalStyles.ButtonStyles(theme)['Button'],
                          {
                            color: theme.colors['Strong_Text_on_gold_buttons'],
                            fontSize: 16,
                            marginTop: 24,
                            paddingBottom: 15,
                            paddingTop: 15,
                          }
                        ),
                        dimensions.width
                      )}
                      title={'Close'}
                    />
                  )}
                </>
              </View>
            </View>
          </View>
        </View>
      </Modal>
    </ScreenContainer>
  );
};

export default withTheme(ProfileScreen);
